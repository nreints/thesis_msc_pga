diff --git a/code/.DS_Store b/code/.DS_Store
index 850d2c2..918b845 100644
Binary files a/code/.DS_Store and b/code/.DS_Store differ
diff --git a/code/Old/.DS_Store b/code/Old/.DS_Store
index 3f4cd5c..5ebb9db 100644
Binary files a/code/Old/.DS_Store and b/code/Old/.DS_Store differ
diff --git a/code/Old/Tutorial_mujoco.ipynb b/code/Old/Tutorial_mujoco.ipynb
index 8e94c72..c766642 100644
--- a/code/Old/Tutorial_mujoco.ipynb
+++ b/code/Old/Tutorial_mujoco.ipynb
@@ -1,1918 +1,1919 @@
 {
-  "cells": [
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "MpkYHwCqk7W-"
-      },
-      "source": [
-        "# <div align=\"center\">**`dm_control` tutorial**</div>\n",
-        "# <div align=\"center\">[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/deepmind/dm_control/blob/master/tutorial.ipynb)</div>\n",
-        "\n",
-        "\n",
-        "\n",
-        "\n",
-        "\n",
-        "\n"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "_UbO9uhtBSX5"
-      },
-      "source": [
-        "> <p><small><small>Copyright 2020 The dm_control Authors.</small></p>\n",
-        "> <p><small><small>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">http://www.apache.org/licenses/LICENSE-2.0</a>.</small></small></p>\n",
-        "> <p><small><small>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</small></small></p>"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "aThGKGp0cD76"
-      },
-      "source": [
-        "This notebook provides an overview tutorial of DeepMind's `dm_control` package, hosted at the [deepmind/dm_control](https://github.com/deepmind/dm_control) repository on GitHub.\n",
-        "\n",
-        "It is adjunct to this [tech report](http://arxiv.org/abs/2006.12983).\n",
-        "\n",
-        "**A Colab runtime with GPU acceleration is required.** If you're using a CPU-only runtime, you can switch using the menu \"Runtime > Change runtime type\"."
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "YkBQUjm6gbGF"
-      },
-      "source": [
-        "<!-- Internal installation instructions. -->"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "YvyGCsgSCxHQ"
-      },
-      "source": [
-        "### Installing `dm_control` on Colab"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": 1,
-      "metadata": {
-        "id": "IbZxYDxzoz5R"
-      },
-      "outputs": [
-        {
-          "ename": "FileNotFoundError",
-          "evalue": "[Errno 2] No such file or directory: 'nvidia-smi'",
-          "output_type": "error",
-          "traceback": [
-            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
-            "\u001b[1;32m/Users/nienkereints/Desktop/MSc Thesis/code/Tutorial_mujoco.ipynb Cell 6'\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=1'>2</a>\u001b[0m \u001b[39mimport\u001b[39;00m \u001b[39mdistutils\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39mutil\u001b[39;00m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=2'>3</a>\u001b[0m \u001b[39mimport\u001b[39;00m \u001b[39msubprocess\u001b[39;00m\n\u001b[0;32m----> <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=3'>4</a>\u001b[0m \u001b[39mif\u001b[39;00m subprocess\u001b[39m.\u001b[39;49mrun(\u001b[39m'\u001b[39;49m\u001b[39mnvidia-smi\u001b[39;49m\u001b[39m'\u001b[39;49m)\u001b[39m.\u001b[39mreturncode:\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=4'>5</a>\u001b[0m   \u001b[39mraise\u001b[39;00m \u001b[39mRuntimeError\u001b[39;00m(\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=5'>6</a>\u001b[0m       \u001b[39m'\u001b[39m\u001b[39mCannot communicate with GPU. \u001b[39m\u001b[39m'\u001b[39m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=6'>7</a>\u001b[0m       \u001b[39m'\u001b[39m\u001b[39mMake sure you are using a GPU Colab runtime. \u001b[39m\u001b[39m'\u001b[39m\n\u001b[1;32m      <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=7'>8</a>\u001b[0m       \u001b[39m'\u001b[39m\u001b[39mGo to the Runtime menu and select Choose runtime type.\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[1;32m     <a href='vscode-notebook-cell:/Users/nienkereints/Desktop/MSc%20Thesis/code/Tutorial_mujoco.ipynb#ch0000005?line=9'>10</a>\u001b[0m mujoco_dir \u001b[39m=\u001b[39m \u001b[39m\"\u001b[39m\u001b[39m$HOME/.mujoco\u001b[39m\u001b[39m\"\u001b[39m\n",
-            "File \u001b[0;32m/opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py:505\u001b[0m, in \u001b[0;36mrun\u001b[0;34m(input, capture_output, timeout, check, *popenargs, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=501'>502</a>\u001b[0m     kwargs[\u001b[39m'\u001b[39m\u001b[39mstdout\u001b[39m\u001b[39m'\u001b[39m] \u001b[39m=\u001b[39m PIPE\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=502'>503</a>\u001b[0m     kwargs[\u001b[39m'\u001b[39m\u001b[39mstderr\u001b[39m\u001b[39m'\u001b[39m] \u001b[39m=\u001b[39m PIPE\n\u001b[0;32m--> <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=504'>505</a>\u001b[0m \u001b[39mwith\u001b[39;00m Popen(\u001b[39m*\u001b[39;49mpopenargs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs) \u001b[39mas\u001b[39;00m process:\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=505'>506</a>\u001b[0m     \u001b[39mtry\u001b[39;00m:\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=506'>507</a>\u001b[0m         stdout, stderr \u001b[39m=\u001b[39m process\u001b[39m.\u001b[39mcommunicate(\u001b[39minput\u001b[39m, timeout\u001b[39m=\u001b[39mtimeout)\n",
-            "File \u001b[0;32m/opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py:951\u001b[0m, in \u001b[0;36mPopen.__init__\u001b[0;34m(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, user, group, extra_groups, encoding, errors, text, umask)\u001b[0m\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=946'>947</a>\u001b[0m         \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mtext_mode:\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=947'>948</a>\u001b[0m             \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mstderr \u001b[39m=\u001b[39m io\u001b[39m.\u001b[39mTextIOWrapper(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mstderr,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=948'>949</a>\u001b[0m                     encoding\u001b[39m=\u001b[39mencoding, errors\u001b[39m=\u001b[39merrors)\n\u001b[0;32m--> <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=950'>951</a>\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_execute_child(args, executable, preexec_fn, close_fds,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=951'>952</a>\u001b[0m                         pass_fds, cwd, env,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=952'>953</a>\u001b[0m                         startupinfo, creationflags, shell,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=953'>954</a>\u001b[0m                         p2cread, p2cwrite,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=954'>955</a>\u001b[0m                         c2pread, c2pwrite,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=955'>956</a>\u001b[0m                         errread, errwrite,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=956'>957</a>\u001b[0m                         restore_signals,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=957'>958</a>\u001b[0m                         gid, gids, uid, umask,\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=958'>959</a>\u001b[0m                         start_new_session)\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=959'>960</a>\u001b[0m \u001b[39mexcept\u001b[39;00m:\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=960'>961</a>\u001b[0m     \u001b[39m# Cleanup if the child failed starting.\u001b[39;00m\n\u001b[1;32m    <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=961'>962</a>\u001b[0m     \u001b[39mfor\u001b[39;00m f \u001b[39min\u001b[39;00m \u001b[39mfilter\u001b[39m(\u001b[39mNone\u001b[39;00m, (\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mstdin, \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mstdout, \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mstderr)):\n",
-            "File \u001b[0;32m/opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py:1821\u001b[0m, in \u001b[0;36mPopen._execute_child\u001b[0;34m(self, args, executable, preexec_fn, close_fds, pass_fds, cwd, env, startupinfo, creationflags, shell, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite, restore_signals, gid, gids, uid, umask, start_new_session)\u001b[0m\n\u001b[1;32m   <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=1818'>1819</a>\u001b[0m     \u001b[39mif\u001b[39;00m errno_num \u001b[39m!=\u001b[39m \u001b[39m0\u001b[39m:\n\u001b[1;32m   <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=1819'>1820</a>\u001b[0m         err_msg \u001b[39m=\u001b[39m os\u001b[39m.\u001b[39mstrerror(errno_num)\n\u001b[0;32m-> <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=1820'>1821</a>\u001b[0m     \u001b[39mraise\u001b[39;00m child_exception_type(errno_num, err_msg, err_filename)\n\u001b[1;32m   <a href='file:///opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py?line=1821'>1822</a>\u001b[0m \u001b[39mraise\u001b[39;00m child_exception_type(err_msg)\n",
-            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'nvidia-smi'"
-          ]
-        }
-      ],
-      "source": [
-        "#@title Run to install MuJoCo and `dm_control`\n",
-        "import distutils.util\n",
-        "import subprocess\n",
-        "if subprocess.run('nvidia-smi').returncode:\n",
-        "  raise RuntimeError(\n",
-        "      'Cannot communicate with GPU. '\n",
-        "      'Make sure you are using a GPU Colab runtime. '\n",
-        "      'Go to the Runtime menu and select Choose runtime type.')\n",
-        "\n",
-        "mujoco_dir = \"$HOME/.mujoco\"\n",
-        "\n",
-        "print('Installing OpenGL dependencies...')\n",
-        "!apt-get update -qq\n",
-        "!apt-get install -qq -y --no-install-recommends libglew2.0 > /dev/null\n",
-        "\n",
-        "print('Downloading MuJoCo...')\n",
-        "BASE_URL = 'https://github.com/deepmind/mujoco/releases/download'\n",
-        "MUJOCO_VERSION = '2.1.1'\n",
-        "MUJOCO_ARCHIVE = (\n",
-        "    f'mujoco-{MUJOCO_VERSION}-{distutils.util.get_platform()}.tar.gz')\n",
-        "!wget -q \"{BASE_URL}/{MUJOCO_VERSION}/{MUJOCO_ARCHIVE}\"\n",
-        "!wget -q \"{BASE_URL}/{MUJOCO_VERSION}/{MUJOCO_ARCHIVE}.sha256\"\n",
-        "check_result = !shasum -c \"{MUJOCO_ARCHIVE}.sha256\"\n",
-        "if _exit_code:\n",
-        "  raise RuntimeError(\n",
-        "      'Downloaded MuJoCo archive is corrupted (checksum mismatch)')\n",
-        "\n",
-        "print('Unpacking MuJoCo...')\n",
-        "MUJOCO_DIR = '$HOME/.mujoco'\n",
-        "!mkdir -p \"{MUJOCO_DIR}\"\n",
-        "!tar -zxf {MUJOCO_ARCHIVE} -C \"{MUJOCO_DIR}\"\n",
-        "\n",
-        "# Configure dm_control to use the EGL rendering backend (requires GPU)\n",
-        "%env MUJOCO_GL=egl\n",
-        "\n",
-        "print('Installing dm_control...')\n",
-        "# Version 0.0.416848645 is the first one to support MuJoCo 2.1.1.\n",
-        "!pip install -q dm_control>=0.0.416848645\n",
-        "\n",
-        "print('Checking that the dm_control installation succeeded...')\n",
-        "try:\n",
-        "  from dm_control import suite\n",
-        "  env = suite.load('cartpole', 'swingup')\n",
-        "  pixels = env.physics.render()\n",
-        "except Exception as e:\n",
-        "  raise e from RuntimeError(\n",
-        "      'Something went wrong during installation. Check the shell output above '\n",
-        "      'for more information.\\n'\n",
-        "      'If using a hosted Colab runtime, make sure you enable GPU acceleration '\n",
-        "      'by going to the Runtime menu and selecting \"Choose runtime type\".')\n",
-        "else:\n",
-        "  del suite, env, pixels\n",
-        "\n",
-        "!echo Installed dm_control $(pip show dm_control | grep -Po \"(?<=Version: ).+\")"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "wtDN43hIJh2C"
-      },
-      "source": [
-        "# Imports\n",
-        "\n",
-        "Run both of these cells:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "cellView": "form",
-        "id": "T5f4w3Kq2X14"
-      },
-      "outputs": [],
-      "source": [
-        "#@title All `dm_control` imports required for this tutorial\n",
-        "\n",
-        "# The basic mujoco wrapper.\n",
-        "from dm_control import mujoco\n",
-        "\n",
-        "# Access to enums and MuJoCo library functions.\n",
-        "from dm_control.mujoco.wrapper.mjbindings import enums\n",
-        "from dm_control.mujoco.wrapper.mjbindings import mjlib\n",
-        "\n",
-        "# PyMJCF\n",
-        "from dm_control import mjcf\n",
-        "\n",
-        "# Composer high level imports\n",
-        "from dm_control import composer\n",
-        "from dm_control.composer.observation import observable\n",
-        "from dm_control.composer import variation\n",
-        "\n",
-        "# Imports for Composer tutorial example\n",
-        "from dm_control.composer.variation import distributions\n",
-        "from dm_control.composer.variation import noises\n",
-        "from dm_control.locomotion.arenas import floors\n",
-        "\n",
-        "# Control Suite\n",
-        "from dm_control import suite\n",
-        "\n",
-        "# Run through corridor example\n",
-        "from dm_control.locomotion.walkers import cmu_humanoid\n",
-        "from dm_control.locomotion.arenas import corridors as corridor_arenas\n",
-        "from dm_control.locomotion.tasks import corridors as corridor_tasks\n",
-        "\n",
-        "# Soccer\n",
-        "from dm_control.locomotion import soccer\n",
-        "\n",
-        "# Manipulation\n",
-        "from dm_control import manipulation"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "gKc1FNhKiVJX"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Other imports and helper functions\n",
-        "\n",
-        "# General\n",
-        "import copy\n",
-        "import os\n",
-        "import itertools\n",
-        "from IPython.display import clear_output\n",
-        "import numpy as np\n",
-        "\n",
-        "# Graphics-related\n",
-        "import matplotlib\n",
-        "import matplotlib.animation as animation\n",
-        "import matplotlib.pyplot as plt\n",
-        "from IPython.display import HTML\n",
-        "import PIL.Image\n",
-        "# Internal loading of video libraries.\n",
-        "\n",
-        "# Use svg backend for figure rendering\n",
-        "%config InlineBackend.figure_format = 'svg'\n",
-        "\n",
-        "# Font sizes\n",
-        "SMALL_SIZE = 8\n",
-        "MEDIUM_SIZE = 10\n",
-        "BIGGER_SIZE = 12\n",
-        "plt.rc('font', size=SMALL_SIZE)          # controls default text sizes\n",
-        "plt.rc('axes', titlesize=SMALL_SIZE)     # fontsize of the axes title\n",
-        "plt.rc('axes', labelsize=MEDIUM_SIZE)    # fontsize of the x and y labels\n",
-        "plt.rc('xtick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\n",
-        "plt.rc('ytick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\n",
-        "plt.rc('legend', fontsize=SMALL_SIZE)    # legend fontsize\n",
-        "plt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title\n",
-        "\n",
-        "# Inline video helper function\n",
-        "if os.environ.get('COLAB_NOTEBOOK_TEST', False):\n",
-        "  # We skip video generation during tests, as it is quite expensive.\n",
-        "  display_video = lambda *args, **kwargs: None\n",
-        "else:\n",
-        "  def display_video(frames, framerate=30):\n",
-        "    height, width, _ = frames[0].shape\n",
-        "    dpi = 70\n",
-        "    orig_backend = matplotlib.get_backend()\n",
-        "    matplotlib.use('Agg')  # Switch to headless 'Agg' to inhibit figure rendering.\n",
-        "    fig, ax = plt.subplots(1, 1, figsize=(width / dpi, height / dpi), dpi=dpi)\n",
-        "    matplotlib.use(orig_backend)  # Switch back to the original backend.\n",
-        "    ax.set_axis_off()\n",
-        "    ax.set_aspect('equal')\n",
-        "    ax.set_position([0, 0, 1, 1])\n",
-        "    im = ax.imshow(frames[0])\n",
-        "    def update(frame):\n",
-        "      im.set_data(frame)\n",
-        "      return [im]\n",
-        "    interval = 1000/framerate\n",
-        "    anim = animation.FuncAnimation(fig=fig, func=update, frames=frames,\n",
-        "                                   interval=interval, blit=True, repeat=False)\n",
-        "    return HTML(anim.to_html5_video())\n",
-        "\n",
-        "# Seed numpy's global RNG so that cell outputs are deterministic. We also try to\n",
-        "# use RandomState instances that are local to a single cell wherever possible.\n",
-        "np.random.seed(42)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "jZXz9rPYGA-Y"
-      },
-      "source": [
-        "# Model definition, compilation and rendering\n",
-        "\n"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "MRBaZsf1d7Gb"
-      },
-      "source": [
-        "We begin by describing some basic concepts of the [MuJoCo](http://mujoco.org/) physics simulation library, but recommend the [official documentation](http://mujoco.org/book/) for details.\n",
-        "\n",
-        "Let's define a simple model with two geoms and a light."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "ZS2utl59ZTsr"
-      },
-      "outputs": [],
-      "source": [
-        "#@title A static model {vertical-output: true}\n",
-        "\n",
-        "static_model = \"\"\"\n",
-        "<mujoco>\n",
-        "  <worldbody>\n",
-        "    <light name=\"top\" pos=\"0 0 1\"/>\n",
-        "    <geom name=\"red_box\" type=\"box\" size=\".2 .2 .2\" rgba=\"1 0 0 1\"/>\n",
-        "    <geom name=\"green_sphere\" pos=\".2 .2 .2\" size=\".1\" rgba=\"0 1 0 1\"/>\n",
-        "  </worldbody>\n",
-        "</mujoco>\n",
-        "\"\"\"\n",
-        "physics = mujoco.Physics.from_xml_string(static_model)\n",
-        "pixels = physics.render()\n",
-        "PIL.Image.fromarray(pixels)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "p4vPllljTJh8"
-      },
-      "source": [
-        "`static_model` is written in MuJoCo's XML-based [MJCF](http://www.mujoco.org/book/modeling.html) modeling language. The `from_xml_string()` method invokes the model compiler, which instantiates the library's internal data structures. These can be accessed via the `physics` object, see below."
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "MdUF2UYmR4TA"
-      },
-      "source": [
-        "## Adding DOFs and simulating, advanced rendering\n",
-        "This is a perfectly legitimate model, but if we simulate it, nothing will happen except for time advancing. This is because this model has no degrees of freedom (DOFs). We add DOFs by adding **joints** to bodies, specifying how they can move with respect to their parents. Let us add a hinge joint and re-render, visualizing the joint axis."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "R7zokzd_yeEg"
-      },
-      "outputs": [],
-      "source": [
-        "#@title A child body with a joint { vertical-output: true }\n",
-        "\n",
-        "swinging_body = \"\"\"\n",
-        "<mujoco>\n",
-        "  <worldbody>\n",
-        "    <light name=\"top\" pos=\"0 0 1\"/>\n",
-        "    <body name=\"box_and_sphere\" euler=\"0 0 -30\">  \n",
-        "      <joint name=\"swing\" type=\"hinge\" axis=\"1 -1 0\" pos=\"-.2 -.2 -.2\"/>\n",
-        "      <geom name=\"red_box\" type=\"box\" size=\".2 .2 .2\" rgba=\"1 0 0 1\"/>\n",
-        "      <geom name=\"green_sphere\" pos=\".2 .2 .2\" size=\".1\" rgba=\"0 1 0 1\"/>\n",
-        "    </body>\n",
-        "  </worldbody>\n",
-        "</mujoco>\n",
-        "\"\"\"\n",
-        "physics = mujoco.Physics.from_xml_string(swinging_body)\n",
-        "# Visualize the joint axis.\n",
-        "scene_option = mujoco.wrapper.core.MjvOption()\n",
-        "scene_option.flags[enums.mjtVisFlag.mjVIS_JOINT] = True\n",
-        "pixels = physics.render(scene_option=scene_option)\n",
-        "PIL.Image.fromarray(pixels)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "INOGGV0PTQus"
-      },
-      "source": [
-        "The things that move (and which have inertia) are called *bodies*. The body's child `joint` specifies how that body can move with respect to its parent, in this case `box_and_sphere` w.r.t the `worldbody`. \n",
-        "\n",
-        "Note that the body's frame is **rotated** with an `euler` directive, and its children, the geoms and the joint, rotate with it. This is to emphasize the local-to-parent-frame nature of position and orientation directives in MJCF.\n",
-        "\n",
-        "Let's make a video, to get a sense of the dynamics and to see the body swinging under gravity."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "Z_57VMUDpGrj"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Making a video {vertical-output: true}\n",
-        "\n",
-        "duration = 2    # (seconds)\n",
-        "framerate = 30  # (Hz)\n",
-        "\n",
-        "# Visualize the joint axis\n",
-        "scene_option = mujoco.wrapper.core.MjvOption()\n",
-        "scene_option.flags[enums.mjtVisFlag.mjVIS_JOINT] = True\n",
-        "\n",
-        "# Simulate and display video.\n",
-        "frames = []\n",
-        "physics.reset()  # Reset state and time\n",
-        "while physics.data.time < duration:\n",
-        "  physics.step()\n",
-        "  if len(frames) < physics.data.time * framerate:\n",
-        "    pixels = physics.render(scene_option=scene_option)\n",
-        "    frames.append(pixels)\n",
-        "display_video(frames, framerate)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "yYvS1UaciMX_"
-      },
-      "source": [
-        "Note how we collect the video frames. Because physics simulation timesteps are generally much smaller than framerates (the default timestep is 2ms), we don't render after each step."
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "nQ8XOnRQx7T1"
-      },
-      "source": [
-        "## Rendering options\n",
-        "\n",
-        "Like joint visualisation, additional rendering options are exposed as parameters to the `render` method."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "AQITZiIgx7T2"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Enable transparency and frame visualization {vertical-output: true}\n",
-        "\n",
-        "scene_option = mujoco.wrapper.core.MjvOption()\n",
-        "scene_option.frame = enums.mjtFrame.mjFRAME_GEOM\n",
-        "scene_option.flags[enums.mjtVisFlag.mjVIS_TRANSPARENT] = True\n",
-        "pixels = physics.render(scene_option=scene_option)\n",
-        "PIL.Image.fromarray(pixels)"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "PDDgY48vx7T6"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Depth rendering {vertical-output: true}\n",
-        "\n",
-        "# depth is a float array, in meters.\n",
-        "depth = physics.render(depth=True)\n",
-        "# Shift nearest values to the origin.\n",
-        "depth -= depth.min()\n",
-        "# Scale by 2 mean distances of near rays.\n",
-        "depth /= 2*depth[depth <= 1].mean()\n",
-        "# Scale to [0, 255]\n",
-        "pixels = 255*np.clip(depth, 0, 1)\n",
-        "PIL.Image.fromarray(pixels.astype(np.uint8))"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "PNwiIrgpx7T8"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Segmentation rendering {vertical-output: true}\n",
-        "\n",
-        "seg = physics.render(segmentation=True)\n",
-        "# Display the contents of the first channel, which contains object\n",
-        "# IDs. The second channel, seg[:, :, 1], contains object types.\n",
-        "geom_ids = seg[:, :, 0]\n",
-        "# Infinity is mapped to -1\n",
-        "geom_ids = geom_ids.astype(np.float64) + 1\n",
-        "# Scale to [0, 1]\n",
-        "geom_ids = geom_ids / geom_ids.max()\n",
-        "pixels = 255*geom_ids\n",
-        "PIL.Image.fromarray(pixels.astype(np.uint8))\n"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "uCJQlv3cQcJQ"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Projecting from world to camera coordinates {vertical-output: true}\n",
-        "\n",
-        "# Get the world coordinates of the box corners\n",
-        "box_pos = physics.named.data.geom_xpos['red_box']\n",
-        "box_mat = physics.named.data.geom_xmat['red_box'].reshape(3, 3)\n",
-        "box_size = physics.named.model.geom_size['red_box']\n",
-        "offsets = np.array([-1, 1]) * box_size[:, None]\n",
-        "xyz_local = np.stack(itertools.product(*offsets)).T\n",
-        "xyz_global = box_pos[:, None] + box_mat @ xyz_local\n",
-        "\n",
-        "# Camera matrices multiply homogenous [x, y, z, 1] vectors.\n",
-        "corners_homogeneous = np.ones((4, xyz_global.shape[1]), dtype=float)\n",
-        "corners_homogeneous[:3, :] = xyz_global\n",
-        "\n",
-        "# Get the camera matrix.\n",
-        "camera = mujoco.Camera(physics)\n",
-        "camera_matrix = camera.matrix\n",
-        "\n",
-        "# Project world coordinates into pixel space. See:\n",
-        "# https://en.wikipedia.org/wiki/3D_projection#Mathematical_formula\n",
-        "xs, ys, s = camera_matrix @ corners_homogeneous\n",
-        "# x and y are in the pixel coordinate system.\n",
-        "x = xs / s\n",
-        "y = ys / s\n",
-        "\n",
-        "# Render the camera view and overlay the projected corner coordinates.\n",
-        "pixels = camera.render()\n",
-        "fig, ax = plt.subplots(1, 1)\n",
-        "ax.imshow(pixels)\n",
-        "ax.plot(x, y, '+', c='w')\n",
-        "ax.set_axis_off()"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "gf9h_wi9weet"
-      },
-      "source": [
-        "# MuJoCo basics and named indexing"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "NCcZxrDDB1Cj"
-      },
-      "source": [
-        "## `mjModel`\n",
-        "MuJoCo's `mjModel`, encapsulated in `physics.model`, contains the *model description*, including the default initial state and other fixed quantities which are not a function of the state, e.g. the positions of geoms in the frame of their parent body. The (x, y, z) offsets of the `box` and `sphere` geoms, relative their parent body `box_and_sphere` are given by `model.geom_pos`:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "wx8NANvOF8g1"
-      },
-      "outputs": [],
-      "source": [
-        "physics.model.geom_pos"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "v9O1VNdmHn_K"
-      },
-      "source": [
-        "Docstrings of attributes provide short descriptions."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "8_0MwaeYHn_N"
-      },
-      "outputs": [],
-      "source": [
-        "help(type(physics.model).geom_pos)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "Wee5ATLtIQn_"
-      },
-      "source": [
-        "The `model.opt` structure contains global quantities like"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "BhzbZIfDIU2-"
-      },
-      "outputs": [],
-      "source": [
-        "print('timestep', physics.model.opt.timestep)\n",
-        "print('gravity', physics.model.opt.gravity)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "t5hY0fyXFLcf"
-      },
-      "source": [
-        "## `mjData`\n",
-        "`mjData`, encapsulated in `physics.data`, contains the *state* and quantities that depend on it. The state is made up of time, generalized positions and generalised velocities. These are respectively `data.time`, `data.qpos` and `data.qvel`. \n",
-        "\n",
-        "Let's print the state of the swinging body where we left it:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "acwZtDwp9mQU"
-      },
-      "outputs": [],
-      "source": [
-        "print(physics.data.time, physics.data.qpos, physics.data.qvel)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "7YlmcLcA-WQu"
-      },
-      "source": [
-        "`physics.data` also contains functions of the state, for example the cartesian positions of objects in the world frame. The (x, y, z) positions of our two geoms are in `data.geom_xpos`:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "CPwDcAQ0-uUE"
-      },
-      "outputs": [],
-      "source": [
-        "print(physics.data.geom_xpos)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "Z0UodCxS_v49"
-      },
-      "source": [
-        "## Named indexing\n",
-        "\n",
-        "The semantics of the above arrays are made clearer using the `named` wrapper, which assigns names to rows and type names to columns."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "cLARcaK6-xCU"
-      },
-      "outputs": [],
-      "source": [
-        "print(physics.named.data.geom_xpos)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "wgXOUZNZHIx6"
-      },
-      "source": [
-        "Note how `model.geom_pos` and `data.geom_xpos` have similar semantics but very different meanings."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "-cW61ClRHS8a"
-      },
-      "outputs": [],
-      "source": [
-        "print(physics.named.model.geom_pos)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "-lQ0AChVASMv"
-      },
-      "source": [
-        "Name strings can be used to index **into** the relevant quantities, making code much more readable and robust."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "Rj4ad9fQAnFZ"
-      },
-      "outputs": [],
-      "source": [
-        "physics.named.data.geom_xpos['green_sphere', 'z']"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "axr_p6APAzFn"
-      },
-      "source": [
-        "Joint names can be used to index into quantities in configuration space (beginning with the letter `q`):"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "hluF9aDG9O1W"
-      },
-      "outputs": [],
-      "source": [
-        "physics.named.data.qpos['swing']"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "3IhfyD2Q1pjv"
-      },
-      "source": [
-        "We can mix NumPy slicing operations with named indexing. As an example, we can set the color of the box using its name (`\"red_box\"`) as an index into the rows of the `geom_rgba` array. "
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "f5vVUullUvWH"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Changing colors using named indexing{vertical-output: true}\n",
-        "\n",
-        "random_rgb = np.random.rand(3)\n",
-        "physics.named.model.geom_rgba['red_box', :3] = random_rgb\n",
-        "pixels = physics.render()\n",
-        "PIL.Image.fromarray(pixels)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "elzPPdq-KhLI"
-      },
-      "source": [
-        "Note that while `physics.model` quantities will not be changed by the engine, we can change them ourselves between steps. This however is generally not recommended, the preferred approach being to modify the model at the XML level using the PyMJCF library, see below."
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "22ENjtVuhwsm"
-      },
-      "source": [
-        "## Setting the state with `reset_context()`\n",
-        "\n",
-        "In order for `data` quantities that are functions of the state to be in sync with the state, MuJoCo's `mj_step1()` needs to be called. This is facilitated by the `reset_context()` context, please see in-depth discussion in Section 2.1 of the [tech report](https://arxiv.org/abs/2006.12983)."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "WBPprCtWgXFN"
-      },
-      "outputs": [],
-      "source": [
-        "physics.named.data.qpos['swing'] = np.pi\n",
-        "print('Without reset_context, spatial positions are not updated:',\n",
-        "      physics.named.data.geom_xpos['green_sphere', ['z']])\n",
-        "with physics.reset_context():\n",
-        "  physics.named.data.qpos['swing'] = np.pi\n",
-        "print('After reset_context, positions are up-to-date:',\n",
-        "      physics.named.data.geom_xpos['green_sphere', ['z']])"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "SHppAOjvSupc"
-      },
-      "source": [
-        "## Free bodies: the self-inverting \"tippe-top\"\n",
-        "\n",
-        "A free body is a body with a `free` joint, with 6 movement DOFs: 3 translations and 3 rotations. We could give our `box_and_sphere` body a free joint and watch it fall, but let's look at something more interesting. A \"tippe top\" is a spinning toy which flips itself on its head ([Wikipedia](https://en.wikipedia.org/wiki/Tippe_top)). We model it as follows:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "xasXQpVMjIwA"
-      },
-      "outputs": [],
-      "source": [
-        "#@title The \"tippe-top\" model{vertical-output: true}\n",
-        "\n",
-        "tippe_top = \"\"\"\n",
-        "<mujoco model=\"tippe top\">\n",
-        "  <option integrator=\"RK4\"/>\n",
-        "  <asset>\n",
-        "    <texture name=\"grid\" type=\"2d\" builtin=\"checker\" rgb1=\".1 .2 .3\" \n",
-        "     rgb2=\".2 .3 .4\" width=\"300\" height=\"300\"/>\n",
-        "    <material name=\"grid\" texture=\"grid\" texrepeat=\"8 8\" reflectance=\".2\"/>\n",
-        "  </asset>\n",
-        "  <worldbody>\n",
-        "    <geom size=\".2 .2 .01\" type=\"plane\" material=\"grid\"/>\n",
-        "    <light pos=\"0 0 .6\"/>\n",
-        "    <camera name=\"closeup\" pos=\"0 -.1 .07\" xyaxes=\"1 0 0 0 1 2\"/>\n",
-        "    <body name=\"top\" pos=\"0 0 .02\">\n",
-        "      <freejoint/>\n",
-        "      <geom name=\"ball\" type=\"sphere\" size=\".02\" />\n",
-        "      <geom name=\"stem\" type=\"cylinder\" pos=\"0 0 .02\" size=\"0.004 .008\"/>\n",
-        "      <geom name=\"ballast\" type=\"box\" size=\".023 .023 0.005\"  pos=\"0 0 -.015\" \n",
-        "       contype=\"0\" conaffinity=\"0\" group=\"3\"/>\n",
-        "    </body>\n",
-        "  </worldbody>\n",
-        "  <keyframe>\n",
-        "    <key name=\"spinning\" qpos=\"0 0 0.02 1 0 0 0\" qvel=\"0 0 0 0 1 200\" />\n",
-        "  </keyframe>\n",
-        "</mujoco>\n",
-        "\"\"\"\n",
-        "physics = mujoco.Physics.from_xml_string(tippe_top)\n",
-        "PIL.Image.fromarray(physics.render(camera_id='closeup'))"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "bvHlr6maJYIG"
-      },
-      "source": [
-        "Note several new features of this model definition:\n",
-        "0. The free joint is added with the `<freejoint/>` clause, which is similar to `<joint type=\"free\"/>`, but prohibits unphysical attributes like friction or stiffness.\n",
-        "1. We use the `<option/>` clause to set the integrator to the more accurate Runge Kutta 4th order.\n",
-        "2. We define the floor's grid material inside the `<asset/>` clause and reference it in the floor geom. \n",
-        "3. We use an invisible and non-colliding box geom called `ballast` to move the top's center-of-mass lower. Having a low center of mass is  (counter-intuitively) required for the flipping behaviour to occur.\n",
-        "4. We save our initial spinning state as a keyframe. It has a high rotational velocity around the z-axis, but is not perfectly oriented with the world.\n",
-        "5. We define a `<camera>` in our model, and then render from it using the `camera_id` argument to `render()`.\n",
-        "Let us examine the state:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "o4S9nYhHOKmb"
-      },
-      "outputs": [],
-      "source": [
-        "print('positions', physics.data.qpos)\n",
-        "print('velocities', physics.data.qvel)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "71UgzBAqWdtZ"
-      },
-      "source": [
-        "The velocities are easy to interpret, 6 zeros, one for each DOF. What about the length-7 positions? We can see the initial 2cm height of the body; the subsequent four numbers are the 3D orientation, defined by a *unit quaternion*. These normalized four-vectors, which preserve the topology of the orientation group, are the reason that `data.qpos` can be bigger than `data.qvel`: 3D orientations are represented with **4** numbers while angular velocities are **3** numbers."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "5P4HkhKNGQvs"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Video of the tippe-top {vertical-output: true}\n",
-        "\n",
-        "duration = 7    # (seconds)\n",
-        "framerate = 60  # (Hz)\n",
-        "\n",
-        "# Simulate and display video.\n",
-        "frames = []\n",
-        "physics.reset(0)  # Reset to keyframe 0 (load a saved state).\n",
-        "while physics.data.time < duration:\n",
-        "  physics.step()\n",
-        "  if len(frames) < (physics.data.time) * framerate:\n",
-        "    pixels = physics.render(camera_id='closeup')\n",
-        "    frames.append(pixels)\n",
-        "\n",
-        "display_video(frames, framerate)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "rRuFKD2ubPgu"
-      },
-      "source": [
-        "### Measuring values from `physics.data`\n",
-        "The `physics.data` structure contains all of the dynamic variables and intermediate results produced by the simulation. These are expected to change on each timestep. \n",
-        "\n",
-        "Below we simulate for 2000 timesteps and plot the state and height of the sphere as a function of time."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "1XXB6asJoZ2N"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Measuring values {vertical-output: true}\n",
-        "\n",
-        "timevals = []\n",
-        "angular_velocity = []\n",
-        "stem_height = []\n",
-        "\n",
-        "# Simulate and save data\n",
-        "physics.reset(0)\n",
-        "while physics.data.time < duration:\n",
-        "  physics.step()\n",
-        "  timevals.append(physics.data.time)\n",
-        "  angular_velocity.append(physics.data.qvel[3:6].copy())\n",
-        "  stem_height.append(physics.named.data.geom_xpos['stem', 'z'])\n",
-        "\n",
-        "dpi = 100\n",
-        "width = 480\n",
-        "height = 640\n",
-        "figsize = (width / dpi, height / dpi)\n",
-        "_, ax = plt.subplots(2, 1, figsize=figsize, dpi=dpi, sharex=True)\n",
-        "\n",
-        "ax[0].plot(timevals, angular_velocity)\n",
-        "ax[0].set_title('angular velocity')\n",
-        "ax[0].set_ylabel('radians / second')\n",
-        "\n",
-        "ax[1].plot(timevals, stem_height)\n",
-        "ax[1].set_xlabel('time (seconds)')\n",
-        "ax[1].set_ylabel('meters')\n",
-        "_ = ax[1].set_title('stem height')"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "UAMItwu8e1WR"
-      },
-      "source": [
-        "# PyMJCF tutorial\n",
-        "\n",
-        "\n"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "hPiY8m3MssKM"
-      },
-      "source": [
-        "This library provides a Python object model for MuJoCo's XML-based\n",
-        "[MJCF](http://www.mujoco.org/book/modeling.html) physics modeling language. The\n",
-        "goal of the library is to allow users to easily interact with and modify MJCF\n",
-        "models in Python, similarly to what the JavaScript DOM does for HTML.\n",
-        "\n",
-        "A key feature of this library is the ability to easily compose multiple separate\n",
-        "MJCF models into a larger one. Disambiguation of duplicated names from different\n",
-        "models, or multiple instances of the same model, is handled automatically.\n",
-        "\n",
-        "One typical use case is when we want robots with a variable number of joints. This is a fundamental change to the kinematics, requiring a new XML descriptor and new binary model to be compiled. \n",
-        "\n",
-        "The following snippets realise this scenario and provide a quick example of this library's use case."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "gKny5EJ4uVzu"
-      },
-      "outputs": [],
-      "source": [
-        "class Leg(object):\n",
-        "  \"\"\"A 2-DoF leg with position actuators.\"\"\"\n",
-        "  def __init__(self, length, rgba):\n",
-        "    self.model = mjcf.RootElement()\n",
-        "\n",
-        "    # Defaults:\n",
-        "    self.model.default.joint.damping = 2\n",
-        "    self.model.default.joint.type = 'hinge'\n",
-        "    self.model.default.geom.type = 'capsule'\n",
-        "    self.model.default.geom.rgba = rgba  # Continued below...\n",
-        "\n",
-        "    # Thigh:\n",
-        "    self.thigh = self.model.worldbody.add('body')\n",
-        "    self.hip = self.thigh.add('joint', axis=[0, 0, 1])\n",
-        "    self.thigh.add('geom', fromto=[0, 0, 0, length, 0, 0], size=[length/4])\n",
-        "\n",
-        "    # Hip:\n",
-        "    self.shin = self.thigh.add('body', pos=[length, 0, 0])\n",
-        "    self.knee = self.shin.add('joint', axis=[0, 1, 0])\n",
-        "    self.shin.add('geom', fromto=[0, 0, 0, 0, 0, -length], size=[length/5])\n",
-        "\n",
-        "    # Position actuators:\n",
-        "    self.model.actuator.add('position', joint=self.hip, kp=10)\n",
-        "    self.model.actuator.add('position', joint=self.knee, kp=10)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "cFJerI--UtTy"
-      },
-      "source": [
-        "The `Leg` class describes an abstract articulated leg, with two joints and corresponding proportional-derivative actuators. \n",
-        "\n",
-        "Note that:\n",
-        "\n",
-        "- MJCF attributes correspond directly to arguments of the `add()` method.\n",
-        "- When referencing elements, e.g when specifying the joint to which an actuator is attached, the MJCF element itself is used, rather than the name string."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "cellView": "both",
-        "id": "SESlL_TidKHx"
-      },
-      "outputs": [],
-      "source": [
-        "BODY_RADIUS = 0.1\n",
-        "BODY_SIZE = (BODY_RADIUS, BODY_RADIUS, BODY_RADIUS / 2)\n",
-        "random_state = np.random.RandomState(42)\n",
-        "\n",
-        "def make_creature(num_legs):\n",
-        "  \"\"\"Constructs a creature with `num_legs` legs.\"\"\"\n",
-        "  rgba = random_state.uniform([0, 0, 0, 1], [1, 1, 1, 1])\n",
-        "  model = mjcf.RootElement()\n",
-        "  model.compiler.angle = 'radian'  # Use radians.\n",
-        "\n",
-        "  # Make the torso geom.\n",
-        "  model.worldbody.add(\n",
-        "      'geom', name='torso', type='ellipsoid', size=BODY_SIZE, rgba=rgba)\n",
-        "\n",
-        "  # Attach legs to equidistant sites on the circumference.\n",
-        "  for i in range(num_legs):\n",
-        "    theta = 2 * i * np.pi / num_legs\n",
-        "    hip_pos = BODY_RADIUS * np.array([np.cos(theta), np.sin(theta), 0])\n",
-        "    hip_site = model.worldbody.add('site', pos=hip_pos, euler=[0, 0, theta])\n",
-        "    leg = Leg(length=BODY_RADIUS, rgba=rgba)\n",
-        "    hip_site.attach(leg.model)\n",
-        "\n",
-        "  return model"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "elyuJiI3U3kM"
-      },
-      "source": [
-        "The `make_creature` function uses PyMJCF's `attach()` method to procedurally attach legs to the torso. Note that at this stage both the torso and hip attachment sites are children of the `worldbody`, since their parent body has yet to be instantiated. We'll now make an arena with a chequered floor and two lights, and place our creatures in a grid."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "F7_Tx9P9U_VJ"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Six Creatures on a floor.{vertical-output: true}\n",
-        "\n",
-        "arena = mjcf.RootElement()\n",
-        "chequered = arena.asset.add('texture', type='2d', builtin='checker', width=300,\n",
-        "                            height=300, rgb1=[.2, .3, .4], rgb2=[.3, .4, .5])\n",
-        "grid = arena.asset.add('material', name='grid', texture=chequered,\n",
-        "                       texrepeat=[5, 5], reflectance=.2)\n",
-        "arena.worldbody.add('geom', type='plane', size=[2, 2, .1], material=grid)\n",
-        "for x in [-2, 2]:\n",
-        "  arena.worldbody.add('light', pos=[x, -1, 3], dir=[-x, 1, -2])\n",
-        "\n",
-        "# Instantiate 6 creatures with 3 to 8 legs.\n",
-        "creatures = [make_creature(num_legs=num_legs) for num_legs in range(3, 9)]\n",
-        "\n",
-        "# Place them on a grid in the arena.\n",
-        "height = .15\n",
-        "grid = 5 * BODY_RADIUS\n",
-        "xpos, ypos, zpos = np.meshgrid([-grid, 0, grid], [0, grid], [height])\n",
-        "for i, model in enumerate(creatures):\n",
-        "  # Place spawn sites on a grid.\n",
-        "  spawn_pos = (xpos.flat[i], ypos.flat[i], zpos.flat[i])\n",
-        "  spawn_site = arena.worldbody.add('site', pos=spawn_pos, group=3)\n",
-        "  # Attach to the arena at the spawn sites, with a free joint.\n",
-        "  spawn_site.attach(model).add('freejoint')\n",
-        "\n",
-        "# Instantiate the physics and render.\n",
-        "physics = mjcf.Physics.from_mjcf_model(arena)\n",
-        "PIL.Image.fromarray(physics.render())"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "cMfDaD7PfuoI"
-      },
-      "source": [
-        "Multi-legged creatures, ready to roam! Let's inject some controls and watch them move. We'll generate a sinusoidal open-loop control signal of fixed frequency and random phase, recording both video frames and the horizontal positions of the torso geoms, in order to plot the movement trajectories."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "8Gx39DMEUZDt"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Video of the movement{vertical-output: true}\n",
-        "#@test {\"timeout\": 600}\n",
-        "\n",
-        "duration = 10   # (Seconds)\n",
-        "framerate = 30  # (Hz)\n",
-        "video = []\n",
-        "pos_x = []\n",
-        "pos_y = []\n",
-        "torsos = []  # List of torso geom elements.\n",
-        "actuators = []  # List of actuator elements.\n",
-        "for creature in creatures:\n",
-        "  torsos.append(creature.find('geom', 'torso'))\n",
-        "  actuators.extend(creature.find_all('actuator'))\n",
-        "\n",
-        "# Control signal frequency, phase, amplitude.\n",
-        "freq = 5\n",
-        "phase = 2 * np.pi * random_state.rand(len(actuators))\n",
-        "amp = 0.9\n",
-        "\n",
-        "# Simulate, saving video frames and torso locations.\n",
-        "physics.reset()\n",
-        "while physics.data.time < duration:\n",
-        "  # Inject controls and step the physics.\n",
-        "  physics.bind(actuators).ctrl = amp * np.sin(freq * physics.data.time + phase)\n",
-        "  physics.step()\n",
-        "\n",
-        "  # Save torso horizontal positions using bind().\n",
-        "  pos_x.append(physics.bind(torsos).xpos[:, 0].copy())\n",
-        "  pos_y.append(physics.bind(torsos).xpos[:, 1].copy())\n",
-        "\n",
-        "  # Save video frames.\n",
-        "  if len(video) < physics.data.time * framerate:\n",
-        "    pixels = physics.render()\n",
-        "    video.append(pixels.copy())\n",
-        "\n",
-        "display_video(video, framerate)"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "u09JfenWYLZu"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Movement trajectories{vertical-output: true}\n",
-        "\n",
-        "creature_colors = physics.bind(torsos).rgba[:, :3]\n",
-        "fig, ax = plt.subplots(figsize=(4, 4))\n",
-        "ax.set_prop_cycle(color=creature_colors)\n",
-        "_ = ax.plot(pos_x, pos_y, linewidth=4)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "kggQyvNpf_Y9"
-      },
-      "source": [
-        "The plot above shows the corresponding movement trajectories of creature positions. Note how `physics.bind(torsos)` was used to access both `xpos` and `rgba` values. Once the `Physics` had been instantiated by `from_mjcf_model()`, the `bind()` method will expose both the associated `mjData` and `mjModel` fields of an `mjcf` element, providing unified access to all quantities in the simulation. "
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "wcRX_wu_8q8u"
-      },
-      "source": [
-        "# Composer tutorial"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "1DMhNPE5tSdw"
-      },
-      "source": [
-        "In this tutorial we will create a task requiring our \"creature\" above to press a colour-changing button on the floor with a prescribed force. We begin by implementing our creature as a `composer.Entity`:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "WwfzIqgNuFKt"
-      },
-      "outputs": [],
-      "source": [
-        "#@title The `Creature` class\n",
-        "\n",
-        "\n",
-        "class Creature(composer.Entity):\n",
-        "  \"\"\"A multi-legged creature derived from `composer.Entity`.\"\"\"\n",
-        "  def _build(self, num_legs):\n",
-        "    self._model = make_creature(num_legs)\n",
-        "\n",
-        "  def _build_observables(self):\n",
-        "    return CreatureObservables(self)\n",
-        "\n",
-        "  @property\n",
-        "  def mjcf_model(self):\n",
-        "    return self._model\n",
-        "\n",
-        "  @property\n",
-        "  def actuators(self):\n",
-        "    return tuple(self._model.find_all('actuator'))\n",
-        "\n",
-        "\n",
-        "# Add simple observable features for joint angles and velocities.\n",
-        "class CreatureObservables(composer.Observables):\n",
-        "\n",
-        "  @composer.observable\n",
-        "  def joint_positions(self):\n",
-        "    all_joints = self._entity.mjcf_model.find_all('joint')\n",
-        "    return observable.MJCFFeature('qpos', all_joints)\n",
-        "\n",
-        "  @composer.observable\n",
-        "  def joint_velocities(self):\n",
-        "    all_joints = self._entity.mjcf_model.find_all('joint')\n",
-        "    return observable.MJCFFeature('qvel', all_joints)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "CXZOBK6RkjxH"
-      },
-      "source": [
-        "The `Creature` Entity includes generic Observables for joint angles and velocities. Because `find_all()` is called on the `Creature`'s MJCF model, it will only return the creature's leg joints, and not the \"free\" joint with which it will be attached to the world. Note that Composer Entities should override the `_build` and `_build_observables` methods rather than `__init__`. The implementation of `__init__` in the base class calls `_build` and `_build_observables`, in that order, to ensure that the entity's MJCF model is created before its observables. This was a design choice which allows the user to refer to an observable as an attribute (`entity.observables.foo`) while still making it clear which attributes are observables. The stateful `Button` class derives from `composer.Entity` and implements the `initialize_episode` and `after_substep` callbacks."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "BE9VU2EOvR-u"
-      },
-      "outputs": [],
-      "source": [
-        "#@title The `Button` class\n",
-        "\n",
-        "NUM_SUBSTEPS = 25  # The number of physics substeps per control timestep.\n",
-        "\n",
-        "\n",
-        "class Button(composer.Entity):\n",
-        "  \"\"\"A button Entity which changes colour when pressed with certain force.\"\"\"\n",
-        "  def _build(self, target_force_range=(5, 10)):\n",
-        "    self._min_force, self._max_force = target_force_range\n",
-        "    self._mjcf_model = mjcf.RootElement()\n",
-        "    self._geom = self._mjcf_model.worldbody.add(\n",
-        "        'geom', type='cylinder', size=[0.25, 0.02], rgba=[1, 0, 0, 1])\n",
-        "    self._site = self._mjcf_model.worldbody.add(\n",
-        "        'site', type='cylinder', size=self._geom.size*1.01, rgba=[1, 0, 0, 0])\n",
-        "    self._sensor = self._mjcf_model.sensor.add('touch', site=self._site)\n",
-        "    self._num_activated_steps = 0\n",
-        "\n",
-        "  def _build_observables(self):\n",
-        "    return ButtonObservables(self)\n",
-        "\n",
-        "  @property\n",
-        "  def mjcf_model(self):\n",
-        "    return self._mjcf_model\n",
-        "  # Update the activation (and colour) if the desired force is applied.\n",
-        "  def _update_activation(self, physics):\n",
-        "    current_force = physics.bind(self.touch_sensor).sensordata[0]\n",
-        "    self._is_activated = (current_force >= self._min_force and\n",
-        "                          current_force <= self._max_force)\n",
-        "    physics.bind(self._geom).rgba = (\n",
-        "        [0, 1, 0, 1] if self._is_activated else [1, 0, 0, 1])\n",
-        "    self._num_activated_steps += int(self._is_activated)\n",
-        "\n",
-        "  def initialize_episode(self, physics, random_state):\n",
-        "    self._reward = 0.0\n",
-        "    self._num_activated_steps = 0\n",
-        "    self._update_activation(physics)\n",
-        "\n",
-        "  def after_substep(self, physics, random_state):\n",
-        "    self._update_activation(physics)\n",
-        "\n",
-        "  @property\n",
-        "  def touch_sensor(self):\n",
-        "    return self._sensor\n",
-        "\n",
-        "  @property\n",
-        "  def num_activated_steps(self):\n",
-        "    return self._num_activated_steps\n",
-        "\n",
-        "\n",
-        "class ButtonObservables(composer.Observables):\n",
-        "  \"\"\"A touch sensor which averages contact force over physics substeps.\"\"\"\n",
-        "  @composer.observable\n",
-        "  def touch_force(self):\n",
-        "    return observable.MJCFFeature('sensordata', self._entity.touch_sensor,\n",
-        "                                  buffer_size=NUM_SUBSTEPS, aggregator='mean')"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "D9vB5nCwkyIW"
-      },
-      "source": [
-        "Note how the Button counts the number of sub-steps during which it is pressed with the desired force. It also exposes an `Observable` of the force being applied to the button, whose value is an average of the readings over the physics time-steps.\n",
-        "\n",
-        "We import some `variation` modules and an arena factory:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "aDTTQMHtVawM"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Random initialiser using `composer.variation`\n",
-        "\n",
-        "\n",
-        "class UniformCircle(variation.Variation):\n",
-        "  \"\"\"A uniformly sampled horizontal point on a circle of radius `distance`.\"\"\"\n",
-        "  def __init__(self, distance):\n",
-        "    self._distance = distance\n",
-        "    self._heading = distributions.Uniform(0, 2*np.pi)\n",
-        "\n",
-        "  def __call__(self, initial_value=None, current_value=None, random_state=None):\n",
-        "    distance, heading = variation.evaluate(\n",
-        "        (self._distance, self._heading), random_state=random_state)\n",
-        "    return (distance*np.cos(heading), distance*np.sin(heading), 0)"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "dgZwP-pvxJdt"
-      },
-      "outputs": [],
-      "source": [
-        "#@title The `PressWithSpecificForce` task\n",
-        "\n",
-        "\n",
-        "class PressWithSpecificForce(composer.Task):\n",
-        "\n",
-        "  def __init__(self, creature):\n",
-        "    self._creature = creature\n",
-        "    self._arena = floors.Floor()\n",
-        "    self._arena.add_free_entity(self._creature)\n",
-        "    self._arena.mjcf_model.worldbody.add('light', pos=(0, 0, 4))\n",
-        "    self._button = Button()\n",
-        "    self._arena.attach(self._button)\n",
-        "\n",
-        "    # Configure initial poses\n",
-        "    self._creature_initial_pose = (0, 0, 0.15)\n",
-        "    button_distance = distributions.Uniform(0.5, .75)\n",
-        "    self._button_initial_pose = UniformCircle(button_distance)\n",
-        "\n",
-        "    # Configure variators\n",
-        "    self._mjcf_variator = variation.MJCFVariator()\n",
-        "    self._physics_variator = variation.PhysicsVariator()\n",
-        "\n",
-        "    # Configure and enable observables\n",
-        "    pos_corrptor = noises.Additive(distributions.Normal(scale=0.01))\n",
-        "    self._creature.observables.joint_positions.corruptor = pos_corrptor\n",
-        "    self._creature.observables.joint_positions.enabled = True\n",
-        "    vel_corruptor = noises.Multiplicative(distributions.LogNormal(sigma=0.01))\n",
-        "    self._creature.observables.joint_velocities.corruptor = vel_corruptor\n",
-        "    self._creature.observables.joint_velocities.enabled = True\n",
-        "    self._button.observables.touch_force.enabled = True\n",
-        "\n",
-        "    def to_button(physics):\n",
-        "      button_pos, _ = self._button.get_pose(physics)\n",
-        "      return self._creature.global_vector_to_local_frame(physics, button_pos)\n",
-        "\n",
-        "    self._task_observables = {}\n",
-        "    self._task_observables['button_position'] = observable.Generic(to_button)\n",
-        "\n",
-        "    for obs in self._task_observables.values():\n",
-        "      obs.enabled = True\n",
-        "\n",
-        "    self.control_timestep = NUM_SUBSTEPS * self.physics_timestep\n",
-        "\n",
-        "  @property\n",
-        "  def root_entity(self):\n",
-        "    return self._arena\n",
-        "\n",
-        "  @property\n",
-        "  def task_observables(self):\n",
-        "    return self._task_observables\n",
-        "\n",
-        "  def initialize_episode_mjcf(self, random_state):\n",
-        "    self._mjcf_variator.apply_variations(random_state)\n",
-        "\n",
-        "  def initialize_episode(self, physics, random_state):\n",
-        "    self._physics_variator.apply_variations(physics, random_state)\n",
-        "    creature_pose, button_pose = variation.evaluate(\n",
-        "        (self._creature_initial_pose, self._button_initial_pose),\n",
-        "        random_state=random_state)\n",
-        "    self._creature.set_pose(physics, position=creature_pose)\n",
-        "    self._button.set_pose(physics, position=button_pose)\n",
-        "\n",
-        "  def get_reward(self, physics):\n",
-        "    return self._button.num_activated_steps / NUM_SUBSTEPS    "
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "dRuuZdLpthbv"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Instantiating an environment{vertical-output: true}\n",
-        "\n",
-        "creature = Creature(num_legs=4)\n",
-        "task = PressWithSpecificForce(creature)\n",
-        "env = composer.Environment(task, random_state=np.random.RandomState(42))\n",
-        "\n",
-        "env.reset()\n",
-        "PIL.Image.fromarray(env.physics.render())"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "giTL_6euZFlw"
-      },
-      "source": [
-        "# The *Control Suite*"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "zfIcrDECtdB2"
-      },
-      "source": [
-        "The **Control Suite** is a set of stable, well-tested tasks designed to serve as a benchmark for continuous control learning agents. Tasks are written using the basic MuJoCo wrapper interface. Standardised action, observation and reward structures make suite-wide benchmarking simple and learning curves easy to interpret. Control Suite domains are not meant to be modified, in order to facilitate benchmarking. For full details regarding benchmarking, please refer to our original [publication](https://arxiv.org/abs/1801.00690).\n",
-        "\n",
-        "A video of solved benchmark tasks is [available here](https://www.youtube.com/watch?v=rAai4QzcYbs&feature=youtu.be).\n",
-        "\n",
-        "The suite come with convenient module level tuples for iterating over tasks:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "a_whTJG8uTp1"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Iterating over tasks{vertical-output: true}\n",
-        "\n",
-        "max_len = max(len(d) for d, _ in suite.BENCHMARKING)\n",
-        "for domain, task in suite.BENCHMARKING:\n",
-        "  print(f'{domain:<{max_len}}  {task}')"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "qN8y3etfZFly"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Loading and simulating a `suite` task{vertical-output: true}\n",
-        "\n",
-        "# Load the environment\n",
-        "random_state = np.random.RandomState(42)\n",
-        "env = suite.load('hopper', 'stand', task_kwargs={'random': random_state})\n",
-        "\n",
-        "# Simulate episode with random actions\n",
-        "duration = 4  # Seconds\n",
-        "frames = []\n",
-        "ticks = []\n",
-        "rewards = []\n",
-        "observations = []\n",
-        "\n",
-        "spec = env.action_spec()\n",
-        "time_step = env.reset()\n",
-        "\n",
-        "while env.physics.data.time < duration:\n",
-        "\n",
-        "  action = random_state.uniform(spec.minimum, spec.maximum, spec.shape)\n",
-        "  time_step = env.step(action)\n",
-        "\n",
-        "  camera0 = env.physics.render(camera_id=0, height=200, width=200)\n",
-        "  camera1 = env.physics.render(camera_id=1, height=200, width=200)\n",
-        "  frames.append(np.hstack((camera0, camera1)))\n",
-        "  rewards.append(time_step.reward)\n",
-        "  observations.append(copy.deepcopy(time_step.observation))\n",
-        "  ticks.append(env.physics.data.time)\n",
-        "\n",
-        "html_video = display_video(frames, framerate=1./env.control_timestep())\n",
-        "\n",
-        "# Show video and plot reward and observations\n",
-        "num_sensors = len(time_step.observation)\n",
-        "\n",
-        "_, ax = plt.subplots(1 + num_sensors, 1, sharex=True, figsize=(4, 8))\n",
-        "ax[0].plot(ticks, rewards)\n",
-        "ax[0].set_ylabel('reward')\n",
-        "ax[-1].set_xlabel('time')\n",
-        "\n",
-        "for i, key in enumerate(time_step.observation):\n",
-        "  data = np.asarray([observations[j][key] for j in range(len(observations))])\n",
-        "  ax[i+1].plot(ticks, data, label=key)\n",
-        "  ax[i+1].set_ylabel(key)\n",
-        "\n",
-        "html_video"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "ggVbQr5hZFl5"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Visualizing an initial state of one task per domain in the Control Suite\n",
-        "domains_tasks = {domain: task for domain, task in suite.ALL_TASKS}\n",
-        "random_state = np.random.RandomState(42)\n",
-        "num_domains = len(domains_tasks)\n",
-        "n_col = num_domains // int(np.sqrt(num_domains))\n",
-        "n_row = num_domains // n_col + int(0 < num_domains % n_col)\n",
-        "_, ax = plt.subplots(n_row, n_col, figsize=(12, 12))\n",
-        "for a in ax.flat:\n",
-        "  a.axis('off')\n",
-        "  a.grid(False)\n",
-        "\n",
-        "print(f'Iterating over all {num_domains} domains in the Suite:')\n",
-        "for j, [domain, task] in enumerate(domains_tasks.items()):\n",
-        "  print(domain, task)\n",
-        "\n",
-        "  env = suite.load(domain, task, task_kwargs={'random': random_state})\n",
-        "  timestep = env.reset()\n",
-        "  pixels = env.physics.render(height=200, width=200, camera_id=0)\n",
-        "\n",
-        "  ax.flat[j].imshow(pixels)\n",
-        "  ax.flat[j].set_title(domain + ': ' + task)\n",
-        "\n",
-        "clear_output()"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "JHSvxHiaopDb"
-      },
-      "source": [
-        "# Locomotion"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "yTn3C03dpHzL"
-      },
-      "source": [
-        "## Humanoid running along corridor with obstacles\n",
-        "\n",
-        "As an illustrative example of using the Locomotion infrastructure to build an RL environment, consider placing a humanoid in a corridor with walls, and a task specifying that the humanoid will be rewarded for running along this corridor, navigating around the wall obstacles using vision. We instantiate the environment as a composition of the Walker, Arena, and Task as follows. First, we build a position-controlled CMU humanoid walker. "
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "gE8rrB7PpN9X"
-      },
-      "outputs": [],
-      "source": [
-        "#@title A position controlled `cmu_humanoid`\n",
-        "\n",
-        "walker = cmu_humanoid.CMUHumanoidPositionControlledV2020(\n",
-        "    observable_options={'egocentric_camera': dict(enabled=True)})"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "3fYbaDflBrgE"
-      },
-      "source": [
-        "Next, we construct a corridor-shaped arena that is obstructed by walls."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "t-O17Fnm3E6R"
-      },
-      "outputs": [],
-      "source": [
-        "#@title A corridor arena with wall obstacles\n",
-        "\n",
-        "arena = corridor_arenas.WallsCorridor(\n",
-        "    wall_gap=3.,\n",
-        "    wall_width=distributions.Uniform(2., 3.),\n",
-        "    wall_height=distributions.Uniform(2.5, 3.5),\n",
-        "    corridor_width=4.,\n",
-        "    corridor_length=30.,\n",
-        ")"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "970nN38eBx-R"
-      },
-      "source": [
-        "The task constructor places the walker in the arena."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "dz4Jy2UGpQ4Z"
-      },
-      "outputs": [],
-      "source": [
-        "#@title A task to navigate the arena\n",
-        "\n",
-        "task = corridor_tasks.RunThroughCorridor(\n",
-        "    walker=walker,\n",
-        "    arena=arena,\n",
-        "    walker_spawn_position=(0.5, 0, 0),\n",
-        "    target_velocity=3.0,\n",
-        "    physics_timestep=0.005,\n",
-        "    control_timestep=0.03,\n",
-        ")"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "r-Oy-qTSB4HW"
-      },
-      "source": [
-        "Finally, a task that rewards the agent for running down the corridor at a specific velocity is instantiated as a `composer.Environment`."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "sQXlaEZk3ytl"
-      },
-      "outputs": [],
-      "source": [
-        "#@title The `RunThroughCorridor` environment\n",
-        "\n",
-        "env = composer.Environment(\n",
-        "    task=task,\n",
-        "    time_limit=10,\n",
-        "    random_state=np.random.RandomState(42),\n",
-        "    strip_singleton_obs_buffer_dim=True,\n",
-        ")\n",
-        "env.reset()\n",
-        "pixels = []\n",
-        "for camera_id in range(3):\n",
-        "  pixels.append(env.physics.render(camera_id=camera_id, width=240))\n",
-        "PIL.Image.fromarray(np.hstack(pixels))"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "HuuQLm8YopDe"
-      },
-      "source": [
-        "## Multi-Agent Soccer"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "OPNshDEEopDf"
-      },
-      "source": [
-        "Building on Composer and Locomotion libraries, the Multi-agent soccer environments, introduced in [this paper](https://arxiv.org/abs/1902.07151), follow a consistent task structure of Walkers, Arena, and Task where instead of a single walker, we inject multiple walkers that can interact with each other physically in the same scene. The code snippet below shows how to instantiate a 2-vs-2 Multi-agent Soccer environment with the simple, 5 degree-of-freedom `BoxHead` walker type."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "zAb3je0DAeQo"
-      },
-      "outputs": [],
-      "source": [
-        "#@title 2-v-2 `Boxhead` soccer\n",
-        "\n",
-        "random_state = np.random.RandomState(42)\n",
-        "env = soccer.load(\n",
-        "    team_size=2,\n",
-        "    time_limit=45.,\n",
-        "    random_state=random_state,\n",
-        "    disable_walker_contacts=False,\n",
-        "    walker_type=soccer.WalkerType.BOXHEAD,\n",
-        ")\n",
-        "env.reset()\n",
-        "pixels = []\n",
-        "# Select a random subset of 6 cameras (soccer envs have lots of cameras)\n",
-        "cameras = random_state.choice(env.physics.model.ncam, 6, replace=False)\n",
-        "for camera_id in cameras:\n",
-        "  pixels.append(env.physics.render(camera_id=camera_id, width=240))\n",
-        "image = np.vstack((np.hstack(pixels[:3]), np.hstack(pixels[3:])))\n",
-        "PIL.Image.fromarray(image)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "J_5C2k0NGvxE"
-      },
-      "source": [
-        " It can trivially be replaced by e.g. the `WalkerType.ANT` walker:"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "WDIGodhBG-Mn"
-      },
-      "outputs": [],
-      "source": [
-        "#@title 3-v-3 `Ant` soccer\n",
-        "\n",
-        "random_state = np.random.RandomState(42)\n",
-        "env = soccer.load(\n",
-        "    team_size=3,\n",
-        "    time_limit=45.,\n",
-        "    random_state=random_state,\n",
-        "    disable_walker_contacts=False,\n",
-        "    walker_type=soccer.WalkerType.ANT,\n",
-        ")\n",
-        "env.reset()\n",
-        "\n",
-        "pixels = []\n",
-        "cameras = random_state.choice(env.physics.model.ncam, 6, replace=False)\n",
-        "for camera_id in cameras:\n",
-        "  pixels.append(env.physics.render(camera_id=camera_id, width=240))\n",
-        "image = np.vstack((np.hstack(pixels[:3]), np.hstack(pixels[3:])))\n",
-        "PIL.Image.fromarray(image)"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "MvK9BW4A5c9p"
-      },
-      "source": [
-        "# Manipulation"
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "metadata": {
-        "id": "jPt27n2Dch_m"
-      },
-      "source": [
-        "The `manipulation` module provides a robotic arm, a set of simple objects, and tools for building reward functions for manipulation tasks."
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "cZxmJoovahCA"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Listing all `manipulation` tasks{vertical-output: true}\n",
-        "\n",
-        "# `ALL` is a tuple containing the names of all of the environments in the suite.\n",
-        "print('\\n'.join(manipulation.ALL))"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "oj0cJFlR5nTS"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Listing `manipulation` tasks that use vision{vertical-output: true}\n",
-        "print('\\n'.join(manipulation.get_environments_by_tag('vision')))"
-      ]
-    },
-    {
-      "cell_type": "code",
-      "execution_count": null,
-      "metadata": {
-        "id": "e_6q4FqFIKxy"
-      },
-      "outputs": [],
-      "source": [
-        "#@title Loading and simulating a `manipulation` task{vertical-output: true}\n",
-        "\n",
-        "env = manipulation.load('stack_2_of_3_bricks_random_order_vision', seed=42)\n",
-        "action_spec = env.action_spec()\n",
-        "\n",
-        "def sample_random_action():\n",
-        "  return env.random_state.uniform(\n",
-        "      low=action_spec.minimum,\n",
-        "      high=action_spec.maximum,\n",
-        "  ).astype(action_spec.dtype, copy=False)\n",
-        "\n",
-        "# Step the environment through a full episode using random actions and record\n",
-        "# the camera observations.\n",
-        "frames = []\n",
-        "timestep = env.reset()\n",
-        "frames.append(timestep.observation['front_close'])\n",
-        "while not timestep.last():\n",
-        "  timestep = env.step(sample_random_action())\n",
-        "  frames.append(timestep.observation['front_close'])\n",
-        "all_frames = np.concatenate(frames, axis=0)\n",
-        "display_video(all_frames, 30)"
-      ]
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "MpkYHwCqk7W-"
+   },
+   "source": [
+    "# <div align=\"center\">**`dm_control` tutorial**</div>\n",
+    "# <div align=\"center\">[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/deepmind/dm_control/blob/master/tutorial.ipynb)</div>\n",
+    "\n",
+    "\n",
+    "\n",
+    "\n",
+    "\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "_UbO9uhtBSX5"
+   },
+   "source": [
+    "> <p><small><small>Copyright 2020 The dm_control Authors.</small></p>\n",
+    "> <p><small><small>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">http://www.apache.org/licenses/LICENSE-2.0</a>.</small></small></p>\n",
+    "> <p><small><small>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</small></small></p>"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "aThGKGp0cD76"
+   },
+   "source": [
+    "This notebook provides an overview tutorial of DeepMind's `dm_control` package, hosted at the [deepmind/dm_control](https://github.com/deepmind/dm_control) repository on GitHub.\n",
+    "\n",
+    "It is adjunct to this [tech report](http://arxiv.org/abs/2006.12983).\n",
+    "\n",
+    "**A Colab runtime with GPU acceleration is required.** If you're using a CPU-only runtime, you can switch using the menu \"Runtime > Change runtime type\"."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "YkBQUjm6gbGF"
+   },
+   "source": [
+    "<!-- Internal installation instructions. -->"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "YvyGCsgSCxHQ"
+   },
+   "source": [
+    "### Installing `dm_control` on Colab"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 1,
+   "metadata": {
+    "id": "IbZxYDxzoz5R"
+   },
+   "outputs": [
+    {
+     "ename": "FileNotFoundError",
+     "evalue": "[Errno 2] No such file or directory: 'nvidia-smi'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
+      "Input \u001b[0;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mdistutils\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mutil\u001b[39;00m\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01msubprocess\u001b[39;00m\n\u001b[0;32m----> 4\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[43msubprocess\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mnvidia-smi\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39mreturncode:\n\u001b[1;32m      5\u001b[0m   \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mRuntimeError\u001b[39;00m(\n\u001b[1;32m      6\u001b[0m       \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCannot communicate with GPU. \u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      7\u001b[0m       \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMake sure you are using a GPU Colab runtime. \u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      8\u001b[0m       \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mGo to the Runtime menu and select Choose runtime type.\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     10\u001b[0m mujoco_dir \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m$HOME/.mujoco\u001b[39m\u001b[38;5;124m\"\u001b[39m\n",
+      "File \u001b[0;32m/opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py:505\u001b[0m, in \u001b[0;36mrun\u001b[0;34m(input, capture_output, timeout, check, *popenargs, **kwargs)\u001b[0m\n\u001b[1;32m    502\u001b[0m     kwargs[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstdout\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m PIPE\n\u001b[1;32m    503\u001b[0m     kwargs[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstderr\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m PIPE\n\u001b[0;32m--> 505\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[43mPopen\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mpopenargs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m process:\n\u001b[1;32m    506\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m    507\u001b[0m         stdout, stderr \u001b[38;5;241m=\u001b[39m process\u001b[38;5;241m.\u001b[39mcommunicate(\u001b[38;5;28minput\u001b[39m, timeout\u001b[38;5;241m=\u001b[39mtimeout)\n",
+      "File \u001b[0;32m/opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py:951\u001b[0m, in \u001b[0;36mPopen.__init__\u001b[0;34m(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, user, group, extra_groups, encoding, errors, text, umask)\u001b[0m\n\u001b[1;32m    947\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtext_mode:\n\u001b[1;32m    948\u001b[0m             \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstderr \u001b[38;5;241m=\u001b[39m io\u001b[38;5;241m.\u001b[39mTextIOWrapper(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstderr,\n\u001b[1;32m    949\u001b[0m                     encoding\u001b[38;5;241m=\u001b[39mencoding, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[0;32m--> 951\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_execute_child\u001b[49m\u001b[43m(\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mexecutable\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpreexec_fn\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mclose_fds\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    952\u001b[0m \u001b[43m                        \u001b[49m\u001b[43mpass_fds\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcwd\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43menv\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    953\u001b[0m \u001b[43m                        \u001b[49m\u001b[43mstartupinfo\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcreationflags\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mshell\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    954\u001b[0m \u001b[43m                        \u001b[49m\u001b[43mp2cread\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mp2cwrite\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    955\u001b[0m \u001b[43m                        \u001b[49m\u001b[43mc2pread\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mc2pwrite\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    956\u001b[0m \u001b[43m                        \u001b[49m\u001b[43merrread\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrwrite\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    957\u001b[0m \u001b[43m                        \u001b[49m\u001b[43mrestore_signals\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    958\u001b[0m \u001b[43m                        \u001b[49m\u001b[43mgid\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgids\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43muid\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mumask\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    959\u001b[0m \u001b[43m                        \u001b[49m\u001b[43mstart_new_session\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    960\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m:\n\u001b[1;32m    961\u001b[0m     \u001b[38;5;66;03m# Cleanup if the child failed starting.\u001b[39;00m\n\u001b[1;32m    962\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m f \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mfilter\u001b[39m(\u001b[38;5;28;01mNone\u001b[39;00m, (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstdin, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstdout, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mstderr)):\n",
+      "File \u001b[0;32m/opt/homebrew/Caskroom/miniforge/base/envs/thesis/lib/python3.9/subprocess.py:1821\u001b[0m, in \u001b[0;36mPopen._execute_child\u001b[0;34m(self, args, executable, preexec_fn, close_fds, pass_fds, cwd, env, startupinfo, creationflags, shell, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite, restore_signals, gid, gids, uid, umask, start_new_session)\u001b[0m\n\u001b[1;32m   1819\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errno_num \u001b[38;5;241m!=\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[1;32m   1820\u001b[0m         err_msg \u001b[38;5;241m=\u001b[39m os\u001b[38;5;241m.\u001b[39mstrerror(errno_num)\n\u001b[0;32m-> 1821\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m child_exception_type(errno_num, err_msg, err_filename)\n\u001b[1;32m   1822\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m child_exception_type(err_msg)\n",
+      "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'nvidia-smi'"
+     ]
     }
-  ],
-  "metadata": {
-    "accelerator": "GPU",
-    "colab": {
-      "collapsed_sections": [
-        "YkBQUjm6gbGF",
-        "YvyGCsgSCxHQ",
-        "wtDN43hIJh2C",
-        "jZXz9rPYGA-Y",
-        "MdUF2UYmR4TA",
-        "nQ8XOnRQx7T1",
-        "gf9h_wi9weet",
-        "NCcZxrDDB1Cj",
-        "t5hY0fyXFLcf",
-        "Z0UodCxS_v49",
-        "22ENjtVuhwsm",
-        "SHppAOjvSupc",
-        "rRuFKD2ubPgu",
-        "UAMItwu8e1WR",
-        "wcRX_wu_8q8u",
-        "giTL_6euZFlw",
-        "JHSvxHiaopDb",
-        "yTn3C03dpHzL",
-        "HuuQLm8YopDe",
-        "MvK9BW4A5c9p"
-      ],
-      "last_runtime": {
-        "build_target": "",
-        "kind": "local"
-      },
-      "name": "dm_control",
-      "private_outputs": true,
-      "provenance": [
-        {
-          "file_id": "1EBFHfEqrhxufldesVECPZfJF9HsKxAd2",
-          "timestamp": 1588282893099
-        },
-        {
-          "file_id": "0B8iLF4FF6KlDd0I3X2xTSHpQVEk",
-          "timestamp": 1573234197672
-        },
-        {
-          "file_id": "0B7GWNc3xBQH5ZjlPRzZGelNTcjg",
-          "timestamp": 1483004131812
-        },
-        {
-          "file_id": "0B7GWNc3xBQH5bHBRVkhOa1g3a28",
-          "timestamp": 1482848217314
-        }
-      ],
-      "toc_visible": true
-    },
-    "kernelspec": {
-      "display_name": "Python 3",
-      "name": "python3"
-    },
-    "language_info": {
-      "codemirror_mode": {
-        "name": "ipython",
-        "version": 3
-      },
-      "file_extension": ".py",
-      "mimetype": "text/x-python",
-      "name": "python",
-      "nbconvert_exporter": "python",
-      "pygments_lexer": "ipython3",
-      "version": "3.9.10"
+   ],
+   "source": [
+    "#@title Run to install MuJoCo and `dm_control`\n",
+    "import distutils.util\n",
+    "import subprocess\n",
+    "if subprocess.run('nvidia-smi').returncode:\n",
+    "  raise RuntimeError(\n",
+    "      'Cannot communicate with GPU. '\n",
+    "      'Make sure you are using a GPU Colab runtime. '\n",
+    "      'Go to the Runtime menu and select Choose runtime type.')\n",
+    "\n",
+    "mujoco_dir = \"$HOME/.mujoco\"\n",
+    "\n",
+    "print('Installing OpenGL dependencies...')\n",
+    "!apt-get update -qq\n",
+    "!apt-get install -qq -y --no-install-recommends libglew2.0 > /dev/null\n",
+    "\n",
+    "print('Downloading MuJoCo...')\n",
+    "BASE_URL = 'https://github.com/deepmind/mujoco/releases/download'\n",
+    "MUJOCO_VERSION = '2.1.1'\n",
+    "MUJOCO_ARCHIVE = (\n",
+    "    f'mujoco-{MUJOCO_VERSION}-{distutils.util.get_platform()}.tar.gz')\n",
+    "!wget -q \"{BASE_URL}/{MUJOCO_VERSION}/{MUJOCO_ARCHIVE}\"\n",
+    "!wget -q \"{BASE_URL}/{MUJOCO_VERSION}/{MUJOCO_ARCHIVE}.sha256\"\n",
+    "check_result = !shasum -c \"{MUJOCO_ARCHIVE}.sha256\"\n",
+    "if _exit_code:\n",
+    "  raise RuntimeError(\n",
+    "      'Downloaded MuJoCo archive is corrupted (checksum mismatch)')\n",
+    "\n",
+    "print('Unpacking MuJoCo...')\n",
+    "MUJOCO_DIR = '$HOME/.mujoco'\n",
+    "!mkdir -p \"{MUJOCO_DIR}\"\n",
+    "!tar -zxf {MUJOCO_ARCHIVE} -C \"{MUJOCO_DIR}\"\n",
+    "\n",
+    "# Configure dm_control to use the EGL rendering backend (requires GPU)\n",
+    "%env MUJOCO_GL=egl\n",
+    "\n",
+    "print('Installing dm_control...')\n",
+    "# Version 0.0.416848645 is the first one to support MuJoCo 2.1.1.\n",
+    "!pip install -q dm_control>=0.0.416848645\n",
+    "\n",
+    "print('Checking that the dm_control installation succeeded...')\n",
+    "try:\n",
+    "  from dm_control import suite\n",
+    "  env = suite.load('cartpole', 'swingup')\n",
+    "  pixels = env.physics.render()\n",
+    "except Exception as e:\n",
+    "  raise e from RuntimeError(\n",
+    "      'Something went wrong during installation. Check the shell output above '\n",
+    "      'for more information.\\n'\n",
+    "      'If using a hosted Colab runtime, make sure you enable GPU acceleration '\n",
+    "      'by going to the Runtime menu and selecting \"Choose runtime type\".')\n",
+    "else:\n",
+    "  del suite, env, pixels\n",
+    "\n",
+    "!echo Installed dm_control $(pip show dm_control | grep -Po \"(?<=Version: ).+\")"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "wtDN43hIJh2C"
+   },
+   "source": [
+    "# Imports\n",
+    "\n",
+    "Run both of these cells:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "cellView": "form",
+    "id": "T5f4w3Kq2X14"
+   },
+   "outputs": [],
+   "source": [
+    "#@title All `dm_control` imports required for this tutorial\n",
+    "\n",
+    "# The basic mujoco wrapper.\n",
+    "from dm_control import mujoco\n",
+    "\n",
+    "# Access to enums and MuJoCo library functions.\n",
+    "from dm_control.mujoco.wrapper.mjbindings import enums\n",
+    "from dm_control.mujoco.wrapper.mjbindings import mjlib\n",
+    "\n",
+    "# PyMJCF\n",
+    "from dm_control import mjcf\n",
+    "\n",
+    "# Composer high level imports\n",
+    "from dm_control import composer\n",
+    "from dm_control.composer.observation import observable\n",
+    "from dm_control.composer import variation\n",
+    "\n",
+    "# Imports for Composer tutorial example\n",
+    "from dm_control.composer.variation import distributions\n",
+    "from dm_control.composer.variation import noises\n",
+    "from dm_control.locomotion.arenas import floors\n",
+    "\n",
+    "# Control Suite\n",
+    "from dm_control import suite\n",
+    "\n",
+    "# Run through corridor example\n",
+    "from dm_control.locomotion.walkers import cmu_humanoid\n",
+    "from dm_control.locomotion.arenas import corridors as corridor_arenas\n",
+    "from dm_control.locomotion.tasks import corridors as corridor_tasks\n",
+    "\n",
+    "# Soccer\n",
+    "from dm_control.locomotion import soccer\n",
+    "\n",
+    "# Manipulation\n",
+    "from dm_control import manipulation"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "gKc1FNhKiVJX"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Other imports and helper functions\n",
+    "\n",
+    "# General\n",
+    "import copy\n",
+    "import os\n",
+    "import itertools\n",
+    "from IPython.display import clear_output\n",
+    "import numpy as np\n",
+    "\n",
+    "# Graphics-related\n",
+    "import matplotlib\n",
+    "import matplotlib.animation as animation\n",
+    "import matplotlib.pyplot as plt\n",
+    "from IPython.display import HTML\n",
+    "import PIL.Image\n",
+    "# Internal loading of video libraries.\n",
+    "\n",
+    "# Use svg backend for figure rendering\n",
+    "%config InlineBackend.figure_format = 'svg'\n",
+    "\n",
+    "# Font sizes\n",
+    "SMALL_SIZE = 8\n",
+    "MEDIUM_SIZE = 10\n",
+    "BIGGER_SIZE = 12\n",
+    "plt.rc('font', size=SMALL_SIZE)          # controls default text sizes\n",
+    "plt.rc('axes', titlesize=SMALL_SIZE)     # fontsize of the axes title\n",
+    "plt.rc('axes', labelsize=MEDIUM_SIZE)    # fontsize of the x and y labels\n",
+    "plt.rc('xtick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\n",
+    "plt.rc('ytick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\n",
+    "plt.rc('legend', fontsize=SMALL_SIZE)    # legend fontsize\n",
+    "plt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title\n",
+    "\n",
+    "# Inline video helper function\n",
+    "if os.environ.get('COLAB_NOTEBOOK_TEST', False):\n",
+    "  # We skip video generation during tests, as it is quite expensive.\n",
+    "  display_video = lambda *args, **kwargs: None\n",
+    "else:\n",
+    "  def display_video(frames, framerate=30):\n",
+    "    height, width, _ = frames[0].shape\n",
+    "    dpi = 70\n",
+    "    orig_backend = matplotlib.get_backend()\n",
+    "    matplotlib.use('Agg')  # Switch to headless 'Agg' to inhibit figure rendering.\n",
+    "    fig, ax = plt.subplots(1, 1, figsize=(width / dpi, height / dpi), dpi=dpi)\n",
+    "    matplotlib.use(orig_backend)  # Switch back to the original backend.\n",
+    "    ax.set_axis_off()\n",
+    "    ax.set_aspect('equal')\n",
+    "    ax.set_position([0, 0, 1, 1])\n",
+    "    im = ax.imshow(frames[0])\n",
+    "    def update(frame):\n",
+    "      im.set_data(frame)\n",
+    "      return [im]\n",
+    "    interval = 1000/framerate\n",
+    "    anim = animation.FuncAnimation(fig=fig, func=update, frames=frames,\n",
+    "                                   interval=interval, blit=True, repeat=False)\n",
+    "    return HTML(anim.to_html5_video())\n",
+    "\n",
+    "# Seed numpy's global RNG so that cell outputs are deterministic. We also try to\n",
+    "# use RandomState instances that are local to a single cell wherever possible.\n",
+    "np.random.seed(42)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "jZXz9rPYGA-Y"
+   },
+   "source": [
+    "# Model definition, compilation and rendering\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "MRBaZsf1d7Gb"
+   },
+   "source": [
+    "We begin by describing some basic concepts of the [MuJoCo](http://mujoco.org/) physics simulation library, but recommend the [official documentation](http://mujoco.org/book/) for details.\n",
+    "\n",
+    "Let's define a simple model with two geoms and a light."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "ZS2utl59ZTsr"
+   },
+   "outputs": [],
+   "source": [
+    "#@title A static model {vertical-output: true}\n",
+    "\n",
+    "static_model = \"\"\"\n",
+    "<mujoco>\n",
+    "  <worldbody>\n",
+    "    <light name=\"top\" pos=\"0 0 1\"/>\n",
+    "    <geom name=\"red_box\" type=\"box\" size=\".2 .2 .2\" rgba=\"1 0 0 1\"/>\n",
+    "    <geom name=\"green_sphere\" pos=\".2 .2 .2\" size=\".1\" rgba=\"0 1 0 1\"/>\n",
+    "  </worldbody>\n",
+    "</mujoco>\n",
+    "\"\"\"\n",
+    "physics = mujoco.Physics.from_xml_string(static_model)\n",
+    "pixels = physics.render()\n",
+    "PIL.Image.fromarray(pixels)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "p4vPllljTJh8"
+   },
+   "source": [
+    "`static_model` is written in MuJoCo's XML-based [MJCF](http://www.mujoco.org/book/modeling.html) modeling language. The `from_xml_string()` method invokes the model compiler, which instantiates the library's internal data structures. These can be accessed via the `physics` object, see below."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "MdUF2UYmR4TA"
+   },
+   "source": [
+    "## Adding DOFs and simulating, advanced rendering\n",
+    "This is a perfectly legitimate model, but if we simulate it, nothing will happen except for time advancing. This is because this model has no degrees of freedom (DOFs). We add DOFs by adding **joints** to bodies, specifying how they can move with respect to their parents. Let us add a hinge joint and re-render, visualizing the joint axis."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "R7zokzd_yeEg"
+   },
+   "outputs": [],
+   "source": [
+    "#@title A child body with a joint { vertical-output: true }\n",
+    "\n",
+    "swinging_body = \"\"\"\n",
+    "<mujoco>\n",
+    "  <worldbody>\n",
+    "    <light name=\"top\" pos=\"0 0 1\"/>\n",
+    "    <body name=\"box_and_sphere\" euler=\"0 0 -30\">  \n",
+    "      <joint name=\"swing\" type=\"hinge\" axis=\"1 -1 0\" pos=\"-.2 -.2 -.2\"/>\n",
+    "      <geom name=\"red_box\" type=\"box\" size=\".2 .2 .2\" rgba=\"1 0 0 1\"/>\n",
+    "      <geom name=\"green_sphere\" pos=\".2 .2 .2\" size=\".1\" rgba=\"0 1 0 1\"/>\n",
+    "    </body>\n",
+    "  </worldbody>\n",
+    "</mujoco>\n",
+    "\"\"\"\n",
+    "physics = mujoco.Physics.from_xml_string(swinging_body)\n",
+    "# Visualize the joint axis.\n",
+    "scene_option = mujoco.wrapper.core.MjvOption()\n",
+    "scene_option.flags[enums.mjtVisFlag.mjVIS_JOINT] = True\n",
+    "pixels = physics.render(scene_option=scene_option)\n",
+    "PIL.Image.fromarray(pixels)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "INOGGV0PTQus"
+   },
+   "source": [
+    "The things that move (and which have inertia) are called *bodies*. The body's child `joint` specifies how that body can move with respect to its parent, in this case `box_and_sphere` w.r.t the `worldbody`. \n",
+    "\n",
+    "Note that the body's frame is **rotated** with an `euler` directive, and its children, the geoms and the joint, rotate with it. This is to emphasize the local-to-parent-frame nature of position and orientation directives in MJCF.\n",
+    "\n",
+    "Let's make a video, to get a sense of the dynamics and to see the body swinging under gravity."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "Z_57VMUDpGrj"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Making a video {vertical-output: true}\n",
+    "\n",
+    "duration = 2    # (seconds)\n",
+    "framerate = 30  # (Hz)\n",
+    "\n",
+    "# Visualize the joint axis\n",
+    "scene_option = mujoco.wrapper.core.MjvOption()\n",
+    "scene_option.flags[enums.mjtVisFlag.mjVIS_JOINT] = True\n",
+    "\n",
+    "# Simulate and display video.\n",
+    "frames = []\n",
+    "physics.reset()  # Reset state and time\n",
+    "while physics.data.time < duration:\n",
+    "  physics.step()\n",
+    "  if len(frames) < physics.data.time * framerate:\n",
+    "    pixels = physics.render(scene_option=scene_option)\n",
+    "    frames.append(pixels)\n",
+    "display_video(frames, framerate)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "yYvS1UaciMX_"
+   },
+   "source": [
+    "Note how we collect the video frames. Because physics simulation timesteps are generally much smaller than framerates (the default timestep is 2ms), we don't render after each step."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "nQ8XOnRQx7T1"
+   },
+   "source": [
+    "## Rendering options\n",
+    "\n",
+    "Like joint visualisation, additional rendering options are exposed as parameters to the `render` method."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "AQITZiIgx7T2"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Enable transparency and frame visualization {vertical-output: true}\n",
+    "\n",
+    "scene_option = mujoco.wrapper.core.MjvOption()\n",
+    "scene_option.frame = enums.mjtFrame.mjFRAME_GEOM\n",
+    "scene_option.flags[enums.mjtVisFlag.mjVIS_TRANSPARENT] = True\n",
+    "pixels = physics.render(scene_option=scene_option)\n",
+    "PIL.Image.fromarray(pixels)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "PDDgY48vx7T6"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Depth rendering {vertical-output: true}\n",
+    "\n",
+    "# depth is a float array, in meters.\n",
+    "depth = physics.render(depth=True)\n",
+    "# Shift nearest values to the origin.\n",
+    "depth -= depth.min()\n",
+    "# Scale by 2 mean distances of near rays.\n",
+    "depth /= 2*depth[depth <= 1].mean()\n",
+    "# Scale to [0, 255]\n",
+    "pixels = 255*np.clip(depth, 0, 1)\n",
+    "PIL.Image.fromarray(pixels.astype(np.uint8))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "PNwiIrgpx7T8"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Segmentation rendering {vertical-output: true}\n",
+    "\n",
+    "seg = physics.render(segmentation=True)\n",
+    "# Display the contents of the first channel, which contains object\n",
+    "# IDs. The second channel, seg[:, :, 1], contains object types.\n",
+    "geom_ids = seg[:, :, 0]\n",
+    "# Infinity is mapped to -1\n",
+    "geom_ids = geom_ids.astype(np.float64) + 1\n",
+    "# Scale to [0, 1]\n",
+    "geom_ids = geom_ids / geom_ids.max()\n",
+    "pixels = 255*geom_ids\n",
+    "PIL.Image.fromarray(pixels.astype(np.uint8))\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "uCJQlv3cQcJQ"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Projecting from world to camera coordinates {vertical-output: true}\n",
+    "\n",
+    "# Get the world coordinates of the box corners\n",
+    "box_pos = physics.named.data.geom_xpos['red_box']\n",
+    "box_mat = physics.named.data.geom_xmat['red_box'].reshape(3, 3)\n",
+    "box_size = physics.named.model.geom_size['red_box']\n",
+    "offsets = np.array([-1, 1]) * box_size[:, None]\n",
+    "xyz_local = np.stack(itertools.product(*offsets)).T\n",
+    "xyz_global = box_pos[:, None] + box_mat @ xyz_local\n",
+    "\n",
+    "# Camera matrices multiply homogenous [x, y, z, 1] vectors.\n",
+    "corners_homogeneous = np.ones((4, xyz_global.shape[1]), dtype=float)\n",
+    "corners_homogeneous[:3, :] = xyz_global\n",
+    "\n",
+    "# Get the camera matrix.\n",
+    "camera = mujoco.Camera(physics)\n",
+    "camera_matrix = camera.matrix\n",
+    "\n",
+    "# Project world coordinates into pixel space. See:\n",
+    "# https://en.wikipedia.org/wiki/3D_projection#Mathematical_formula\n",
+    "xs, ys, s = camera_matrix @ corners_homogeneous\n",
+    "# x and y are in the pixel coordinate system.\n",
+    "x = xs / s\n",
+    "y = ys / s\n",
+    "\n",
+    "# Render the camera view and overlay the projected corner coordinates.\n",
+    "pixels = camera.render()\n",
+    "fig, ax = plt.subplots(1, 1)\n",
+    "ax.imshow(pixels)\n",
+    "ax.plot(x, y, '+', c='w')\n",
+    "ax.set_axis_off()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "gf9h_wi9weet"
+   },
+   "source": [
+    "# MuJoCo basics and named indexing"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "NCcZxrDDB1Cj"
+   },
+   "source": [
+    "## `mjModel`\n",
+    "MuJoCo's `mjModel`, encapsulated in `physics.model`, contains the *model description*, including the default initial state and other fixed quantities which are not a function of the state, e.g. the positions of geoms in the frame of their parent body. The (x, y, z) offsets of the `box` and `sphere` geoms, relative their parent body `box_and_sphere` are given by `model.geom_pos`:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "wx8NANvOF8g1"
+   },
+   "outputs": [],
+   "source": [
+    "physics.model.geom_pos"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "v9O1VNdmHn_K"
+   },
+   "source": [
+    "Docstrings of attributes provide short descriptions."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "8_0MwaeYHn_N"
+   },
+   "outputs": [],
+   "source": [
+    "help(type(physics.model).geom_pos)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "Wee5ATLtIQn_"
+   },
+   "source": [
+    "The `model.opt` structure contains global quantities like"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "BhzbZIfDIU2-"
+   },
+   "outputs": [],
+   "source": [
+    "print('timestep', physics.model.opt.timestep)\n",
+    "print('gravity', physics.model.opt.gravity)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "t5hY0fyXFLcf"
+   },
+   "source": [
+    "## `mjData`\n",
+    "`mjData`, encapsulated in `physics.data`, contains the *state* and quantities that depend on it. The state is made up of time, generalized positions and generalised velocities. These are respectively `data.time`, `data.qpos` and `data.qvel`. \n",
+    "\n",
+    "Let's print the state of the swinging body where we left it:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "acwZtDwp9mQU"
+   },
+   "outputs": [],
+   "source": [
+    "print(physics.data.time, physics.data.qpos, physics.data.qvel)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "7YlmcLcA-WQu"
+   },
+   "source": [
+    "`physics.data` also contains functions of the state, for example the cartesian positions of objects in the world frame. The (x, y, z) positions of our two geoms are in `data.geom_xpos`:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "CPwDcAQ0-uUE"
+   },
+   "outputs": [],
+   "source": [
+    "print(physics.data.geom_xpos)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "Z0UodCxS_v49"
+   },
+   "source": [
+    "## Named indexing\n",
+    "\n",
+    "The semantics of the above arrays are made clearer using the `named` wrapper, which assigns names to rows and type names to columns."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "cLARcaK6-xCU"
+   },
+   "outputs": [],
+   "source": [
+    "print(physics.named.data.geom_xpos)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "wgXOUZNZHIx6"
+   },
+   "source": [
+    "Note how `model.geom_pos` and `data.geom_xpos` have similar semantics but very different meanings."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "-cW61ClRHS8a"
+   },
+   "outputs": [],
+   "source": [
+    "print(physics.named.model.geom_pos)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "-lQ0AChVASMv"
+   },
+   "source": [
+    "Name strings can be used to index **into** the relevant quantities, making code much more readable and robust."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "Rj4ad9fQAnFZ"
+   },
+   "outputs": [],
+   "source": [
+    "physics.named.data.geom_xpos['green_sphere', 'z']"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "axr_p6APAzFn"
+   },
+   "source": [
+    "Joint names can be used to index into quantities in configuration space (beginning with the letter `q`):"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "hluF9aDG9O1W"
+   },
+   "outputs": [],
+   "source": [
+    "physics.named.data.qpos['swing']"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "3IhfyD2Q1pjv"
+   },
+   "source": [
+    "We can mix NumPy slicing operations with named indexing. As an example, we can set the color of the box using its name (`\"red_box\"`) as an index into the rows of the `geom_rgba` array. "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "f5vVUullUvWH"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Changing colors using named indexing{vertical-output: true}\n",
+    "\n",
+    "random_rgb = np.random.rand(3)\n",
+    "physics.named.model.geom_rgba['red_box', :3] = random_rgb\n",
+    "pixels = physics.render()\n",
+    "PIL.Image.fromarray(pixels)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "elzPPdq-KhLI"
+   },
+   "source": [
+    "Note that while `physics.model` quantities will not be changed by the engine, we can change them ourselves between steps. This however is generally not recommended, the preferred approach being to modify the model at the XML level using the PyMJCF library, see below."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "22ENjtVuhwsm"
+   },
+   "source": [
+    "## Setting the state with `reset_context()`\n",
+    "\n",
+    "In order for `data` quantities that are functions of the state to be in sync with the state, MuJoCo's `mj_step1()` needs to be called. This is facilitated by the `reset_context()` context, please see in-depth discussion in Section 2.1 of the [tech report](https://arxiv.org/abs/2006.12983)."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "WBPprCtWgXFN"
+   },
+   "outputs": [],
+   "source": [
+    "physics.named.data.qpos['swing'] = np.pi\n",
+    "print('Without reset_context, spatial positions are not updated:',\n",
+    "      physics.named.data.geom_xpos['green_sphere', ['z']])\n",
+    "with physics.reset_context():\n",
+    "  physics.named.data.qpos['swing'] = np.pi\n",
+    "print('After reset_context, positions are up-to-date:',\n",
+    "      physics.named.data.geom_xpos['green_sphere', ['z']])"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "SHppAOjvSupc"
+   },
+   "source": [
+    "## Free bodies: the self-inverting \"tippe-top\"\n",
+    "\n",
+    "A free body is a body with a `free` joint, with 6 movement DOFs: 3 translations and 3 rotations. We could give our `box_and_sphere` body a free joint and watch it fall, but let's look at something more interesting. A \"tippe top\" is a spinning toy which flips itself on its head ([Wikipedia](https://en.wikipedia.org/wiki/Tippe_top)). We model it as follows:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "xasXQpVMjIwA"
+   },
+   "outputs": [],
+   "source": [
+    "#@title The \"tippe-top\" model{vertical-output: true}\n",
+    "\n",
+    "tippe_top = \"\"\"\n",
+    "<mujoco model=\"tippe top\">\n",
+    "  <option integrator=\"RK4\"/>\n",
+    "  <asset>\n",
+    "    <texture name=\"grid\" type=\"2d\" builtin=\"checker\" rgb1=\".1 .2 .3\" \n",
+    "     rgb2=\".2 .3 .4\" width=\"300\" height=\"300\"/>\n",
+    "    <material name=\"grid\" texture=\"grid\" texrepeat=\"8 8\" reflectance=\".2\"/>\n",
+    "  </asset>\n",
+    "  <worldbody>\n",
+    "    <geom size=\".2 .2 .01\" type=\"plane\" material=\"grid\"/>\n",
+    "    <light pos=\"0 0 .6\"/>\n",
+    "    <camera name=\"closeup\" pos=\"0 -.1 .07\" xyaxes=\"1 0 0 0 1 2\"/>\n",
+    "    <body name=\"top\" pos=\"0 0 .02\">\n",
+    "      <freejoint/>\n",
+    "      <geom name=\"ball\" type=\"sphere\" size=\".02\" />\n",
+    "      <geom name=\"stem\" type=\"cylinder\" pos=\"0 0 .02\" size=\"0.004 .008\"/>\n",
+    "      <geom name=\"ballast\" type=\"box\" size=\".023 .023 0.005\"  pos=\"0 0 -.015\" \n",
+    "       contype=\"0\" conaffinity=\"0\" group=\"3\"/>\n",
+    "    </body>\n",
+    "  </worldbody>\n",
+    "  <keyframe>\n",
+    "    <key name=\"spinning\" qpos=\"0 0 0.02 1 0 0 0\" qvel=\"0 0 0 0 1 200\" />\n",
+    "  </keyframe>\n",
+    "</mujoco>\n",
+    "\"\"\"\n",
+    "physics = mujoco.Physics.from_xml_string(tippe_top)\n",
+    "PIL.Image.fromarray(physics.render(camera_id='closeup'))"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "bvHlr6maJYIG"
+   },
+   "source": [
+    "Note several new features of this model definition:\n",
+    "0. The free joint is added with the `<freejoint/>` clause, which is similar to `<joint type=\"free\"/>`, but prohibits unphysical attributes like friction or stiffness.\n",
+    "1. We use the `<option/>` clause to set the integrator to the more accurate Runge Kutta 4th order.\n",
+    "2. We define the floor's grid material inside the `<asset/>` clause and reference it in the floor geom. \n",
+    "3. We use an invisible and non-colliding box geom called `ballast` to move the top's center-of-mass lower. Having a low center of mass is  (counter-intuitively) required for the flipping behaviour to occur.\n",
+    "4. We save our initial spinning state as a keyframe. It has a high rotational velocity around the z-axis, but is not perfectly oriented with the world.\n",
+    "5. We define a `<camera>` in our model, and then render from it using the `camera_id` argument to `render()`.\n",
+    "Let us examine the state:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "o4S9nYhHOKmb"
+   },
+   "outputs": [],
+   "source": [
+    "print('positions', physics.data.qpos)\n",
+    "print('velocities', physics.data.qvel)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "71UgzBAqWdtZ"
+   },
+   "source": [
+    "The velocities are easy to interpret, 6 zeros, one for each DOF. What about the length-7 positions? We can see the initial 2cm height of the body; the subsequent four numbers are the 3D orientation, defined by a *unit quaternion*. These normalized four-vectors, which preserve the topology of the orientation group, are the reason that `data.qpos` can be bigger than `data.qvel`: 3D orientations are represented with **4** numbers while angular velocities are **3** numbers."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "5P4HkhKNGQvs"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Video of the tippe-top {vertical-output: true}\n",
+    "\n",
+    "duration = 7    # (seconds)\n",
+    "framerate = 60  # (Hz)\n",
+    "\n",
+    "# Simulate and display video.\n",
+    "frames = []\n",
+    "physics.reset(0)  # Reset to keyframe 0 (load a saved state).\n",
+    "while physics.data.time < duration:\n",
+    "  physics.step()\n",
+    "  if len(frames) < (physics.data.time) * framerate:\n",
+    "    pixels = physics.render(camera_id='closeup')\n",
+    "    frames.append(pixels)\n",
+    "\n",
+    "display_video(frames, framerate)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "rRuFKD2ubPgu"
+   },
+   "source": [
+    "### Measuring values from `physics.data`\n",
+    "The `physics.data` structure contains all of the dynamic variables and intermediate results produced by the simulation. These are expected to change on each timestep. \n",
+    "\n",
+    "Below we simulate for 2000 timesteps and plot the state and height of the sphere as a function of time."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "1XXB6asJoZ2N"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Measuring values {vertical-output: true}\n",
+    "\n",
+    "timevals = []\n",
+    "angular_velocity = []\n",
+    "stem_height = []\n",
+    "\n",
+    "# Simulate and save data\n",
+    "physics.reset(0)\n",
+    "while physics.data.time < duration:\n",
+    "  physics.step()\n",
+    "  timevals.append(physics.data.time)\n",
+    "  angular_velocity.append(physics.data.qvel[3:6].copy())\n",
+    "  stem_height.append(physics.named.data.geom_xpos['stem', 'z'])\n",
+    "\n",
+    "dpi = 100\n",
+    "width = 480\n",
+    "height = 640\n",
+    "figsize = (width / dpi, height / dpi)\n",
+    "_, ax = plt.subplots(2, 1, figsize=figsize, dpi=dpi, sharex=True)\n",
+    "\n",
+    "ax[0].plot(timevals, angular_velocity)\n",
+    "ax[0].set_title('angular velocity')\n",
+    "ax[0].set_ylabel('radians / second')\n",
+    "\n",
+    "ax[1].plot(timevals, stem_height)\n",
+    "ax[1].set_xlabel('time (seconds)')\n",
+    "ax[1].set_ylabel('meters')\n",
+    "_ = ax[1].set_title('stem height')"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "UAMItwu8e1WR"
+   },
+   "source": [
+    "# PyMJCF tutorial\n",
+    "\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "hPiY8m3MssKM"
+   },
+   "source": [
+    "This library provides a Python object model for MuJoCo's XML-based\n",
+    "[MJCF](http://www.mujoco.org/book/modeling.html) physics modeling language. The\n",
+    "goal of the library is to allow users to easily interact with and modify MJCF\n",
+    "models in Python, similarly to what the JavaScript DOM does for HTML.\n",
+    "\n",
+    "A key feature of this library is the ability to easily compose multiple separate\n",
+    "MJCF models into a larger one. Disambiguation of duplicated names from different\n",
+    "models, or multiple instances of the same model, is handled automatically.\n",
+    "\n",
+    "One typical use case is when we want robots with a variable number of joints. This is a fundamental change to the kinematics, requiring a new XML descriptor and new binary model to be compiled. \n",
+    "\n",
+    "The following snippets realise this scenario and provide a quick example of this library's use case."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "gKny5EJ4uVzu"
+   },
+   "outputs": [],
+   "source": [
+    "class Leg(object):\n",
+    "  \"\"\"A 2-DoF leg with position actuators.\"\"\"\n",
+    "  def __init__(self, length, rgba):\n",
+    "    self.model = mjcf.RootElement()\n",
+    "\n",
+    "    # Defaults:\n",
+    "    self.model.default.joint.damping = 2\n",
+    "    self.model.default.joint.type = 'hinge'\n",
+    "    self.model.default.geom.type = 'capsule'\n",
+    "    self.model.default.geom.rgba = rgba  # Continued below...\n",
+    "\n",
+    "    # Thigh:\n",
+    "    self.thigh = self.model.worldbody.add('body')\n",
+    "    self.hip = self.thigh.add('joint', axis=[0, 0, 1])\n",
+    "    self.thigh.add('geom', fromto=[0, 0, 0, length, 0, 0], size=[length/4])\n",
+    "\n",
+    "    # Hip:\n",
+    "    self.shin = self.thigh.add('body', pos=[length, 0, 0])\n",
+    "    self.knee = self.shin.add('joint', axis=[0, 1, 0])\n",
+    "    self.shin.add('geom', fromto=[0, 0, 0, 0, 0, -length], size=[length/5])\n",
+    "\n",
+    "    # Position actuators:\n",
+    "    self.model.actuator.add('position', joint=self.hip, kp=10)\n",
+    "    self.model.actuator.add('position', joint=self.knee, kp=10)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "cFJerI--UtTy"
+   },
+   "source": [
+    "The `Leg` class describes an abstract articulated leg, with two joints and corresponding proportional-derivative actuators. \n",
+    "\n",
+    "Note that:\n",
+    "\n",
+    "- MJCF attributes correspond directly to arguments of the `add()` method.\n",
+    "- When referencing elements, e.g when specifying the joint to which an actuator is attached, the MJCF element itself is used, rather than the name string."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "cellView": "both",
+    "id": "SESlL_TidKHx"
+   },
+   "outputs": [],
+   "source": [
+    "BODY_RADIUS = 0.1\n",
+    "BODY_SIZE = (BODY_RADIUS, BODY_RADIUS, BODY_RADIUS / 2)\n",
+    "random_state = np.random.RandomState(42)\n",
+    "\n",
+    "def make_creature(num_legs):\n",
+    "  \"\"\"Constructs a creature with `num_legs` legs.\"\"\"\n",
+    "  rgba = random_state.uniform([0, 0, 0, 1], [1, 1, 1, 1])\n",
+    "  model = mjcf.RootElement()\n",
+    "  model.compiler.angle = 'radian'  # Use radians.\n",
+    "\n",
+    "  # Make the torso geom.\n",
+    "  model.worldbody.add(\n",
+    "      'geom', name='torso', type='ellipsoid', size=BODY_SIZE, rgba=rgba)\n",
+    "\n",
+    "  # Attach legs to equidistant sites on the circumference.\n",
+    "  for i in range(num_legs):\n",
+    "    theta = 2 * i * np.pi / num_legs\n",
+    "    hip_pos = BODY_RADIUS * np.array([np.cos(theta), np.sin(theta), 0])\n",
+    "    hip_site = model.worldbody.add('site', pos=hip_pos, euler=[0, 0, theta])\n",
+    "    leg = Leg(length=BODY_RADIUS, rgba=rgba)\n",
+    "    hip_site.attach(leg.model)\n",
+    "\n",
+    "  return model"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "elyuJiI3U3kM"
+   },
+   "source": [
+    "The `make_creature` function uses PyMJCF's `attach()` method to procedurally attach legs to the torso. Note that at this stage both the torso and hip attachment sites are children of the `worldbody`, since their parent body has yet to be instantiated. We'll now make an arena with a chequered floor and two lights, and place our creatures in a grid."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "F7_Tx9P9U_VJ"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Six Creatures on a floor.{vertical-output: true}\n",
+    "\n",
+    "arena = mjcf.RootElement()\n",
+    "chequered = arena.asset.add('texture', type='2d', builtin='checker', width=300,\n",
+    "                            height=300, rgb1=[.2, .3, .4], rgb2=[.3, .4, .5])\n",
+    "grid = arena.asset.add('material', name='grid', texture=chequered,\n",
+    "                       texrepeat=[5, 5], reflectance=.2)\n",
+    "arena.worldbody.add('geom', type='plane', size=[2, 2, .1], material=grid)\n",
+    "for x in [-2, 2]:\n",
+    "  arena.worldbody.add('light', pos=[x, -1, 3], dir=[-x, 1, -2])\n",
+    "\n",
+    "# Instantiate 6 creatures with 3 to 8 legs.\n",
+    "creatures = [make_creature(num_legs=num_legs) for num_legs in range(3, 9)]\n",
+    "\n",
+    "# Place them on a grid in the arena.\n",
+    "height = .15\n",
+    "grid = 5 * BODY_RADIUS\n",
+    "xpos, ypos, zpos = np.meshgrid([-grid, 0, grid], [0, grid], [height])\n",
+    "for i, model in enumerate(creatures):\n",
+    "  # Place spawn sites on a grid.\n",
+    "  spawn_pos = (xpos.flat[i], ypos.flat[i], zpos.flat[i])\n",
+    "  spawn_site = arena.worldbody.add('site', pos=spawn_pos, group=3)\n",
+    "  # Attach to the arena at the spawn sites, with a free joint.\n",
+    "  spawn_site.attach(model).add('freejoint')\n",
+    "\n",
+    "# Instantiate the physics and render.\n",
+    "physics = mjcf.Physics.from_mjcf_model(arena)\n",
+    "PIL.Image.fromarray(physics.render())"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "cMfDaD7PfuoI"
+   },
+   "source": [
+    "Multi-legged creatures, ready to roam! Let's inject some controls and watch them move. We'll generate a sinusoidal open-loop control signal of fixed frequency and random phase, recording both video frames and the horizontal positions of the torso geoms, in order to plot the movement trajectories."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "8Gx39DMEUZDt"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Video of the movement{vertical-output: true}\n",
+    "#@test {\"timeout\": 600}\n",
+    "\n",
+    "duration = 10   # (Seconds)\n",
+    "framerate = 30  # (Hz)\n",
+    "video = []\n",
+    "pos_x = []\n",
+    "pos_y = []\n",
+    "torsos = []  # List of torso geom elements.\n",
+    "actuators = []  # List of actuator elements.\n",
+    "for creature in creatures:\n",
+    "  torsos.append(creature.find('geom', 'torso'))\n",
+    "  actuators.extend(creature.find_all('actuator'))\n",
+    "\n",
+    "# Control signal frequency, phase, amplitude.\n",
+    "freq = 5\n",
+    "phase = 2 * np.pi * random_state.rand(len(actuators))\n",
+    "amp = 0.9\n",
+    "\n",
+    "# Simulate, saving video frames and torso locations.\n",
+    "physics.reset()\n",
+    "while physics.data.time < duration:\n",
+    "  # Inject controls and step the physics.\n",
+    "  physics.bind(actuators).ctrl = amp * np.sin(freq * physics.data.time + phase)\n",
+    "  physics.step()\n",
+    "\n",
+    "  # Save torso horizontal positions using bind().\n",
+    "  pos_x.append(physics.bind(torsos).xpos[:, 0].copy())\n",
+    "  pos_y.append(physics.bind(torsos).xpos[:, 1].copy())\n",
+    "\n",
+    "  # Save video frames.\n",
+    "  if len(video) < physics.data.time * framerate:\n",
+    "    pixels = physics.render()\n",
+    "    video.append(pixels.copy())\n",
+    "\n",
+    "display_video(video, framerate)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "u09JfenWYLZu"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Movement trajectories{vertical-output: true}\n",
+    "\n",
+    "creature_colors = physics.bind(torsos).rgba[:, :3]\n",
+    "fig, ax = plt.subplots(figsize=(4, 4))\n",
+    "ax.set_prop_cycle(color=creature_colors)\n",
+    "_ = ax.plot(pos_x, pos_y, linewidth=4)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "kggQyvNpf_Y9"
+   },
+   "source": [
+    "The plot above shows the corresponding movement trajectories of creature positions. Note how `physics.bind(torsos)` was used to access both `xpos` and `rgba` values. Once the `Physics` had been instantiated by `from_mjcf_model()`, the `bind()` method will expose both the associated `mjData` and `mjModel` fields of an `mjcf` element, providing unified access to all quantities in the simulation. "
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "wcRX_wu_8q8u"
+   },
+   "source": [
+    "# Composer tutorial"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "1DMhNPE5tSdw"
+   },
+   "source": [
+    "In this tutorial we will create a task requiring our \"creature\" above to press a colour-changing button on the floor with a prescribed force. We begin by implementing our creature as a `composer.Entity`:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "WwfzIqgNuFKt"
+   },
+   "outputs": [],
+   "source": [
+    "#@title The `Creature` class\n",
+    "\n",
+    "\n",
+    "class Creature(composer.Entity):\n",
+    "  \"\"\"A multi-legged creature derived from `composer.Entity`.\"\"\"\n",
+    "  def _build(self, num_legs):\n",
+    "    self._model = make_creature(num_legs)\n",
+    "\n",
+    "  def _build_observables(self):\n",
+    "    return CreatureObservables(self)\n",
+    "\n",
+    "  @property\n",
+    "  def mjcf_model(self):\n",
+    "    return self._model\n",
+    "\n",
+    "  @property\n",
+    "  def actuators(self):\n",
+    "    return tuple(self._model.find_all('actuator'))\n",
+    "\n",
+    "\n",
+    "# Add simple observable features for joint angles and velocities.\n",
+    "class CreatureObservables(composer.Observables):\n",
+    "\n",
+    "  @composer.observable\n",
+    "  def joint_positions(self):\n",
+    "    all_joints = self._entity.mjcf_model.find_all('joint')\n",
+    "    return observable.MJCFFeature('qpos', all_joints)\n",
+    "\n",
+    "  @composer.observable\n",
+    "  def joint_velocities(self):\n",
+    "    all_joints = self._entity.mjcf_model.find_all('joint')\n",
+    "    return observable.MJCFFeature('qvel', all_joints)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "CXZOBK6RkjxH"
+   },
+   "source": [
+    "The `Creature` Entity includes generic Observables for joint angles and velocities. Because `find_all()` is called on the `Creature`'s MJCF model, it will only return the creature's leg joints, and not the \"free\" joint with which it will be attached to the world. Note that Composer Entities should override the `_build` and `_build_observables` methods rather than `__init__`. The implementation of `__init__` in the base class calls `_build` and `_build_observables`, in that order, to ensure that the entity's MJCF model is created before its observables. This was a design choice which allows the user to refer to an observable as an attribute (`entity.observables.foo`) while still making it clear which attributes are observables. The stateful `Button` class derives from `composer.Entity` and implements the `initialize_episode` and `after_substep` callbacks."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "BE9VU2EOvR-u"
+   },
+   "outputs": [],
+   "source": [
+    "#@title The `Button` class\n",
+    "\n",
+    "NUM_SUBSTEPS = 25  # The number of physics substeps per control timestep.\n",
+    "\n",
+    "\n",
+    "class Button(composer.Entity):\n",
+    "  \"\"\"A button Entity which changes colour when pressed with certain force.\"\"\"\n",
+    "  def _build(self, target_force_range=(5, 10)):\n",
+    "    self._min_force, self._max_force = target_force_range\n",
+    "    self._mjcf_model = mjcf.RootElement()\n",
+    "    self._geom = self._mjcf_model.worldbody.add(\n",
+    "        'geom', type='cylinder', size=[0.25, 0.02], rgba=[1, 0, 0, 1])\n",
+    "    self._site = self._mjcf_model.worldbody.add(\n",
+    "        'site', type='cylinder', size=self._geom.size*1.01, rgba=[1, 0, 0, 0])\n",
+    "    self._sensor = self._mjcf_model.sensor.add('touch', site=self._site)\n",
+    "    self._num_activated_steps = 0\n",
+    "\n",
+    "  def _build_observables(self):\n",
+    "    return ButtonObservables(self)\n",
+    "\n",
+    "  @property\n",
+    "  def mjcf_model(self):\n",
+    "    return self._mjcf_model\n",
+    "  # Update the activation (and colour) if the desired force is applied.\n",
+    "  def _update_activation(self, physics):\n",
+    "    current_force = physics.bind(self.touch_sensor).sensordata[0]\n",
+    "    self._is_activated = (current_force >= self._min_force and\n",
+    "                          current_force <= self._max_force)\n",
+    "    physics.bind(self._geom).rgba = (\n",
+    "        [0, 1, 0, 1] if self._is_activated else [1, 0, 0, 1])\n",
+    "    self._num_activated_steps += int(self._is_activated)\n",
+    "\n",
+    "  def initialize_episode(self, physics, random_state):\n",
+    "    self._reward = 0.0\n",
+    "    self._num_activated_steps = 0\n",
+    "    self._update_activation(physics)\n",
+    "\n",
+    "  def after_substep(self, physics, random_state):\n",
+    "    self._update_activation(physics)\n",
+    "\n",
+    "  @property\n",
+    "  def touch_sensor(self):\n",
+    "    return self._sensor\n",
+    "\n",
+    "  @property\n",
+    "  def num_activated_steps(self):\n",
+    "    return self._num_activated_steps\n",
+    "\n",
+    "\n",
+    "class ButtonObservables(composer.Observables):\n",
+    "  \"\"\"A touch sensor which averages contact force over physics substeps.\"\"\"\n",
+    "  @composer.observable\n",
+    "  def touch_force(self):\n",
+    "    return observable.MJCFFeature('sensordata', self._entity.touch_sensor,\n",
+    "                                  buffer_size=NUM_SUBSTEPS, aggregator='mean')"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "D9vB5nCwkyIW"
+   },
+   "source": [
+    "Note how the Button counts the number of sub-steps during which it is pressed with the desired force. It also exposes an `Observable` of the force being applied to the button, whose value is an average of the readings over the physics time-steps.\n",
+    "\n",
+    "We import some `variation` modules and an arena factory:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "aDTTQMHtVawM"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Random initialiser using `composer.variation`\n",
+    "\n",
+    "\n",
+    "class UniformCircle(variation.Variation):\n",
+    "  \"\"\"A uniformly sampled horizontal point on a circle of radius `distance`.\"\"\"\n",
+    "  def __init__(self, distance):\n",
+    "    self._distance = distance\n",
+    "    self._heading = distributions.Uniform(0, 2*np.pi)\n",
+    "\n",
+    "  def __call__(self, initial_value=None, current_value=None, random_state=None):\n",
+    "    distance, heading = variation.evaluate(\n",
+    "        (self._distance, self._heading), random_state=random_state)\n",
+    "    return (distance*np.cos(heading), distance*np.sin(heading), 0)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "dgZwP-pvxJdt"
+   },
+   "outputs": [],
+   "source": [
+    "#@title The `PressWithSpecificForce` task\n",
+    "\n",
+    "\n",
+    "class PressWithSpecificForce(composer.Task):\n",
+    "\n",
+    "  def __init__(self, creature):\n",
+    "    self._creature = creature\n",
+    "    self._arena = floors.Floor()\n",
+    "    self._arena.add_free_entity(self._creature)\n",
+    "    self._arena.mjcf_model.worldbody.add('light', pos=(0, 0, 4))\n",
+    "    self._button = Button()\n",
+    "    self._arena.attach(self._button)\n",
+    "\n",
+    "    # Configure initial poses\n",
+    "    self._creature_initial_pose = (0, 0, 0.15)\n",
+    "    button_distance = distributions.Uniform(0.5, .75)\n",
+    "    self._button_initial_pose = UniformCircle(button_distance)\n",
+    "\n",
+    "    # Configure variators\n",
+    "    self._mjcf_variator = variation.MJCFVariator()\n",
+    "    self._physics_variator = variation.PhysicsVariator()\n",
+    "\n",
+    "    # Configure and enable observables\n",
+    "    pos_corrptor = noises.Additive(distributions.Normal(scale=0.01))\n",
+    "    self._creature.observables.joint_positions.corruptor = pos_corrptor\n",
+    "    self._creature.observables.joint_positions.enabled = True\n",
+    "    vel_corruptor = noises.Multiplicative(distributions.LogNormal(sigma=0.01))\n",
+    "    self._creature.observables.joint_velocities.corruptor = vel_corruptor\n",
+    "    self._creature.observables.joint_velocities.enabled = True\n",
+    "    self._button.observables.touch_force.enabled = True\n",
+    "\n",
+    "    def to_button(physics):\n",
+    "      button_pos, _ = self._button.get_pose(physics)\n",
+    "      return self._creature.global_vector_to_local_frame(physics, button_pos)\n",
+    "\n",
+    "    self._task_observables = {}\n",
+    "    self._task_observables['button_position'] = observable.Generic(to_button)\n",
+    "\n",
+    "    for obs in self._task_observables.values():\n",
+    "      obs.enabled = True\n",
+    "\n",
+    "    self.control_timestep = NUM_SUBSTEPS * self.physics_timestep\n",
+    "\n",
+    "  @property\n",
+    "  def root_entity(self):\n",
+    "    return self._arena\n",
+    "\n",
+    "  @property\n",
+    "  def task_observables(self):\n",
+    "    return self._task_observables\n",
+    "\n",
+    "  def initialize_episode_mjcf(self, random_state):\n",
+    "    self._mjcf_variator.apply_variations(random_state)\n",
+    "\n",
+    "  def initialize_episode(self, physics, random_state):\n",
+    "    self._physics_variator.apply_variations(physics, random_state)\n",
+    "    creature_pose, button_pose = variation.evaluate(\n",
+    "        (self._creature_initial_pose, self._button_initial_pose),\n",
+    "        random_state=random_state)\n",
+    "    self._creature.set_pose(physics, position=creature_pose)\n",
+    "    self._button.set_pose(physics, position=button_pose)\n",
+    "\n",
+    "  def get_reward(self, physics):\n",
+    "    return self._button.num_activated_steps / NUM_SUBSTEPS    "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "dRuuZdLpthbv"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Instantiating an environment{vertical-output: true}\n",
+    "\n",
+    "creature = Creature(num_legs=4)\n",
+    "task = PressWithSpecificForce(creature)\n",
+    "env = composer.Environment(task, random_state=np.random.RandomState(42))\n",
+    "\n",
+    "env.reset()\n",
+    "PIL.Image.fromarray(env.physics.render())"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "giTL_6euZFlw"
+   },
+   "source": [
+    "# The *Control Suite*"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "zfIcrDECtdB2"
+   },
+   "source": [
+    "The **Control Suite** is a set of stable, well-tested tasks designed to serve as a benchmark for continuous control learning agents. Tasks are written using the basic MuJoCo wrapper interface. Standardised action, observation and reward structures make suite-wide benchmarking simple and learning curves easy to interpret. Control Suite domains are not meant to be modified, in order to facilitate benchmarking. For full details regarding benchmarking, please refer to our original [publication](https://arxiv.org/abs/1801.00690).\n",
+    "\n",
+    "A video of solved benchmark tasks is [available here](https://www.youtube.com/watch?v=rAai4QzcYbs&feature=youtu.be).\n",
+    "\n",
+    "The suite come with convenient module level tuples for iterating over tasks:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "a_whTJG8uTp1"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Iterating over tasks{vertical-output: true}\n",
+    "\n",
+    "max_len = max(len(d) for d, _ in suite.BENCHMARKING)\n",
+    "for domain, task in suite.BENCHMARKING:\n",
+    "  print(f'{domain:<{max_len}}  {task}')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "qN8y3etfZFly"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Loading and simulating a `suite` task{vertical-output: true}\n",
+    "\n",
+    "# Load the environment\n",
+    "random_state = np.random.RandomState(42)\n",
+    "env = suite.load('hopper', 'stand', task_kwargs={'random': random_state})\n",
+    "\n",
+    "# Simulate episode with random actions\n",
+    "duration = 4  # Seconds\n",
+    "frames = []\n",
+    "ticks = []\n",
+    "rewards = []\n",
+    "observations = []\n",
+    "\n",
+    "spec = env.action_spec()\n",
+    "time_step = env.reset()\n",
+    "\n",
+    "while env.physics.data.time < duration:\n",
+    "\n",
+    "  action = random_state.uniform(spec.minimum, spec.maximum, spec.shape)\n",
+    "  time_step = env.step(action)\n",
+    "\n",
+    "  camera0 = env.physics.render(camera_id=0, height=200, width=200)\n",
+    "  camera1 = env.physics.render(camera_id=1, height=200, width=200)\n",
+    "  frames.append(np.hstack((camera0, camera1)))\n",
+    "  rewards.append(time_step.reward)\n",
+    "  observations.append(copy.deepcopy(time_step.observation))\n",
+    "  ticks.append(env.physics.data.time)\n",
+    "\n",
+    "html_video = display_video(frames, framerate=1./env.control_timestep())\n",
+    "\n",
+    "# Show video and plot reward and observations\n",
+    "num_sensors = len(time_step.observation)\n",
+    "\n",
+    "_, ax = plt.subplots(1 + num_sensors, 1, sharex=True, figsize=(4, 8))\n",
+    "ax[0].plot(ticks, rewards)\n",
+    "ax[0].set_ylabel('reward')\n",
+    "ax[-1].set_xlabel('time')\n",
+    "\n",
+    "for i, key in enumerate(time_step.observation):\n",
+    "  data = np.asarray([observations[j][key] for j in range(len(observations))])\n",
+    "  ax[i+1].plot(ticks, data, label=key)\n",
+    "  ax[i+1].set_ylabel(key)\n",
+    "\n",
+    "html_video"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "ggVbQr5hZFl5"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Visualizing an initial state of one task per domain in the Control Suite\n",
+    "domains_tasks = {domain: task for domain, task in suite.ALL_TASKS}\n",
+    "random_state = np.random.RandomState(42)\n",
+    "num_domains = len(domains_tasks)\n",
+    "n_col = num_domains // int(np.sqrt(num_domains))\n",
+    "n_row = num_domains // n_col + int(0 < num_domains % n_col)\n",
+    "_, ax = plt.subplots(n_row, n_col, figsize=(12, 12))\n",
+    "for a in ax.flat:\n",
+    "  a.axis('off')\n",
+    "  a.grid(False)\n",
+    "\n",
+    "print(f'Iterating over all {num_domains} domains in the Suite:')\n",
+    "for j, [domain, task] in enumerate(domains_tasks.items()):\n",
+    "  print(domain, task)\n",
+    "\n",
+    "  env = suite.load(domain, task, task_kwargs={'random': random_state})\n",
+    "  timestep = env.reset()\n",
+    "  pixels = env.physics.render(height=200, width=200, camera_id=0)\n",
+    "\n",
+    "  ax.flat[j].imshow(pixels)\n",
+    "  ax.flat[j].set_title(domain + ': ' + task)\n",
+    "\n",
+    "clear_output()"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "JHSvxHiaopDb"
+   },
+   "source": [
+    "# Locomotion"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "yTn3C03dpHzL"
+   },
+   "source": [
+    "## Humanoid running along corridor with obstacles\n",
+    "\n",
+    "As an illustrative example of using the Locomotion infrastructure to build an RL environment, consider placing a humanoid in a corridor with walls, and a task specifying that the humanoid will be rewarded for running along this corridor, navigating around the wall obstacles using vision. We instantiate the environment as a composition of the Walker, Arena, and Task as follows. First, we build a position-controlled CMU humanoid walker. "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "gE8rrB7PpN9X"
+   },
+   "outputs": [],
+   "source": [
+    "#@title A position controlled `cmu_humanoid`\n",
+    "\n",
+    "walker = cmu_humanoid.CMUHumanoidPositionControlledV2020(\n",
+    "    observable_options={'egocentric_camera': dict(enabled=True)})"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "3fYbaDflBrgE"
+   },
+   "source": [
+    "Next, we construct a corridor-shaped arena that is obstructed by walls."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "t-O17Fnm3E6R"
+   },
+   "outputs": [],
+   "source": [
+    "#@title A corridor arena with wall obstacles\n",
+    "\n",
+    "arena = corridor_arenas.WallsCorridor(\n",
+    "    wall_gap=3.,\n",
+    "    wall_width=distributions.Uniform(2., 3.),\n",
+    "    wall_height=distributions.Uniform(2.5, 3.5),\n",
+    "    corridor_width=4.,\n",
+    "    corridor_length=30.,\n",
+    ")"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "970nN38eBx-R"
+   },
+   "source": [
+    "The task constructor places the walker in the arena."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "dz4Jy2UGpQ4Z"
+   },
+   "outputs": [],
+   "source": [
+    "#@title A task to navigate the arena\n",
+    "\n",
+    "task = corridor_tasks.RunThroughCorridor(\n",
+    "    walker=walker,\n",
+    "    arena=arena,\n",
+    "    walker_spawn_position=(0.5, 0, 0),\n",
+    "    target_velocity=3.0,\n",
+    "    physics_timestep=0.005,\n",
+    "    control_timestep=0.03,\n",
+    ")"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "r-Oy-qTSB4HW"
+   },
+   "source": [
+    "Finally, a task that rewards the agent for running down the corridor at a specific velocity is instantiated as a `composer.Environment`."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "sQXlaEZk3ytl"
+   },
+   "outputs": [],
+   "source": [
+    "#@title The `RunThroughCorridor` environment\n",
+    "\n",
+    "env = composer.Environment(\n",
+    "    task=task,\n",
+    "    time_limit=10,\n",
+    "    random_state=np.random.RandomState(42),\n",
+    "    strip_singleton_obs_buffer_dim=True,\n",
+    ")\n",
+    "env.reset()\n",
+    "pixels = []\n",
+    "for camera_id in range(3):\n",
+    "  pixels.append(env.physics.render(camera_id=camera_id, width=240))\n",
+    "PIL.Image.fromarray(np.hstack(pixels))"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "HuuQLm8YopDe"
+   },
+   "source": [
+    "## Multi-Agent Soccer"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "OPNshDEEopDf"
+   },
+   "source": [
+    "Building on Composer and Locomotion libraries, the Multi-agent soccer environments, introduced in [this paper](https://arxiv.org/abs/1902.07151), follow a consistent task structure of Walkers, Arena, and Task where instead of a single walker, we inject multiple walkers that can interact with each other physically in the same scene. The code snippet below shows how to instantiate a 2-vs-2 Multi-agent Soccer environment with the simple, 5 degree-of-freedom `BoxHead` walker type."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "zAb3je0DAeQo"
+   },
+   "outputs": [],
+   "source": [
+    "#@title 2-v-2 `Boxhead` soccer\n",
+    "\n",
+    "random_state = np.random.RandomState(42)\n",
+    "env = soccer.load(\n",
+    "    team_size=2,\n",
+    "    time_limit=45.,\n",
+    "    random_state=random_state,\n",
+    "    disable_walker_contacts=False,\n",
+    "    walker_type=soccer.WalkerType.BOXHEAD,\n",
+    ")\n",
+    "env.reset()\n",
+    "pixels = []\n",
+    "# Select a random subset of 6 cameras (soccer envs have lots of cameras)\n",
+    "cameras = random_state.choice(env.physics.model.ncam, 6, replace=False)\n",
+    "for camera_id in cameras:\n",
+    "  pixels.append(env.physics.render(camera_id=camera_id, width=240))\n",
+    "image = np.vstack((np.hstack(pixels[:3]), np.hstack(pixels[3:])))\n",
+    "PIL.Image.fromarray(image)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "J_5C2k0NGvxE"
+   },
+   "source": [
+    " It can trivially be replaced by e.g. the `WalkerType.ANT` walker:"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "WDIGodhBG-Mn"
+   },
+   "outputs": [],
+   "source": [
+    "#@title 3-v-3 `Ant` soccer\n",
+    "\n",
+    "random_state = np.random.RandomState(42)\n",
+    "env = soccer.load(\n",
+    "    team_size=3,\n",
+    "    time_limit=45.,\n",
+    "    random_state=random_state,\n",
+    "    disable_walker_contacts=False,\n",
+    "    walker_type=soccer.WalkerType.ANT,\n",
+    ")\n",
+    "env.reset()\n",
+    "\n",
+    "pixels = []\n",
+    "cameras = random_state.choice(env.physics.model.ncam, 6, replace=False)\n",
+    "for camera_id in cameras:\n",
+    "  pixels.append(env.physics.render(camera_id=camera_id, width=240))\n",
+    "image = np.vstack((np.hstack(pixels[:3]), np.hstack(pixels[3:])))\n",
+    "PIL.Image.fromarray(image)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "MvK9BW4A5c9p"
+   },
+   "source": [
+    "# Manipulation"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {
+    "id": "jPt27n2Dch_m"
+   },
+   "source": [
+    "The `manipulation` module provides a robotic arm, a set of simple objects, and tools for building reward functions for manipulation tasks."
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "cZxmJoovahCA"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Listing all `manipulation` tasks{vertical-output: true}\n",
+    "\n",
+    "# `ALL` is a tuple containing the names of all of the environments in the suite.\n",
+    "print('\\n'.join(manipulation.ALL))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "oj0cJFlR5nTS"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Listing `manipulation` tasks that use vision{vertical-output: true}\n",
+    "print('\\n'.join(manipulation.get_environments_by_tag('vision')))"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {
+    "id": "e_6q4FqFIKxy"
+   },
+   "outputs": [],
+   "source": [
+    "#@title Loading and simulating a `manipulation` task{vertical-output: true}\n",
+    "\n",
+    "env = manipulation.load('stack_2_of_3_bricks_random_order_vision', seed=42)\n",
+    "action_spec = env.action_spec()\n",
+    "\n",
+    "def sample_random_action():\n",
+    "  return env.random_state.uniform(\n",
+    "      low=action_spec.minimum,\n",
+    "      high=action_spec.maximum,\n",
+    "  ).astype(action_spec.dtype, copy=False)\n",
+    "\n",
+    "# Step the environment through a full episode using random actions and record\n",
+    "# the camera observations.\n",
+    "frames = []\n",
+    "timestep = env.reset()\n",
+    "frames.append(timestep.observation['front_close'])\n",
+    "while not timestep.last():\n",
+    "  timestep = env.step(sample_random_action())\n",
+    "  frames.append(timestep.observation['front_close'])\n",
+    "all_frames = np.concatenate(frames, axis=0)\n",
+    "display_video(all_frames, 30)"
+   ]
+  }
+ ],
+ "metadata": {
+  "accelerator": "GPU",
+  "colab": {
+   "collapsed_sections": [
+    "YkBQUjm6gbGF",
+    "YvyGCsgSCxHQ",
+    "wtDN43hIJh2C",
+    "jZXz9rPYGA-Y",
+    "MdUF2UYmR4TA",
+    "nQ8XOnRQx7T1",
+    "gf9h_wi9weet",
+    "NCcZxrDDB1Cj",
+    "t5hY0fyXFLcf",
+    "Z0UodCxS_v49",
+    "22ENjtVuhwsm",
+    "SHppAOjvSupc",
+    "rRuFKD2ubPgu",
+    "UAMItwu8e1WR",
+    "wcRX_wu_8q8u",
+    "giTL_6euZFlw",
+    "JHSvxHiaopDb",
+    "yTn3C03dpHzL",
+    "HuuQLm8YopDe",
+    "MvK9BW4A5c9p"
+   ],
+   "last_runtime": {
+    "build_target": "",
+    "kind": "local"
+   },
+   "name": "dm_control",
+   "private_outputs": true,
+   "provenance": [
+    {
+     "file_id": "1EBFHfEqrhxufldesVECPZfJF9HsKxAd2",
+     "timestamp": 1588282893099
+    },
+    {
+     "file_id": "0B8iLF4FF6KlDd0I3X2xTSHpQVEk",
+     "timestamp": 1573234197672
+    },
+    {
+     "file_id": "0B7GWNc3xBQH5ZjlPRzZGelNTcjg",
+     "timestamp": 1483004131812
+    },
+    {
+     "file_id": "0B7GWNc3xBQH5bHBRVkhOa1g3a28",
+     "timestamp": 1482848217314
     }
+   ],
+   "toc_visible": true
+  },
+  "kernelspec": {
+   "display_name": "Python 3 (ipykernel)",
+   "language": "python",
+   "name": "python3"
   },
-  "nbformat": 4,
-  "nbformat_minor": 0
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 3
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython3",
+   "version": "3.9.10"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 1
 }
diff --git a/code/Old/openPkl.py b/code/Old/openPkl.py
deleted file mode 100644
index 676ea91..0000000
--- a/code/Old/openPkl.py
+++ /dev/null
@@ -1,8 +0,0 @@
-import pickle
-import joblib
-
-
-with open('h36m_test.pkl', 'rb') as f:
-    data = pickle.load(f)
-
-print(data)
\ No newline at end of file
diff --git a/code/convert.py b/code/convert.py
index 4e2ec44..27e8447 100644
--- a/code/convert.py
+++ b/code/convert.py
@@ -179,7 +179,8 @@ def convert(true_preds, start_pos, data_type):
         Converted true predictions.
 
     """
-    if data_type == "pos":
+    print(data_type)
+    if data_type == "pos" or data_type == "pos_norm":
         return true_preds
     elif data_type == "eucl_motion":
         return eucl2pos(true_preds, start_pos)
diff --git a/code/create_strings.py b/code/create_strings.py
index aaf1e2d..6d61233 100644
--- a/code/create_strings.py
+++ b/code/create_strings.py
@@ -4,7 +4,7 @@ def create_string(euler_obj, pos_obj, type_obj, size_obj):
     <mujoco>
     <worldbody>
         <light name="top" pos="0 0 1"/>
-        <geom type="plane" size="1 1 0.1" rgba=".9 0 0 1"/>
+        <geom type="plane" size="10 10 10" rgba="1 1 1 1"/>
         <body name="object_body" euler="{euler_obj}" pos="{pos_obj}">
         <joint name="joint1" type="free"/>
         <geom name="object_geom" type="{type_obj}" size="{size_obj}" rgba="1 0 0 1"/>
diff --git a/code/data/sim_0.pickle b/code/data/sim_0.pickle
index 2b2da6c..23fb4f4 100644
Binary files a/code/data/sim_0.pickle and b/code/data/sim_0.pickle differ
diff --git a/code/data/sim_1.pickle b/code/data/sim_1.pickle
index 914c0b4..c822e64 100644
Binary files a/code/data/sim_1.pickle and b/code/data/sim_1.pickle differ
diff --git a/code/data/sim_10.pickle b/code/data/sim_10.pickle
index d6c6c47..54d31ac 100644
Binary files a/code/data/sim_10.pickle and b/code/data/sim_10.pickle differ
diff --git a/code/data/sim_100.pickle b/code/data/sim_100.pickle
index ae024b8..3877aec 100644
Binary files a/code/data/sim_100.pickle and b/code/data/sim_100.pickle differ
diff --git a/code/data/sim_101.pickle b/code/data/sim_101.pickle
index 58f8f4c..af06c8c 100644
Binary files a/code/data/sim_101.pickle and b/code/data/sim_101.pickle differ
diff --git a/code/data/sim_102.pickle b/code/data/sim_102.pickle
index dbc94b9..3da17b6 100644
Binary files a/code/data/sim_102.pickle and b/code/data/sim_102.pickle differ
diff --git a/code/data/sim_103.pickle b/code/data/sim_103.pickle
index 7bcacde..7762842 100644
Binary files a/code/data/sim_103.pickle and b/code/data/sim_103.pickle differ
diff --git a/code/data/sim_104.pickle b/code/data/sim_104.pickle
index 3c8eac4..4dba6f2 100644
Binary files a/code/data/sim_104.pickle and b/code/data/sim_104.pickle differ
diff --git a/code/data/sim_105.pickle b/code/data/sim_105.pickle
index 22e309d..84dc4f4 100644
Binary files a/code/data/sim_105.pickle and b/code/data/sim_105.pickle differ
diff --git a/code/data/sim_106.pickle b/code/data/sim_106.pickle
index 51b164c..e3ea98a 100644
Binary files a/code/data/sim_106.pickle and b/code/data/sim_106.pickle differ
diff --git a/code/data/sim_107.pickle b/code/data/sim_107.pickle
index 025c3cb..9baa7f0 100644
Binary files a/code/data/sim_107.pickle and b/code/data/sim_107.pickle differ
diff --git a/code/data/sim_108.pickle b/code/data/sim_108.pickle
index 50217ed..68c45f0 100644
Binary files a/code/data/sim_108.pickle and b/code/data/sim_108.pickle differ
diff --git a/code/data/sim_109.pickle b/code/data/sim_109.pickle
index c3eb398..a5aa0b4 100644
Binary files a/code/data/sim_109.pickle and b/code/data/sim_109.pickle differ
diff --git a/code/data/sim_11.pickle b/code/data/sim_11.pickle
index 73c00a9..518ecc3 100644
Binary files a/code/data/sim_11.pickle and b/code/data/sim_11.pickle differ
diff --git a/code/data/sim_110.pickle b/code/data/sim_110.pickle
index 6edbd18..bedbfef 100644
Binary files a/code/data/sim_110.pickle and b/code/data/sim_110.pickle differ
diff --git a/code/data/sim_111.pickle b/code/data/sim_111.pickle
index 3259c93..c642c31 100644
Binary files a/code/data/sim_111.pickle and b/code/data/sim_111.pickle differ
diff --git a/code/data/sim_112.pickle b/code/data/sim_112.pickle
index 6af5fc7..9912b5c 100644
Binary files a/code/data/sim_112.pickle and b/code/data/sim_112.pickle differ
diff --git a/code/data/sim_113.pickle b/code/data/sim_113.pickle
index 3e50b87..ab32d88 100644
Binary files a/code/data/sim_113.pickle and b/code/data/sim_113.pickle differ
diff --git a/code/data/sim_114.pickle b/code/data/sim_114.pickle
index 197686a..449c008 100644
Binary files a/code/data/sim_114.pickle and b/code/data/sim_114.pickle differ
diff --git a/code/data/sim_115.pickle b/code/data/sim_115.pickle
index b2daedb..82c365e 100644
Binary files a/code/data/sim_115.pickle and b/code/data/sim_115.pickle differ
diff --git a/code/data/sim_116.pickle b/code/data/sim_116.pickle
index d732b3c..2373d70 100644
Binary files a/code/data/sim_116.pickle and b/code/data/sim_116.pickle differ
diff --git a/code/data/sim_117.pickle b/code/data/sim_117.pickle
index 23bb0e3..90bcfd3 100644
Binary files a/code/data/sim_117.pickle and b/code/data/sim_117.pickle differ
diff --git a/code/data/sim_118.pickle b/code/data/sim_118.pickle
index 629f58e..2a05d24 100644
Binary files a/code/data/sim_118.pickle and b/code/data/sim_118.pickle differ
diff --git a/code/data/sim_119.pickle b/code/data/sim_119.pickle
index a9aadd2..43c2a34 100644
Binary files a/code/data/sim_119.pickle and b/code/data/sim_119.pickle differ
diff --git a/code/data/sim_12.pickle b/code/data/sim_12.pickle
index 4179cf0..d1e2d38 100644
Binary files a/code/data/sim_12.pickle and b/code/data/sim_12.pickle differ
diff --git a/code/data/sim_120.pickle b/code/data/sim_120.pickle
index b2b4735..e9858bb 100644
Binary files a/code/data/sim_120.pickle and b/code/data/sim_120.pickle differ
diff --git a/code/data/sim_121.pickle b/code/data/sim_121.pickle
index ec96164..5370aef 100644
Binary files a/code/data/sim_121.pickle and b/code/data/sim_121.pickle differ
diff --git a/code/data/sim_122.pickle b/code/data/sim_122.pickle
index fed1452..eba6322 100644
Binary files a/code/data/sim_122.pickle and b/code/data/sim_122.pickle differ
diff --git a/code/data/sim_123.pickle b/code/data/sim_123.pickle
index 5c9a791..6e27de3 100644
Binary files a/code/data/sim_123.pickle and b/code/data/sim_123.pickle differ
diff --git a/code/data/sim_124.pickle b/code/data/sim_124.pickle
index 5791d64..ac770bf 100644
Binary files a/code/data/sim_124.pickle and b/code/data/sim_124.pickle differ
diff --git a/code/data/sim_125.pickle b/code/data/sim_125.pickle
index ef83bc1..5524af4 100644
Binary files a/code/data/sim_125.pickle and b/code/data/sim_125.pickle differ
diff --git a/code/data/sim_126.pickle b/code/data/sim_126.pickle
index 76346b7..2a042dd 100644
Binary files a/code/data/sim_126.pickle and b/code/data/sim_126.pickle differ
diff --git a/code/data/sim_127.pickle b/code/data/sim_127.pickle
index 771051d..a37c128 100644
Binary files a/code/data/sim_127.pickle and b/code/data/sim_127.pickle differ
diff --git a/code/data/sim_128.pickle b/code/data/sim_128.pickle
index b934a3f..a86e5d3 100644
Binary files a/code/data/sim_128.pickle and b/code/data/sim_128.pickle differ
diff --git a/code/data/sim_129.pickle b/code/data/sim_129.pickle
index 877ac74..a773c24 100644
Binary files a/code/data/sim_129.pickle and b/code/data/sim_129.pickle differ
diff --git a/code/data/sim_13.pickle b/code/data/sim_13.pickle
index 5aed454..4e0c566 100644
Binary files a/code/data/sim_13.pickle and b/code/data/sim_13.pickle differ
diff --git a/code/data/sim_130.pickle b/code/data/sim_130.pickle
index cacd98f..fb6d763 100644
Binary files a/code/data/sim_130.pickle and b/code/data/sim_130.pickle differ
diff --git a/code/data/sim_131.pickle b/code/data/sim_131.pickle
index 01c2443..a8c23c3 100644
Binary files a/code/data/sim_131.pickle and b/code/data/sim_131.pickle differ
diff --git a/code/data/sim_132.pickle b/code/data/sim_132.pickle
index 8dd2718..ff1c21e 100644
Binary files a/code/data/sim_132.pickle and b/code/data/sim_132.pickle differ
diff --git a/code/data/sim_133.pickle b/code/data/sim_133.pickle
index 2bb526d..0a27255 100644
Binary files a/code/data/sim_133.pickle and b/code/data/sim_133.pickle differ
diff --git a/code/data/sim_134.pickle b/code/data/sim_134.pickle
index cb21465..8156466 100644
Binary files a/code/data/sim_134.pickle and b/code/data/sim_134.pickle differ
diff --git a/code/data/sim_135.pickle b/code/data/sim_135.pickle
index 49c6f9a..1bff092 100644
Binary files a/code/data/sim_135.pickle and b/code/data/sim_135.pickle differ
diff --git a/code/data/sim_136.pickle b/code/data/sim_136.pickle
index effb635..7003f08 100644
Binary files a/code/data/sim_136.pickle and b/code/data/sim_136.pickle differ
diff --git a/code/data/sim_137.pickle b/code/data/sim_137.pickle
index efb7679..3cac102 100644
Binary files a/code/data/sim_137.pickle and b/code/data/sim_137.pickle differ
diff --git a/code/data/sim_138.pickle b/code/data/sim_138.pickle
index e7bfa8a..fd67128 100644
Binary files a/code/data/sim_138.pickle and b/code/data/sim_138.pickle differ
diff --git a/code/data/sim_139.pickle b/code/data/sim_139.pickle
index 8fc6ffa..8804f39 100644
Binary files a/code/data/sim_139.pickle and b/code/data/sim_139.pickle differ
diff --git a/code/data/sim_14.pickle b/code/data/sim_14.pickle
index 9520c75..73d5c6c 100644
Binary files a/code/data/sim_14.pickle and b/code/data/sim_14.pickle differ
diff --git a/code/data/sim_140.pickle b/code/data/sim_140.pickle
index 258f22b..c3e6ff9 100644
Binary files a/code/data/sim_140.pickle and b/code/data/sim_140.pickle differ
diff --git a/code/data/sim_141.pickle b/code/data/sim_141.pickle
index 542108c..5ab29b7 100644
Binary files a/code/data/sim_141.pickle and b/code/data/sim_141.pickle differ
diff --git a/code/data/sim_142.pickle b/code/data/sim_142.pickle
index d45a46a..ef1515b 100644
Binary files a/code/data/sim_142.pickle and b/code/data/sim_142.pickle differ
diff --git a/code/data/sim_143.pickle b/code/data/sim_143.pickle
index 6b579c9..91fb2ca 100644
Binary files a/code/data/sim_143.pickle and b/code/data/sim_143.pickle differ
diff --git a/code/data/sim_144.pickle b/code/data/sim_144.pickle
index aee8271..9d29405 100644
Binary files a/code/data/sim_144.pickle and b/code/data/sim_144.pickle differ
diff --git a/code/data/sim_145.pickle b/code/data/sim_145.pickle
index 38e4ee9..988fc29 100644
Binary files a/code/data/sim_145.pickle and b/code/data/sim_145.pickle differ
diff --git a/code/data/sim_146.pickle b/code/data/sim_146.pickle
index 5fba934..309409a 100644
Binary files a/code/data/sim_146.pickle and b/code/data/sim_146.pickle differ
diff --git a/code/data/sim_147.pickle b/code/data/sim_147.pickle
index 3d041d3..2b8327e 100644
Binary files a/code/data/sim_147.pickle and b/code/data/sim_147.pickle differ
diff --git a/code/data/sim_148.pickle b/code/data/sim_148.pickle
index 8e58167..5d8bdb2 100644
Binary files a/code/data/sim_148.pickle and b/code/data/sim_148.pickle differ
diff --git a/code/data/sim_149.pickle b/code/data/sim_149.pickle
index f7063c0..a89ac68 100644
Binary files a/code/data/sim_149.pickle and b/code/data/sim_149.pickle differ
diff --git a/code/data/sim_15.pickle b/code/data/sim_15.pickle
index fd7239a..5d9d9d7 100644
Binary files a/code/data/sim_15.pickle and b/code/data/sim_15.pickle differ
diff --git a/code/data/sim_150.pickle b/code/data/sim_150.pickle
index 0b14f04..955a1b7 100644
Binary files a/code/data/sim_150.pickle and b/code/data/sim_150.pickle differ
diff --git a/code/data/sim_151.pickle b/code/data/sim_151.pickle
index be19f66..2c0cca5 100644
Binary files a/code/data/sim_151.pickle and b/code/data/sim_151.pickle differ
diff --git a/code/data/sim_152.pickle b/code/data/sim_152.pickle
index 279e480..4bc00db 100644
Binary files a/code/data/sim_152.pickle and b/code/data/sim_152.pickle differ
diff --git a/code/data/sim_153.pickle b/code/data/sim_153.pickle
index a674c5e..3df993e 100644
Binary files a/code/data/sim_153.pickle and b/code/data/sim_153.pickle differ
diff --git a/code/data/sim_154.pickle b/code/data/sim_154.pickle
index 2b25a6f..98045d6 100644
Binary files a/code/data/sim_154.pickle and b/code/data/sim_154.pickle differ
diff --git a/code/data/sim_155.pickle b/code/data/sim_155.pickle
index 3b2d3f9..2f8a45a 100644
Binary files a/code/data/sim_155.pickle and b/code/data/sim_155.pickle differ
diff --git a/code/data/sim_156.pickle b/code/data/sim_156.pickle
index 815cfb5..06766a4 100644
Binary files a/code/data/sim_156.pickle and b/code/data/sim_156.pickle differ
diff --git a/code/data/sim_157.pickle b/code/data/sim_157.pickle
index ba5fde5..b638e66 100644
Binary files a/code/data/sim_157.pickle and b/code/data/sim_157.pickle differ
diff --git a/code/data/sim_158.pickle b/code/data/sim_158.pickle
index 623d238..0a19eeb 100644
Binary files a/code/data/sim_158.pickle and b/code/data/sim_158.pickle differ
diff --git a/code/data/sim_159.pickle b/code/data/sim_159.pickle
index dc17cc7..ade36b8 100644
Binary files a/code/data/sim_159.pickle and b/code/data/sim_159.pickle differ
diff --git a/code/data/sim_16.pickle b/code/data/sim_16.pickle
index cc79c5d..71d35e2 100644
Binary files a/code/data/sim_16.pickle and b/code/data/sim_16.pickle differ
diff --git a/code/data/sim_160.pickle b/code/data/sim_160.pickle
index 1f740b7..e76ce31 100644
Binary files a/code/data/sim_160.pickle and b/code/data/sim_160.pickle differ
diff --git a/code/data/sim_161.pickle b/code/data/sim_161.pickle
index 31ff7bd..27153cb 100644
Binary files a/code/data/sim_161.pickle and b/code/data/sim_161.pickle differ
diff --git a/code/data/sim_162.pickle b/code/data/sim_162.pickle
index a1fe027..3dedc18 100644
Binary files a/code/data/sim_162.pickle and b/code/data/sim_162.pickle differ
diff --git a/code/data/sim_163.pickle b/code/data/sim_163.pickle
index 859b741..af840cc 100644
Binary files a/code/data/sim_163.pickle and b/code/data/sim_163.pickle differ
diff --git a/code/data/sim_164.pickle b/code/data/sim_164.pickle
index 6790d98..0bcd3ea 100644
Binary files a/code/data/sim_164.pickle and b/code/data/sim_164.pickle differ
diff --git a/code/data/sim_165.pickle b/code/data/sim_165.pickle
index f01ebb4..25ed1d7 100644
Binary files a/code/data/sim_165.pickle and b/code/data/sim_165.pickle differ
diff --git a/code/data/sim_166.pickle b/code/data/sim_166.pickle
index be4479d..d530f83 100644
Binary files a/code/data/sim_166.pickle and b/code/data/sim_166.pickle differ
diff --git a/code/data/sim_167.pickle b/code/data/sim_167.pickle
index 1c87a61..c804f46 100644
Binary files a/code/data/sim_167.pickle and b/code/data/sim_167.pickle differ
diff --git a/code/data/sim_168.pickle b/code/data/sim_168.pickle
index 4090605..50cc5d4 100644
Binary files a/code/data/sim_168.pickle and b/code/data/sim_168.pickle differ
diff --git a/code/data/sim_169.pickle b/code/data/sim_169.pickle
index 9962e44..96d308c 100644
Binary files a/code/data/sim_169.pickle and b/code/data/sim_169.pickle differ
diff --git a/code/data/sim_17.pickle b/code/data/sim_17.pickle
index 30157c8..42ecc50 100644
Binary files a/code/data/sim_17.pickle and b/code/data/sim_17.pickle differ
diff --git a/code/data/sim_170.pickle b/code/data/sim_170.pickle
index 46e7d0d..4495f8c 100644
Binary files a/code/data/sim_170.pickle and b/code/data/sim_170.pickle differ
diff --git a/code/data/sim_171.pickle b/code/data/sim_171.pickle
index 9732ca1..cc5eda6 100644
Binary files a/code/data/sim_171.pickle and b/code/data/sim_171.pickle differ
diff --git a/code/data/sim_172.pickle b/code/data/sim_172.pickle
index d2e8c64..497ab0a 100644
Binary files a/code/data/sim_172.pickle and b/code/data/sim_172.pickle differ
diff --git a/code/data/sim_173.pickle b/code/data/sim_173.pickle
index 5998468..8dc42ed 100644
Binary files a/code/data/sim_173.pickle and b/code/data/sim_173.pickle differ
diff --git a/code/data/sim_174.pickle b/code/data/sim_174.pickle
index c78e443..06146d9 100644
Binary files a/code/data/sim_174.pickle and b/code/data/sim_174.pickle differ
diff --git a/code/data/sim_175.pickle b/code/data/sim_175.pickle
index ada10e0..51e6575 100644
Binary files a/code/data/sim_175.pickle and b/code/data/sim_175.pickle differ
diff --git a/code/data/sim_176.pickle b/code/data/sim_176.pickle
index d9c2cc9..225cee6 100644
Binary files a/code/data/sim_176.pickle and b/code/data/sim_176.pickle differ
diff --git a/code/data/sim_177.pickle b/code/data/sim_177.pickle
index 1bf11ca..52e6def 100644
Binary files a/code/data/sim_177.pickle and b/code/data/sim_177.pickle differ
diff --git a/code/data/sim_178.pickle b/code/data/sim_178.pickle
index f61ca25..4aaba23 100644
Binary files a/code/data/sim_178.pickle and b/code/data/sim_178.pickle differ
diff --git a/code/data/sim_179.pickle b/code/data/sim_179.pickle
index 20a9449..47a291e 100644
Binary files a/code/data/sim_179.pickle and b/code/data/sim_179.pickle differ
diff --git a/code/data/sim_18.pickle b/code/data/sim_18.pickle
index 6dc3699..a4ed9b4 100644
Binary files a/code/data/sim_18.pickle and b/code/data/sim_18.pickle differ
diff --git a/code/data/sim_180.pickle b/code/data/sim_180.pickle
index 34185a8..de4e174 100644
Binary files a/code/data/sim_180.pickle and b/code/data/sim_180.pickle differ
diff --git a/code/data/sim_181.pickle b/code/data/sim_181.pickle
index 75110bd..fe7a7b9 100644
Binary files a/code/data/sim_181.pickle and b/code/data/sim_181.pickle differ
diff --git a/code/data/sim_182.pickle b/code/data/sim_182.pickle
index 1aaf413..cf1c980 100644
Binary files a/code/data/sim_182.pickle and b/code/data/sim_182.pickle differ
diff --git a/code/data/sim_183.pickle b/code/data/sim_183.pickle
index 497efc4..97e30f1 100644
Binary files a/code/data/sim_183.pickle and b/code/data/sim_183.pickle differ
diff --git a/code/data/sim_184.pickle b/code/data/sim_184.pickle
index 3867bdb..8d86d41 100644
Binary files a/code/data/sim_184.pickle and b/code/data/sim_184.pickle differ
diff --git a/code/data/sim_185.pickle b/code/data/sim_185.pickle
index 33166b4..53fbc8e 100644
Binary files a/code/data/sim_185.pickle and b/code/data/sim_185.pickle differ
diff --git a/code/data/sim_186.pickle b/code/data/sim_186.pickle
index 8e127f8..39014e9 100644
Binary files a/code/data/sim_186.pickle and b/code/data/sim_186.pickle differ
diff --git a/code/data/sim_187.pickle b/code/data/sim_187.pickle
index eedae5e..3e42a03 100644
Binary files a/code/data/sim_187.pickle and b/code/data/sim_187.pickle differ
diff --git a/code/data/sim_188.pickle b/code/data/sim_188.pickle
index 6bbf4df..5d9cb75 100644
Binary files a/code/data/sim_188.pickle and b/code/data/sim_188.pickle differ
diff --git a/code/data/sim_189.pickle b/code/data/sim_189.pickle
index 342e926..cf14e1e 100644
Binary files a/code/data/sim_189.pickle and b/code/data/sim_189.pickle differ
diff --git a/code/data/sim_19.pickle b/code/data/sim_19.pickle
index 283fa68..d7ceed9 100644
Binary files a/code/data/sim_19.pickle and b/code/data/sim_19.pickle differ
diff --git a/code/data/sim_190.pickle b/code/data/sim_190.pickle
index 0c73571..e443329 100644
Binary files a/code/data/sim_190.pickle and b/code/data/sim_190.pickle differ
diff --git a/code/data/sim_191.pickle b/code/data/sim_191.pickle
index 7479457..4be0f12 100644
Binary files a/code/data/sim_191.pickle and b/code/data/sim_191.pickle differ
diff --git a/code/data/sim_192.pickle b/code/data/sim_192.pickle
index b1ef5d2..c8ba2f2 100644
Binary files a/code/data/sim_192.pickle and b/code/data/sim_192.pickle differ
diff --git a/code/data/sim_193.pickle b/code/data/sim_193.pickle
index df3e230..f595dd2 100644
Binary files a/code/data/sim_193.pickle and b/code/data/sim_193.pickle differ
diff --git a/code/data/sim_194.pickle b/code/data/sim_194.pickle
index c21dac8..68e1368 100644
Binary files a/code/data/sim_194.pickle and b/code/data/sim_194.pickle differ
diff --git a/code/data/sim_195.pickle b/code/data/sim_195.pickle
index 6018fec..0a37c8f 100644
Binary files a/code/data/sim_195.pickle and b/code/data/sim_195.pickle differ
diff --git a/code/data/sim_196.pickle b/code/data/sim_196.pickle
index 05b51df..ab91586 100644
Binary files a/code/data/sim_196.pickle and b/code/data/sim_196.pickle differ
diff --git a/code/data/sim_197.pickle b/code/data/sim_197.pickle
index cc73b4b..5be30f5 100644
Binary files a/code/data/sim_197.pickle and b/code/data/sim_197.pickle differ
diff --git a/code/data/sim_198.pickle b/code/data/sim_198.pickle
index 0edec64..3469aee 100644
Binary files a/code/data/sim_198.pickle and b/code/data/sim_198.pickle differ
diff --git a/code/data/sim_199.pickle b/code/data/sim_199.pickle
index 03cd1a9..bbce9a1 100644
Binary files a/code/data/sim_199.pickle and b/code/data/sim_199.pickle differ
diff --git a/code/data/sim_2.pickle b/code/data/sim_2.pickle
index 637ec45..3c089ee 100644
Binary files a/code/data/sim_2.pickle and b/code/data/sim_2.pickle differ
diff --git a/code/data/sim_20.pickle b/code/data/sim_20.pickle
index 1c500d4..b06b66f 100644
Binary files a/code/data/sim_20.pickle and b/code/data/sim_20.pickle differ
diff --git a/code/data/sim_200.pickle b/code/data/sim_200.pickle
index c7cd200..2f1a7ec 100644
Binary files a/code/data/sim_200.pickle and b/code/data/sim_200.pickle differ
diff --git a/code/data/sim_201.pickle b/code/data/sim_201.pickle
index b343e89..f924ebb 100644
Binary files a/code/data/sim_201.pickle and b/code/data/sim_201.pickle differ
diff --git a/code/data/sim_202.pickle b/code/data/sim_202.pickle
index 270d405..379ff1b 100644
Binary files a/code/data/sim_202.pickle and b/code/data/sim_202.pickle differ
diff --git a/code/data/sim_203.pickle b/code/data/sim_203.pickle
index f4f07ff..a259e7c 100644
Binary files a/code/data/sim_203.pickle and b/code/data/sim_203.pickle differ
diff --git a/code/data/sim_204.pickle b/code/data/sim_204.pickle
index 9853252..1010987 100644
Binary files a/code/data/sim_204.pickle and b/code/data/sim_204.pickle differ
diff --git a/code/data/sim_205.pickle b/code/data/sim_205.pickle
index 8cd2609..3ff1784 100644
Binary files a/code/data/sim_205.pickle and b/code/data/sim_205.pickle differ
diff --git a/code/data/sim_206.pickle b/code/data/sim_206.pickle
index 41d597b..de81218 100644
Binary files a/code/data/sim_206.pickle and b/code/data/sim_206.pickle differ
diff --git a/code/data/sim_207.pickle b/code/data/sim_207.pickle
index b1b5972..adcc4a5 100644
Binary files a/code/data/sim_207.pickle and b/code/data/sim_207.pickle differ
diff --git a/code/data/sim_208.pickle b/code/data/sim_208.pickle
index 997b187..a11afa5 100644
Binary files a/code/data/sim_208.pickle and b/code/data/sim_208.pickle differ
diff --git a/code/data/sim_209.pickle b/code/data/sim_209.pickle
index 84a77ac..87a1e89 100644
Binary files a/code/data/sim_209.pickle and b/code/data/sim_209.pickle differ
diff --git a/code/data/sim_21.pickle b/code/data/sim_21.pickle
index af1d747..6c03852 100644
Binary files a/code/data/sim_21.pickle and b/code/data/sim_21.pickle differ
diff --git a/code/data/sim_210.pickle b/code/data/sim_210.pickle
index 3600255..762ccd4 100644
Binary files a/code/data/sim_210.pickle and b/code/data/sim_210.pickle differ
diff --git a/code/data/sim_211.pickle b/code/data/sim_211.pickle
index c6a61e2..c237d69 100644
Binary files a/code/data/sim_211.pickle and b/code/data/sim_211.pickle differ
diff --git a/code/data/sim_212.pickle b/code/data/sim_212.pickle
index ef378c0..07077b0 100644
Binary files a/code/data/sim_212.pickle and b/code/data/sim_212.pickle differ
diff --git a/code/data/sim_213.pickle b/code/data/sim_213.pickle
index 13aa1df..17c959c 100644
Binary files a/code/data/sim_213.pickle and b/code/data/sim_213.pickle differ
diff --git a/code/data/sim_214.pickle b/code/data/sim_214.pickle
index 70257bc..960a550 100644
Binary files a/code/data/sim_214.pickle and b/code/data/sim_214.pickle differ
diff --git a/code/data/sim_215.pickle b/code/data/sim_215.pickle
index 05e6e33..b4fa86f 100644
Binary files a/code/data/sim_215.pickle and b/code/data/sim_215.pickle differ
diff --git a/code/data/sim_216.pickle b/code/data/sim_216.pickle
index a7330f5..ac1f4ba 100644
Binary files a/code/data/sim_216.pickle and b/code/data/sim_216.pickle differ
diff --git a/code/data/sim_217.pickle b/code/data/sim_217.pickle
index e00b01b..4c2c633 100644
Binary files a/code/data/sim_217.pickle and b/code/data/sim_217.pickle differ
diff --git a/code/data/sim_218.pickle b/code/data/sim_218.pickle
index f0ec5a4..77c8b44 100644
Binary files a/code/data/sim_218.pickle and b/code/data/sim_218.pickle differ
diff --git a/code/data/sim_219.pickle b/code/data/sim_219.pickle
index dac72b3..8ea53be 100644
Binary files a/code/data/sim_219.pickle and b/code/data/sim_219.pickle differ
diff --git a/code/data/sim_22.pickle b/code/data/sim_22.pickle
index 4c00849..565fbb6 100644
Binary files a/code/data/sim_22.pickle and b/code/data/sim_22.pickle differ
diff --git a/code/data/sim_220.pickle b/code/data/sim_220.pickle
index 1a6d79b..6e73a61 100644
Binary files a/code/data/sim_220.pickle and b/code/data/sim_220.pickle differ
diff --git a/code/data/sim_221.pickle b/code/data/sim_221.pickle
index 48b9a7d..534c189 100644
Binary files a/code/data/sim_221.pickle and b/code/data/sim_221.pickle differ
diff --git a/code/data/sim_222.pickle b/code/data/sim_222.pickle
index 153b6ea..7edd04f 100644
Binary files a/code/data/sim_222.pickle and b/code/data/sim_222.pickle differ
diff --git a/code/data/sim_223.pickle b/code/data/sim_223.pickle
index 8465e9a..37d9b4f 100644
Binary files a/code/data/sim_223.pickle and b/code/data/sim_223.pickle differ
diff --git a/code/data/sim_224.pickle b/code/data/sim_224.pickle
index 88d5561..95f906a 100644
Binary files a/code/data/sim_224.pickle and b/code/data/sim_224.pickle differ
diff --git a/code/data/sim_225.pickle b/code/data/sim_225.pickle
index 94cce9f..6f00bee 100644
Binary files a/code/data/sim_225.pickle and b/code/data/sim_225.pickle differ
diff --git a/code/data/sim_226.pickle b/code/data/sim_226.pickle
index 71aa729..baa9289 100644
Binary files a/code/data/sim_226.pickle and b/code/data/sim_226.pickle differ
diff --git a/code/data/sim_227.pickle b/code/data/sim_227.pickle
index 105ebec..afa633d 100644
Binary files a/code/data/sim_227.pickle and b/code/data/sim_227.pickle differ
diff --git a/code/data/sim_228.pickle b/code/data/sim_228.pickle
index bd27aa8..6dd7319 100644
Binary files a/code/data/sim_228.pickle and b/code/data/sim_228.pickle differ
diff --git a/code/data/sim_229.pickle b/code/data/sim_229.pickle
index b8a1245..76383cc 100644
Binary files a/code/data/sim_229.pickle and b/code/data/sim_229.pickle differ
diff --git a/code/data/sim_23.pickle b/code/data/sim_23.pickle
index c850b00..b94ce70 100644
Binary files a/code/data/sim_23.pickle and b/code/data/sim_23.pickle differ
diff --git a/code/data/sim_230.pickle b/code/data/sim_230.pickle
index 606a288..e65aad1 100644
Binary files a/code/data/sim_230.pickle and b/code/data/sim_230.pickle differ
diff --git a/code/data/sim_231.pickle b/code/data/sim_231.pickle
index 4e40164..8ba3f49 100644
Binary files a/code/data/sim_231.pickle and b/code/data/sim_231.pickle differ
diff --git a/code/data/sim_232.pickle b/code/data/sim_232.pickle
index 93619fb..211b7e5 100644
Binary files a/code/data/sim_232.pickle and b/code/data/sim_232.pickle differ
diff --git a/code/data/sim_233.pickle b/code/data/sim_233.pickle
index f9868cf..abfcfcb 100644
Binary files a/code/data/sim_233.pickle and b/code/data/sim_233.pickle differ
diff --git a/code/data/sim_234.pickle b/code/data/sim_234.pickle
index 113cff1..9e7532f 100644
Binary files a/code/data/sim_234.pickle and b/code/data/sim_234.pickle differ
diff --git a/code/data/sim_235.pickle b/code/data/sim_235.pickle
index db9698a..5884536 100644
Binary files a/code/data/sim_235.pickle and b/code/data/sim_235.pickle differ
diff --git a/code/data/sim_236.pickle b/code/data/sim_236.pickle
index 4f3c864..b54c63d 100644
Binary files a/code/data/sim_236.pickle and b/code/data/sim_236.pickle differ
diff --git a/code/data/sim_237.pickle b/code/data/sim_237.pickle
index 6318d85..96bc100 100644
Binary files a/code/data/sim_237.pickle and b/code/data/sim_237.pickle differ
diff --git a/code/data/sim_238.pickle b/code/data/sim_238.pickle
index f2c7e65..40ab0c5 100644
Binary files a/code/data/sim_238.pickle and b/code/data/sim_238.pickle differ
diff --git a/code/data/sim_239.pickle b/code/data/sim_239.pickle
index cd98b36..39c0a4e 100644
Binary files a/code/data/sim_239.pickle and b/code/data/sim_239.pickle differ
diff --git a/code/data/sim_24.pickle b/code/data/sim_24.pickle
index 82ba98b..84aed1d 100644
Binary files a/code/data/sim_24.pickle and b/code/data/sim_24.pickle differ
diff --git a/code/data/sim_240.pickle b/code/data/sim_240.pickle
index 3b8495a..a3fa804 100644
Binary files a/code/data/sim_240.pickle and b/code/data/sim_240.pickle differ
diff --git a/code/data/sim_241.pickle b/code/data/sim_241.pickle
index 6fd2711..a97338f 100644
Binary files a/code/data/sim_241.pickle and b/code/data/sim_241.pickle differ
diff --git a/code/data/sim_242.pickle b/code/data/sim_242.pickle
index bfc1f56..9103c54 100644
Binary files a/code/data/sim_242.pickle and b/code/data/sim_242.pickle differ
diff --git a/code/data/sim_243.pickle b/code/data/sim_243.pickle
index 5af3e65..5c76d84 100644
Binary files a/code/data/sim_243.pickle and b/code/data/sim_243.pickle differ
diff --git a/code/data/sim_244.pickle b/code/data/sim_244.pickle
index 75c089e..bf4c90f 100644
Binary files a/code/data/sim_244.pickle and b/code/data/sim_244.pickle differ
diff --git a/code/data/sim_245.pickle b/code/data/sim_245.pickle
index 6508bf0..779129d 100644
Binary files a/code/data/sim_245.pickle and b/code/data/sim_245.pickle differ
diff --git a/code/data/sim_246.pickle b/code/data/sim_246.pickle
index a472684..41212a6 100644
Binary files a/code/data/sim_246.pickle and b/code/data/sim_246.pickle differ
diff --git a/code/data/sim_247.pickle b/code/data/sim_247.pickle
index 3d3b612..b2fb849 100644
Binary files a/code/data/sim_247.pickle and b/code/data/sim_247.pickle differ
diff --git a/code/data/sim_248.pickle b/code/data/sim_248.pickle
index f0c870d..ef37457 100644
Binary files a/code/data/sim_248.pickle and b/code/data/sim_248.pickle differ
diff --git a/code/data/sim_249.pickle b/code/data/sim_249.pickle
index a79b16f..7555bbb 100644
Binary files a/code/data/sim_249.pickle and b/code/data/sim_249.pickle differ
diff --git a/code/data/sim_25.pickle b/code/data/sim_25.pickle
index 8de8e15..c2f6321 100644
Binary files a/code/data/sim_25.pickle and b/code/data/sim_25.pickle differ
diff --git a/code/data/sim_250.pickle b/code/data/sim_250.pickle
index 3eaf510..d279bcf 100644
Binary files a/code/data/sim_250.pickle and b/code/data/sim_250.pickle differ
diff --git a/code/data/sim_251.pickle b/code/data/sim_251.pickle
index 96ebd91..014a812 100644
Binary files a/code/data/sim_251.pickle and b/code/data/sim_251.pickle differ
diff --git a/code/data/sim_252.pickle b/code/data/sim_252.pickle
index d27aff3..15ea522 100644
Binary files a/code/data/sim_252.pickle and b/code/data/sim_252.pickle differ
diff --git a/code/data/sim_253.pickle b/code/data/sim_253.pickle
index 26a4eb9..5da8e19 100644
Binary files a/code/data/sim_253.pickle and b/code/data/sim_253.pickle differ
diff --git a/code/data/sim_254.pickle b/code/data/sim_254.pickle
index 504c68a..86d6856 100644
Binary files a/code/data/sim_254.pickle and b/code/data/sim_254.pickle differ
diff --git a/code/data/sim_255.pickle b/code/data/sim_255.pickle
index 6a7059f..ebf0a6f 100644
Binary files a/code/data/sim_255.pickle and b/code/data/sim_255.pickle differ
diff --git a/code/data/sim_256.pickle b/code/data/sim_256.pickle
index 58749a3..cf01984 100644
Binary files a/code/data/sim_256.pickle and b/code/data/sim_256.pickle differ
diff --git a/code/data/sim_257.pickle b/code/data/sim_257.pickle
index 0000097..57fced2 100644
Binary files a/code/data/sim_257.pickle and b/code/data/sim_257.pickle differ
diff --git a/code/data/sim_258.pickle b/code/data/sim_258.pickle
index 40cdc86..f69575a 100644
Binary files a/code/data/sim_258.pickle and b/code/data/sim_258.pickle differ
diff --git a/code/data/sim_259.pickle b/code/data/sim_259.pickle
index cf4d076..27e1380 100644
Binary files a/code/data/sim_259.pickle and b/code/data/sim_259.pickle differ
diff --git a/code/data/sim_26.pickle b/code/data/sim_26.pickle
index 2ea268b..0217b35 100644
Binary files a/code/data/sim_26.pickle and b/code/data/sim_26.pickle differ
diff --git a/code/data/sim_260.pickle b/code/data/sim_260.pickle
index 92e5c29..731f2d6 100644
Binary files a/code/data/sim_260.pickle and b/code/data/sim_260.pickle differ
diff --git a/code/data/sim_261.pickle b/code/data/sim_261.pickle
index 1242236..2befa06 100644
Binary files a/code/data/sim_261.pickle and b/code/data/sim_261.pickle differ
diff --git a/code/data/sim_262.pickle b/code/data/sim_262.pickle
index 3c89f5c..eb54c9b 100644
Binary files a/code/data/sim_262.pickle and b/code/data/sim_262.pickle differ
diff --git a/code/data/sim_263.pickle b/code/data/sim_263.pickle
index 1e0727c..6a7e78d 100644
Binary files a/code/data/sim_263.pickle and b/code/data/sim_263.pickle differ
diff --git a/code/data/sim_264.pickle b/code/data/sim_264.pickle
index fbc9619..d451fad 100644
Binary files a/code/data/sim_264.pickle and b/code/data/sim_264.pickle differ
diff --git a/code/data/sim_265.pickle b/code/data/sim_265.pickle
index 567e6a3..4e1d455 100644
Binary files a/code/data/sim_265.pickle and b/code/data/sim_265.pickle differ
diff --git a/code/data/sim_266.pickle b/code/data/sim_266.pickle
index 43f20c8..4ca65d7 100644
Binary files a/code/data/sim_266.pickle and b/code/data/sim_266.pickle differ
diff --git a/code/data/sim_267.pickle b/code/data/sim_267.pickle
index 2bee541..fae357b 100644
Binary files a/code/data/sim_267.pickle and b/code/data/sim_267.pickle differ
diff --git a/code/data/sim_268.pickle b/code/data/sim_268.pickle
index c655bfd..634f03b 100644
Binary files a/code/data/sim_268.pickle and b/code/data/sim_268.pickle differ
diff --git a/code/data/sim_269.pickle b/code/data/sim_269.pickle
index ed9a7a0..19d61b0 100644
Binary files a/code/data/sim_269.pickle and b/code/data/sim_269.pickle differ
diff --git a/code/data/sim_27.pickle b/code/data/sim_27.pickle
index d277233..6b5d2ff 100644
Binary files a/code/data/sim_27.pickle and b/code/data/sim_27.pickle differ
diff --git a/code/data/sim_270.pickle b/code/data/sim_270.pickle
index 70a7258..da658c5 100644
Binary files a/code/data/sim_270.pickle and b/code/data/sim_270.pickle differ
diff --git a/code/data/sim_271.pickle b/code/data/sim_271.pickle
index 637c7f6..f40f3f1 100644
Binary files a/code/data/sim_271.pickle and b/code/data/sim_271.pickle differ
diff --git a/code/data/sim_272.pickle b/code/data/sim_272.pickle
index a0d29ad..46d4070 100644
Binary files a/code/data/sim_272.pickle and b/code/data/sim_272.pickle differ
diff --git a/code/data/sim_273.pickle b/code/data/sim_273.pickle
index dbe62b3..01349d6 100644
Binary files a/code/data/sim_273.pickle and b/code/data/sim_273.pickle differ
diff --git a/code/data/sim_274.pickle b/code/data/sim_274.pickle
index e6f7c20..5044710 100644
Binary files a/code/data/sim_274.pickle and b/code/data/sim_274.pickle differ
diff --git a/code/data/sim_275.pickle b/code/data/sim_275.pickle
index 97a3ddf..1a9a27f 100644
Binary files a/code/data/sim_275.pickle and b/code/data/sim_275.pickle differ
diff --git a/code/data/sim_276.pickle b/code/data/sim_276.pickle
index 688df02..2e3d7fe 100644
Binary files a/code/data/sim_276.pickle and b/code/data/sim_276.pickle differ
diff --git a/code/data/sim_277.pickle b/code/data/sim_277.pickle
index 5f3e907..54137b7 100644
Binary files a/code/data/sim_277.pickle and b/code/data/sim_277.pickle differ
diff --git a/code/data/sim_278.pickle b/code/data/sim_278.pickle
index 32cd4bb..d0410c7 100644
Binary files a/code/data/sim_278.pickle and b/code/data/sim_278.pickle differ
diff --git a/code/data/sim_279.pickle b/code/data/sim_279.pickle
index 419bd74..99e6de5 100644
Binary files a/code/data/sim_279.pickle and b/code/data/sim_279.pickle differ
diff --git a/code/data/sim_28.pickle b/code/data/sim_28.pickle
index f320f8c..cb00b6a 100644
Binary files a/code/data/sim_28.pickle and b/code/data/sim_28.pickle differ
diff --git a/code/data/sim_280.pickle b/code/data/sim_280.pickle
index 723c1ff..883d2b7 100644
Binary files a/code/data/sim_280.pickle and b/code/data/sim_280.pickle differ
diff --git a/code/data/sim_281.pickle b/code/data/sim_281.pickle
index 41be1f4..638a141 100644
Binary files a/code/data/sim_281.pickle and b/code/data/sim_281.pickle differ
diff --git a/code/data/sim_282.pickle b/code/data/sim_282.pickle
index 2f403a5..29b2f91 100644
Binary files a/code/data/sim_282.pickle and b/code/data/sim_282.pickle differ
diff --git a/code/data/sim_283.pickle b/code/data/sim_283.pickle
index 024c663..422e74a 100644
Binary files a/code/data/sim_283.pickle and b/code/data/sim_283.pickle differ
diff --git a/code/data/sim_284.pickle b/code/data/sim_284.pickle
index 28b5cd3..e84a667 100644
Binary files a/code/data/sim_284.pickle and b/code/data/sim_284.pickle differ
diff --git a/code/data/sim_285.pickle b/code/data/sim_285.pickle
index a965a22..0373a79 100644
Binary files a/code/data/sim_285.pickle and b/code/data/sim_285.pickle differ
diff --git a/code/data/sim_286.pickle b/code/data/sim_286.pickle
index 23de115..3a344dd 100644
Binary files a/code/data/sim_286.pickle and b/code/data/sim_286.pickle differ
diff --git a/code/data/sim_287.pickle b/code/data/sim_287.pickle
index daaa561..f63a95a 100644
Binary files a/code/data/sim_287.pickle and b/code/data/sim_287.pickle differ
diff --git a/code/data/sim_288.pickle b/code/data/sim_288.pickle
index c03d9bd..f434b7d 100644
Binary files a/code/data/sim_288.pickle and b/code/data/sim_288.pickle differ
diff --git a/code/data/sim_289.pickle b/code/data/sim_289.pickle
index f22a05d..e6c2f7a 100644
Binary files a/code/data/sim_289.pickle and b/code/data/sim_289.pickle differ
diff --git a/code/data/sim_29.pickle b/code/data/sim_29.pickle
index a3ad29d..79af0be 100644
Binary files a/code/data/sim_29.pickle and b/code/data/sim_29.pickle differ
diff --git a/code/data/sim_290.pickle b/code/data/sim_290.pickle
index 148b418..3fb8d35 100644
Binary files a/code/data/sim_290.pickle and b/code/data/sim_290.pickle differ
diff --git a/code/data/sim_291.pickle b/code/data/sim_291.pickle
index 156c9d3..0347f44 100644
Binary files a/code/data/sim_291.pickle and b/code/data/sim_291.pickle differ
diff --git a/code/data/sim_292.pickle b/code/data/sim_292.pickle
index 6b7f539..69a3100 100644
Binary files a/code/data/sim_292.pickle and b/code/data/sim_292.pickle differ
diff --git a/code/data/sim_293.pickle b/code/data/sim_293.pickle
index e3e7329..729c23a 100644
Binary files a/code/data/sim_293.pickle and b/code/data/sim_293.pickle differ
diff --git a/code/data/sim_294.pickle b/code/data/sim_294.pickle
index 74cc7a6..c5f3a24 100644
Binary files a/code/data/sim_294.pickle and b/code/data/sim_294.pickle differ
diff --git a/code/data/sim_295.pickle b/code/data/sim_295.pickle
index 80c199f..a4a1cdc 100644
Binary files a/code/data/sim_295.pickle and b/code/data/sim_295.pickle differ
diff --git a/code/data/sim_296.pickle b/code/data/sim_296.pickle
index 41a7dfa..67037dd 100644
Binary files a/code/data/sim_296.pickle and b/code/data/sim_296.pickle differ
diff --git a/code/data/sim_297.pickle b/code/data/sim_297.pickle
index 79506e8..8178496 100644
Binary files a/code/data/sim_297.pickle and b/code/data/sim_297.pickle differ
diff --git a/code/data/sim_298.pickle b/code/data/sim_298.pickle
index 0a13cf6..2ba43c6 100644
Binary files a/code/data/sim_298.pickle and b/code/data/sim_298.pickle differ
diff --git a/code/data/sim_299.pickle b/code/data/sim_299.pickle
index 1502da1..ab37722 100644
Binary files a/code/data/sim_299.pickle and b/code/data/sim_299.pickle differ
diff --git a/code/data/sim_3.pickle b/code/data/sim_3.pickle
index 5598999..3054e61 100644
Binary files a/code/data/sim_3.pickle and b/code/data/sim_3.pickle differ
diff --git a/code/data/sim_30.pickle b/code/data/sim_30.pickle
index 04ad6cf..9e70df0 100644
Binary files a/code/data/sim_30.pickle and b/code/data/sim_30.pickle differ
diff --git a/code/data/sim_300.pickle b/code/data/sim_300.pickle
index 2068cd7..aa401b3 100644
Binary files a/code/data/sim_300.pickle and b/code/data/sim_300.pickle differ
diff --git a/code/data/sim_301.pickle b/code/data/sim_301.pickle
index 6cc0d08..7266904 100644
Binary files a/code/data/sim_301.pickle and b/code/data/sim_301.pickle differ
diff --git a/code/data/sim_302.pickle b/code/data/sim_302.pickle
index 0479c88..2f49913 100644
Binary files a/code/data/sim_302.pickle and b/code/data/sim_302.pickle differ
diff --git a/code/data/sim_303.pickle b/code/data/sim_303.pickle
index ffdcfe1..2169153 100644
Binary files a/code/data/sim_303.pickle and b/code/data/sim_303.pickle differ
diff --git a/code/data/sim_304.pickle b/code/data/sim_304.pickle
index 25c7007..236fd62 100644
Binary files a/code/data/sim_304.pickle and b/code/data/sim_304.pickle differ
diff --git a/code/data/sim_305.pickle b/code/data/sim_305.pickle
index 9c0f3b7..1749b7e 100644
Binary files a/code/data/sim_305.pickle and b/code/data/sim_305.pickle differ
diff --git a/code/data/sim_306.pickle b/code/data/sim_306.pickle
index a73fcb0..1071052 100644
Binary files a/code/data/sim_306.pickle and b/code/data/sim_306.pickle differ
diff --git a/code/data/sim_307.pickle b/code/data/sim_307.pickle
index 1ef9b50..d4e712b 100644
Binary files a/code/data/sim_307.pickle and b/code/data/sim_307.pickle differ
diff --git a/code/data/sim_308.pickle b/code/data/sim_308.pickle
index ac07754..c2b8dfe 100644
Binary files a/code/data/sim_308.pickle and b/code/data/sim_308.pickle differ
diff --git a/code/data/sim_309.pickle b/code/data/sim_309.pickle
index c4272db..70a696d 100644
Binary files a/code/data/sim_309.pickle and b/code/data/sim_309.pickle differ
diff --git a/code/data/sim_31.pickle b/code/data/sim_31.pickle
index 15b77b8..67061f1 100644
Binary files a/code/data/sim_31.pickle and b/code/data/sim_31.pickle differ
diff --git a/code/data/sim_310.pickle b/code/data/sim_310.pickle
index ee17baf..d7f1369 100644
Binary files a/code/data/sim_310.pickle and b/code/data/sim_310.pickle differ
diff --git a/code/data/sim_311.pickle b/code/data/sim_311.pickle
index 9495cfc..72f5748 100644
Binary files a/code/data/sim_311.pickle and b/code/data/sim_311.pickle differ
diff --git a/code/data/sim_312.pickle b/code/data/sim_312.pickle
index d4a77c5..bc3be73 100644
Binary files a/code/data/sim_312.pickle and b/code/data/sim_312.pickle differ
diff --git a/code/data/sim_313.pickle b/code/data/sim_313.pickle
index 861e396..faa32fd 100644
Binary files a/code/data/sim_313.pickle and b/code/data/sim_313.pickle differ
diff --git a/code/data/sim_314.pickle b/code/data/sim_314.pickle
index 12c2f05..fa425a9 100644
Binary files a/code/data/sim_314.pickle and b/code/data/sim_314.pickle differ
diff --git a/code/data/sim_315.pickle b/code/data/sim_315.pickle
index c67beda..ea1eae2 100644
Binary files a/code/data/sim_315.pickle and b/code/data/sim_315.pickle differ
diff --git a/code/data/sim_316.pickle b/code/data/sim_316.pickle
index 43a0f2d..d92e69d 100644
Binary files a/code/data/sim_316.pickle and b/code/data/sim_316.pickle differ
diff --git a/code/data/sim_317.pickle b/code/data/sim_317.pickle
index f56f973..39f1506 100644
Binary files a/code/data/sim_317.pickle and b/code/data/sim_317.pickle differ
diff --git a/code/data/sim_318.pickle b/code/data/sim_318.pickle
index 0b3e0b0..7495428 100644
Binary files a/code/data/sim_318.pickle and b/code/data/sim_318.pickle differ
diff --git a/code/data/sim_319.pickle b/code/data/sim_319.pickle
index bcc6675..7e7e462 100644
Binary files a/code/data/sim_319.pickle and b/code/data/sim_319.pickle differ
diff --git a/code/data/sim_32.pickle b/code/data/sim_32.pickle
index 8ef5d04..fe8ba81 100644
Binary files a/code/data/sim_32.pickle and b/code/data/sim_32.pickle differ
diff --git a/code/data/sim_320.pickle b/code/data/sim_320.pickle
index 626acd5..4cf8e9e 100644
Binary files a/code/data/sim_320.pickle and b/code/data/sim_320.pickle differ
diff --git a/code/data/sim_321.pickle b/code/data/sim_321.pickle
index 7dec65a..782c884 100644
Binary files a/code/data/sim_321.pickle and b/code/data/sim_321.pickle differ
diff --git a/code/data/sim_322.pickle b/code/data/sim_322.pickle
index 9864058..a913d26 100644
Binary files a/code/data/sim_322.pickle and b/code/data/sim_322.pickle differ
diff --git a/code/data/sim_323.pickle b/code/data/sim_323.pickle
index 0ec828e..2fec54f 100644
Binary files a/code/data/sim_323.pickle and b/code/data/sim_323.pickle differ
diff --git a/code/data/sim_324.pickle b/code/data/sim_324.pickle
index 6928af2..f18dda3 100644
Binary files a/code/data/sim_324.pickle and b/code/data/sim_324.pickle differ
diff --git a/code/data/sim_325.pickle b/code/data/sim_325.pickle
index ab8bb91..6c941ff 100644
Binary files a/code/data/sim_325.pickle and b/code/data/sim_325.pickle differ
diff --git a/code/data/sim_326.pickle b/code/data/sim_326.pickle
index 078cafa..e4bc75f 100644
Binary files a/code/data/sim_326.pickle and b/code/data/sim_326.pickle differ
diff --git a/code/data/sim_327.pickle b/code/data/sim_327.pickle
index 790d37a..667f7a2 100644
Binary files a/code/data/sim_327.pickle and b/code/data/sim_327.pickle differ
diff --git a/code/data/sim_328.pickle b/code/data/sim_328.pickle
index c296e51..83dc4a2 100644
Binary files a/code/data/sim_328.pickle and b/code/data/sim_328.pickle differ
diff --git a/code/data/sim_329.pickle b/code/data/sim_329.pickle
index a6e1f78..ead5248 100644
Binary files a/code/data/sim_329.pickle and b/code/data/sim_329.pickle differ
diff --git a/code/data/sim_33.pickle b/code/data/sim_33.pickle
index eb5be02..1d3923f 100644
Binary files a/code/data/sim_33.pickle and b/code/data/sim_33.pickle differ
diff --git a/code/data/sim_330.pickle b/code/data/sim_330.pickle
index 65f3c71..dc6975e 100644
Binary files a/code/data/sim_330.pickle and b/code/data/sim_330.pickle differ
diff --git a/code/data/sim_331.pickle b/code/data/sim_331.pickle
index 1e18af2..057117a 100644
Binary files a/code/data/sim_331.pickle and b/code/data/sim_331.pickle differ
diff --git a/code/data/sim_332.pickle b/code/data/sim_332.pickle
index 4dd47ad..00b58df 100644
Binary files a/code/data/sim_332.pickle and b/code/data/sim_332.pickle differ
diff --git a/code/data/sim_333.pickle b/code/data/sim_333.pickle
index 029ce1d..dbfa239 100644
Binary files a/code/data/sim_333.pickle and b/code/data/sim_333.pickle differ
diff --git a/code/data/sim_334.pickle b/code/data/sim_334.pickle
index b7ed3b2..4f34960 100644
Binary files a/code/data/sim_334.pickle and b/code/data/sim_334.pickle differ
diff --git a/code/data/sim_335.pickle b/code/data/sim_335.pickle
index 0123066..17935b7 100644
Binary files a/code/data/sim_335.pickle and b/code/data/sim_335.pickle differ
diff --git a/code/data/sim_336.pickle b/code/data/sim_336.pickle
index f8c5bac..6bbb3b3 100644
Binary files a/code/data/sim_336.pickle and b/code/data/sim_336.pickle differ
diff --git a/code/data/sim_337.pickle b/code/data/sim_337.pickle
index c3910a6..5159771 100644
Binary files a/code/data/sim_337.pickle and b/code/data/sim_337.pickle differ
diff --git a/code/data/sim_338.pickle b/code/data/sim_338.pickle
index 384ec6e..6631ea6 100644
Binary files a/code/data/sim_338.pickle and b/code/data/sim_338.pickle differ
diff --git a/code/data/sim_339.pickle b/code/data/sim_339.pickle
index 62d5275..0a2a967 100644
Binary files a/code/data/sim_339.pickle and b/code/data/sim_339.pickle differ
diff --git a/code/data/sim_34.pickle b/code/data/sim_34.pickle
index a7f2a50..fd450c4 100644
Binary files a/code/data/sim_34.pickle and b/code/data/sim_34.pickle differ
diff --git a/code/data/sim_340.pickle b/code/data/sim_340.pickle
index b87afba..7b5eb75 100644
Binary files a/code/data/sim_340.pickle and b/code/data/sim_340.pickle differ
diff --git a/code/data/sim_341.pickle b/code/data/sim_341.pickle
index 5bff9a0..a7a83a9 100644
Binary files a/code/data/sim_341.pickle and b/code/data/sim_341.pickle differ
diff --git a/code/data/sim_342.pickle b/code/data/sim_342.pickle
index dfe6da3..3415178 100644
Binary files a/code/data/sim_342.pickle and b/code/data/sim_342.pickle differ
diff --git a/code/data/sim_343.pickle b/code/data/sim_343.pickle
index 6d225d8..67899bd 100644
Binary files a/code/data/sim_343.pickle and b/code/data/sim_343.pickle differ
diff --git a/code/data/sim_344.pickle b/code/data/sim_344.pickle
index 8e239f9..6fba42d 100644
Binary files a/code/data/sim_344.pickle and b/code/data/sim_344.pickle differ
diff --git a/code/data/sim_345.pickle b/code/data/sim_345.pickle
index a653ddd..7c8ba4c 100644
Binary files a/code/data/sim_345.pickle and b/code/data/sim_345.pickle differ
diff --git a/code/data/sim_346.pickle b/code/data/sim_346.pickle
index d5cd13d..a2ccd79 100644
Binary files a/code/data/sim_346.pickle and b/code/data/sim_346.pickle differ
diff --git a/code/data/sim_347.pickle b/code/data/sim_347.pickle
index 07bfbf2..de5caea 100644
Binary files a/code/data/sim_347.pickle and b/code/data/sim_347.pickle differ
diff --git a/code/data/sim_348.pickle b/code/data/sim_348.pickle
index c3159a3..fec30fd 100644
Binary files a/code/data/sim_348.pickle and b/code/data/sim_348.pickle differ
diff --git a/code/data/sim_349.pickle b/code/data/sim_349.pickle
index dddc56a..2e4be39 100644
Binary files a/code/data/sim_349.pickle and b/code/data/sim_349.pickle differ
diff --git a/code/data/sim_35.pickle b/code/data/sim_35.pickle
index 0db1cf4..31a26ce 100644
Binary files a/code/data/sim_35.pickle and b/code/data/sim_35.pickle differ
diff --git a/code/data/sim_350.pickle b/code/data/sim_350.pickle
index 92ee6a5..08f8c30 100644
Binary files a/code/data/sim_350.pickle and b/code/data/sim_350.pickle differ
diff --git a/code/data/sim_351.pickle b/code/data/sim_351.pickle
index 1d2aaff..5f60d93 100644
Binary files a/code/data/sim_351.pickle and b/code/data/sim_351.pickle differ
diff --git a/code/data/sim_352.pickle b/code/data/sim_352.pickle
index 69eca5c..c852917 100644
Binary files a/code/data/sim_352.pickle and b/code/data/sim_352.pickle differ
diff --git a/code/data/sim_353.pickle b/code/data/sim_353.pickle
index ac23ec4..2dfcf8f 100644
Binary files a/code/data/sim_353.pickle and b/code/data/sim_353.pickle differ
diff --git a/code/data/sim_354.pickle b/code/data/sim_354.pickle
index a276943..1735590 100644
Binary files a/code/data/sim_354.pickle and b/code/data/sim_354.pickle differ
diff --git a/code/data/sim_355.pickle b/code/data/sim_355.pickle
index c8b34f0..ed2d20f 100644
Binary files a/code/data/sim_355.pickle and b/code/data/sim_355.pickle differ
diff --git a/code/data/sim_356.pickle b/code/data/sim_356.pickle
index eae3bc2..6802469 100644
Binary files a/code/data/sim_356.pickle and b/code/data/sim_356.pickle differ
diff --git a/code/data/sim_357.pickle b/code/data/sim_357.pickle
index 00a3651..b1eb323 100644
Binary files a/code/data/sim_357.pickle and b/code/data/sim_357.pickle differ
diff --git a/code/data/sim_358.pickle b/code/data/sim_358.pickle
index 9221e04..6b8df3f 100644
Binary files a/code/data/sim_358.pickle and b/code/data/sim_358.pickle differ
diff --git a/code/data/sim_359.pickle b/code/data/sim_359.pickle
index 272a4dd..d298107 100644
Binary files a/code/data/sim_359.pickle and b/code/data/sim_359.pickle differ
diff --git a/code/data/sim_36.pickle b/code/data/sim_36.pickle
index 3afa669..4d2b765 100644
Binary files a/code/data/sim_36.pickle and b/code/data/sim_36.pickle differ
diff --git a/code/data/sim_360.pickle b/code/data/sim_360.pickle
index 5c575b8..4a4cd63 100644
Binary files a/code/data/sim_360.pickle and b/code/data/sim_360.pickle differ
diff --git a/code/data/sim_361.pickle b/code/data/sim_361.pickle
index 5d59133..70c97d8 100644
Binary files a/code/data/sim_361.pickle and b/code/data/sim_361.pickle differ
diff --git a/code/data/sim_362.pickle b/code/data/sim_362.pickle
index bdc5340..349e97c 100644
Binary files a/code/data/sim_362.pickle and b/code/data/sim_362.pickle differ
diff --git a/code/data/sim_363.pickle b/code/data/sim_363.pickle
index b7fccb7..d12b299 100644
Binary files a/code/data/sim_363.pickle and b/code/data/sim_363.pickle differ
diff --git a/code/data/sim_364.pickle b/code/data/sim_364.pickle
index 972c3bb..a73f9db 100644
Binary files a/code/data/sim_364.pickle and b/code/data/sim_364.pickle differ
diff --git a/code/data/sim_365.pickle b/code/data/sim_365.pickle
index 862af84..1d7b00e 100644
Binary files a/code/data/sim_365.pickle and b/code/data/sim_365.pickle differ
diff --git a/code/data/sim_366.pickle b/code/data/sim_366.pickle
index d3eb0e8..00d4fb9 100644
Binary files a/code/data/sim_366.pickle and b/code/data/sim_366.pickle differ
diff --git a/code/data/sim_367.pickle b/code/data/sim_367.pickle
index d7ca288..96fa955 100644
Binary files a/code/data/sim_367.pickle and b/code/data/sim_367.pickle differ
diff --git a/code/data/sim_368.pickle b/code/data/sim_368.pickle
index 0826b30..df4fc95 100644
Binary files a/code/data/sim_368.pickle and b/code/data/sim_368.pickle differ
diff --git a/code/data/sim_369.pickle b/code/data/sim_369.pickle
index 7d20405..ab07ebb 100644
Binary files a/code/data/sim_369.pickle and b/code/data/sim_369.pickle differ
diff --git a/code/data/sim_37.pickle b/code/data/sim_37.pickle
index 62ef4ae..e3364cb 100644
Binary files a/code/data/sim_37.pickle and b/code/data/sim_37.pickle differ
diff --git a/code/data/sim_370.pickle b/code/data/sim_370.pickle
index e654368..c6b3224 100644
Binary files a/code/data/sim_370.pickle and b/code/data/sim_370.pickle differ
diff --git a/code/data/sim_371.pickle b/code/data/sim_371.pickle
index 2fe6520..7fc0f33 100644
Binary files a/code/data/sim_371.pickle and b/code/data/sim_371.pickle differ
diff --git a/code/data/sim_372.pickle b/code/data/sim_372.pickle
index ad6193d..4867f8c 100644
Binary files a/code/data/sim_372.pickle and b/code/data/sim_372.pickle differ
diff --git a/code/data/sim_373.pickle b/code/data/sim_373.pickle
index 7214f3a..d8c3715 100644
Binary files a/code/data/sim_373.pickle and b/code/data/sim_373.pickle differ
diff --git a/code/data/sim_374.pickle b/code/data/sim_374.pickle
index 0cc4351..1bdc1f9 100644
Binary files a/code/data/sim_374.pickle and b/code/data/sim_374.pickle differ
diff --git a/code/data/sim_375.pickle b/code/data/sim_375.pickle
index 484230a..673f068 100644
Binary files a/code/data/sim_375.pickle and b/code/data/sim_375.pickle differ
diff --git a/code/data/sim_376.pickle b/code/data/sim_376.pickle
index 70da502..b3fa30b 100644
Binary files a/code/data/sim_376.pickle and b/code/data/sim_376.pickle differ
diff --git a/code/data/sim_377.pickle b/code/data/sim_377.pickle
index 962f14e..2910d63 100644
Binary files a/code/data/sim_377.pickle and b/code/data/sim_377.pickle differ
diff --git a/code/data/sim_378.pickle b/code/data/sim_378.pickle
index 71cce7d..4bb3fb4 100644
Binary files a/code/data/sim_378.pickle and b/code/data/sim_378.pickle differ
diff --git a/code/data/sim_379.pickle b/code/data/sim_379.pickle
index 574c3b2..1fa52b1 100644
Binary files a/code/data/sim_379.pickle and b/code/data/sim_379.pickle differ
diff --git a/code/data/sim_38.pickle b/code/data/sim_38.pickle
index f50e189..6d468c8 100644
Binary files a/code/data/sim_38.pickle and b/code/data/sim_38.pickle differ
diff --git a/code/data/sim_380.pickle b/code/data/sim_380.pickle
index 0cece4d..cc94b0f 100644
Binary files a/code/data/sim_380.pickle and b/code/data/sim_380.pickle differ
diff --git a/code/data/sim_381.pickle b/code/data/sim_381.pickle
index c83711a..5805008 100644
Binary files a/code/data/sim_381.pickle and b/code/data/sim_381.pickle differ
diff --git a/code/data/sim_382.pickle b/code/data/sim_382.pickle
index 50e21c3..ba3014c 100644
Binary files a/code/data/sim_382.pickle and b/code/data/sim_382.pickle differ
diff --git a/code/data/sim_383.pickle b/code/data/sim_383.pickle
index 2b6ee8d..9143ba6 100644
Binary files a/code/data/sim_383.pickle and b/code/data/sim_383.pickle differ
diff --git a/code/data/sim_384.pickle b/code/data/sim_384.pickle
index 0641d9b..3a28c81 100644
Binary files a/code/data/sim_384.pickle and b/code/data/sim_384.pickle differ
diff --git a/code/data/sim_385.pickle b/code/data/sim_385.pickle
index bf2e3d7..07e045d 100644
Binary files a/code/data/sim_385.pickle and b/code/data/sim_385.pickle differ
diff --git a/code/data/sim_386.pickle b/code/data/sim_386.pickle
index 91d7231..4de6d55 100644
Binary files a/code/data/sim_386.pickle and b/code/data/sim_386.pickle differ
diff --git a/code/data/sim_387.pickle b/code/data/sim_387.pickle
index f57b0fd..2f33e35 100644
Binary files a/code/data/sim_387.pickle and b/code/data/sim_387.pickle differ
diff --git a/code/data/sim_388.pickle b/code/data/sim_388.pickle
index c478246..4e701b2 100644
Binary files a/code/data/sim_388.pickle and b/code/data/sim_388.pickle differ
diff --git a/code/data/sim_389.pickle b/code/data/sim_389.pickle
index b605d45..c954012 100644
Binary files a/code/data/sim_389.pickle and b/code/data/sim_389.pickle differ
diff --git a/code/data/sim_39.pickle b/code/data/sim_39.pickle
index 66cda03..9970d20 100644
Binary files a/code/data/sim_39.pickle and b/code/data/sim_39.pickle differ
diff --git a/code/data/sim_390.pickle b/code/data/sim_390.pickle
index cb04cd5..d031b7e 100644
Binary files a/code/data/sim_390.pickle and b/code/data/sim_390.pickle differ
diff --git a/code/data/sim_391.pickle b/code/data/sim_391.pickle
index 8bdbeff..6100a24 100644
Binary files a/code/data/sim_391.pickle and b/code/data/sim_391.pickle differ
diff --git a/code/data/sim_392.pickle b/code/data/sim_392.pickle
index fb014ec..d4cb251 100644
Binary files a/code/data/sim_392.pickle and b/code/data/sim_392.pickle differ
diff --git a/code/data/sim_393.pickle b/code/data/sim_393.pickle
index 91451a7..8226b36 100644
Binary files a/code/data/sim_393.pickle and b/code/data/sim_393.pickle differ
diff --git a/code/data/sim_394.pickle b/code/data/sim_394.pickle
index e5d5549..5db4ad2 100644
Binary files a/code/data/sim_394.pickle and b/code/data/sim_394.pickle differ
diff --git a/code/data/sim_395.pickle b/code/data/sim_395.pickle
index 55fc6f5..6ff7fc0 100644
Binary files a/code/data/sim_395.pickle and b/code/data/sim_395.pickle differ
diff --git a/code/data/sim_396.pickle b/code/data/sim_396.pickle
index 8575cf0..f534690 100644
Binary files a/code/data/sim_396.pickle and b/code/data/sim_396.pickle differ
diff --git a/code/data/sim_397.pickle b/code/data/sim_397.pickle
index 6465175..8d5ccfe 100644
Binary files a/code/data/sim_397.pickle and b/code/data/sim_397.pickle differ
diff --git a/code/data/sim_398.pickle b/code/data/sim_398.pickle
index d0b8a9b..1035583 100644
Binary files a/code/data/sim_398.pickle and b/code/data/sim_398.pickle differ
diff --git a/code/data/sim_399.pickle b/code/data/sim_399.pickle
index 2de0185..b0b8e57 100644
Binary files a/code/data/sim_399.pickle and b/code/data/sim_399.pickle differ
diff --git a/code/data/sim_4.pickle b/code/data/sim_4.pickle
index cf8edd9..f4ff344 100644
Binary files a/code/data/sim_4.pickle and b/code/data/sim_4.pickle differ
diff --git a/code/data/sim_40.pickle b/code/data/sim_40.pickle
index 4f19377..c79425c 100644
Binary files a/code/data/sim_40.pickle and b/code/data/sim_40.pickle differ
diff --git a/code/data/sim_400.pickle b/code/data/sim_400.pickle
index 206b10d..de3f09e 100644
Binary files a/code/data/sim_400.pickle and b/code/data/sim_400.pickle differ
diff --git a/code/data/sim_401.pickle b/code/data/sim_401.pickle
index 2cc5817..f371266 100644
Binary files a/code/data/sim_401.pickle and b/code/data/sim_401.pickle differ
diff --git a/code/data/sim_402.pickle b/code/data/sim_402.pickle
index 122db16..5514d5b 100644
Binary files a/code/data/sim_402.pickle and b/code/data/sim_402.pickle differ
diff --git a/code/data/sim_403.pickle b/code/data/sim_403.pickle
index 4e3e6f0..2e36d86 100644
Binary files a/code/data/sim_403.pickle and b/code/data/sim_403.pickle differ
diff --git a/code/data/sim_404.pickle b/code/data/sim_404.pickle
index 926ff8c..a7b908c 100644
Binary files a/code/data/sim_404.pickle and b/code/data/sim_404.pickle differ
diff --git a/code/data/sim_405.pickle b/code/data/sim_405.pickle
index 2506263..e9e8489 100644
Binary files a/code/data/sim_405.pickle and b/code/data/sim_405.pickle differ
diff --git a/code/data/sim_406.pickle b/code/data/sim_406.pickle
index ce9a89b..6823b0a 100644
Binary files a/code/data/sim_406.pickle and b/code/data/sim_406.pickle differ
diff --git a/code/data/sim_407.pickle b/code/data/sim_407.pickle
index 23da622..bc857af 100644
Binary files a/code/data/sim_407.pickle and b/code/data/sim_407.pickle differ
diff --git a/code/data/sim_408.pickle b/code/data/sim_408.pickle
index 4226b01..9fd69ae 100644
Binary files a/code/data/sim_408.pickle and b/code/data/sim_408.pickle differ
diff --git a/code/data/sim_409.pickle b/code/data/sim_409.pickle
index f8da312..d63a589 100644
Binary files a/code/data/sim_409.pickle and b/code/data/sim_409.pickle differ
diff --git a/code/data/sim_41.pickle b/code/data/sim_41.pickle
index ed6c53b..231e22c 100644
Binary files a/code/data/sim_41.pickle and b/code/data/sim_41.pickle differ
diff --git a/code/data/sim_410.pickle b/code/data/sim_410.pickle
index 43f5dd7..494ecaa 100644
Binary files a/code/data/sim_410.pickle and b/code/data/sim_410.pickle differ
diff --git a/code/data/sim_411.pickle b/code/data/sim_411.pickle
index 5afd54b..c25eca3 100644
Binary files a/code/data/sim_411.pickle and b/code/data/sim_411.pickle differ
diff --git a/code/data/sim_412.pickle b/code/data/sim_412.pickle
index 68a4092..5204ccb 100644
Binary files a/code/data/sim_412.pickle and b/code/data/sim_412.pickle differ
diff --git a/code/data/sim_413.pickle b/code/data/sim_413.pickle
index 28c348f..04549ac 100644
Binary files a/code/data/sim_413.pickle and b/code/data/sim_413.pickle differ
diff --git a/code/data/sim_414.pickle b/code/data/sim_414.pickle
index 49c907b..bfb70c6 100644
Binary files a/code/data/sim_414.pickle and b/code/data/sim_414.pickle differ
diff --git a/code/data/sim_415.pickle b/code/data/sim_415.pickle
index 03233bf..98b2224 100644
Binary files a/code/data/sim_415.pickle and b/code/data/sim_415.pickle differ
diff --git a/code/data/sim_416.pickle b/code/data/sim_416.pickle
index d02f2b1..602c0da 100644
Binary files a/code/data/sim_416.pickle and b/code/data/sim_416.pickle differ
diff --git a/code/data/sim_417.pickle b/code/data/sim_417.pickle
index fd5c2dd..4951e68 100644
Binary files a/code/data/sim_417.pickle and b/code/data/sim_417.pickle differ
diff --git a/code/data/sim_418.pickle b/code/data/sim_418.pickle
index c5ed3e6..a3aa570 100644
Binary files a/code/data/sim_418.pickle and b/code/data/sim_418.pickle differ
diff --git a/code/data/sim_419.pickle b/code/data/sim_419.pickle
index 0d19bf5..85bc21d 100644
Binary files a/code/data/sim_419.pickle and b/code/data/sim_419.pickle differ
diff --git a/code/data/sim_42.pickle b/code/data/sim_42.pickle
index d41c47d..6d4c9a0 100644
Binary files a/code/data/sim_42.pickle and b/code/data/sim_42.pickle differ
diff --git a/code/data/sim_420.pickle b/code/data/sim_420.pickle
index 9176f49..2dcabcd 100644
Binary files a/code/data/sim_420.pickle and b/code/data/sim_420.pickle differ
diff --git a/code/data/sim_421.pickle b/code/data/sim_421.pickle
index 12c2160..cfee5cf 100644
Binary files a/code/data/sim_421.pickle and b/code/data/sim_421.pickle differ
diff --git a/code/data/sim_422.pickle b/code/data/sim_422.pickle
index 6120357..6dd430c 100644
Binary files a/code/data/sim_422.pickle and b/code/data/sim_422.pickle differ
diff --git a/code/data/sim_423.pickle b/code/data/sim_423.pickle
index a25f982..a98b6a4 100644
Binary files a/code/data/sim_423.pickle and b/code/data/sim_423.pickle differ
diff --git a/code/data/sim_424.pickle b/code/data/sim_424.pickle
index 2be09e6..90f331b 100644
Binary files a/code/data/sim_424.pickle and b/code/data/sim_424.pickle differ
diff --git a/code/data/sim_425.pickle b/code/data/sim_425.pickle
index 3b67f39..76b1090 100644
Binary files a/code/data/sim_425.pickle and b/code/data/sim_425.pickle differ
diff --git a/code/data/sim_426.pickle b/code/data/sim_426.pickle
index 4a1e5ea..fdaff9f 100644
Binary files a/code/data/sim_426.pickle and b/code/data/sim_426.pickle differ
diff --git a/code/data/sim_427.pickle b/code/data/sim_427.pickle
index c4a4b4a..a092c1a 100644
Binary files a/code/data/sim_427.pickle and b/code/data/sim_427.pickle differ
diff --git a/code/data/sim_428.pickle b/code/data/sim_428.pickle
index 58f6b2c..6a4b462 100644
Binary files a/code/data/sim_428.pickle and b/code/data/sim_428.pickle differ
diff --git a/code/data/sim_429.pickle b/code/data/sim_429.pickle
index ed4ca48..75f4616 100644
Binary files a/code/data/sim_429.pickle and b/code/data/sim_429.pickle differ
diff --git a/code/data/sim_43.pickle b/code/data/sim_43.pickle
index b53a4ec..dbca687 100644
Binary files a/code/data/sim_43.pickle and b/code/data/sim_43.pickle differ
diff --git a/code/data/sim_430.pickle b/code/data/sim_430.pickle
index b5122cc..69fc4e4 100644
Binary files a/code/data/sim_430.pickle and b/code/data/sim_430.pickle differ
diff --git a/code/data/sim_431.pickle b/code/data/sim_431.pickle
index 29dcf74..4c88be5 100644
Binary files a/code/data/sim_431.pickle and b/code/data/sim_431.pickle differ
diff --git a/code/data/sim_432.pickle b/code/data/sim_432.pickle
index 1f37f68..6faacce 100644
Binary files a/code/data/sim_432.pickle and b/code/data/sim_432.pickle differ
diff --git a/code/data/sim_433.pickle b/code/data/sim_433.pickle
index 5b3098a..9f35727 100644
Binary files a/code/data/sim_433.pickle and b/code/data/sim_433.pickle differ
diff --git a/code/data/sim_434.pickle b/code/data/sim_434.pickle
index 23d9d4c..3c1dcf3 100644
Binary files a/code/data/sim_434.pickle and b/code/data/sim_434.pickle differ
diff --git a/code/data/sim_435.pickle b/code/data/sim_435.pickle
index b736a40..3c588bc 100644
Binary files a/code/data/sim_435.pickle and b/code/data/sim_435.pickle differ
diff --git a/code/data/sim_436.pickle b/code/data/sim_436.pickle
index 1830c38..b4dfa1a 100644
Binary files a/code/data/sim_436.pickle and b/code/data/sim_436.pickle differ
diff --git a/code/data/sim_437.pickle b/code/data/sim_437.pickle
index 2035792..d347800 100644
Binary files a/code/data/sim_437.pickle and b/code/data/sim_437.pickle differ
diff --git a/code/data/sim_438.pickle b/code/data/sim_438.pickle
index 0767d24..a047efb 100644
Binary files a/code/data/sim_438.pickle and b/code/data/sim_438.pickle differ
diff --git a/code/data/sim_439.pickle b/code/data/sim_439.pickle
index e781bda..cfb7c14 100644
Binary files a/code/data/sim_439.pickle and b/code/data/sim_439.pickle differ
diff --git a/code/data/sim_44.pickle b/code/data/sim_44.pickle
index a50cb35..dffbd2d 100644
Binary files a/code/data/sim_44.pickle and b/code/data/sim_44.pickle differ
diff --git a/code/data/sim_440.pickle b/code/data/sim_440.pickle
index 47f2278..ea77100 100644
Binary files a/code/data/sim_440.pickle and b/code/data/sim_440.pickle differ
diff --git a/code/data/sim_441.pickle b/code/data/sim_441.pickle
index dc7a076..038a515 100644
Binary files a/code/data/sim_441.pickle and b/code/data/sim_441.pickle differ
diff --git a/code/data/sim_442.pickle b/code/data/sim_442.pickle
index 2eacf8d..99ff2af 100644
Binary files a/code/data/sim_442.pickle and b/code/data/sim_442.pickle differ
diff --git a/code/data/sim_443.pickle b/code/data/sim_443.pickle
index 91d047f..7dbb9e6 100644
Binary files a/code/data/sim_443.pickle and b/code/data/sim_443.pickle differ
diff --git a/code/data/sim_444.pickle b/code/data/sim_444.pickle
index ca7f93e..bebce2a 100644
Binary files a/code/data/sim_444.pickle and b/code/data/sim_444.pickle differ
diff --git a/code/data/sim_445.pickle b/code/data/sim_445.pickle
index 8bdbb57..6bf361e 100644
Binary files a/code/data/sim_445.pickle and b/code/data/sim_445.pickle differ
diff --git a/code/data/sim_446.pickle b/code/data/sim_446.pickle
index a9610e1..d40ac78 100644
Binary files a/code/data/sim_446.pickle and b/code/data/sim_446.pickle differ
diff --git a/code/data/sim_447.pickle b/code/data/sim_447.pickle
index 40fa13c..bde4a65 100644
Binary files a/code/data/sim_447.pickle and b/code/data/sim_447.pickle differ
diff --git a/code/data/sim_448.pickle b/code/data/sim_448.pickle
index 4e30bed..c4a865b 100644
Binary files a/code/data/sim_448.pickle and b/code/data/sim_448.pickle differ
diff --git a/code/data/sim_449.pickle b/code/data/sim_449.pickle
index 6526730..04a3d64 100644
Binary files a/code/data/sim_449.pickle and b/code/data/sim_449.pickle differ
diff --git a/code/data/sim_45.pickle b/code/data/sim_45.pickle
index e237c34..e0f4444 100644
Binary files a/code/data/sim_45.pickle and b/code/data/sim_45.pickle differ
diff --git a/code/data/sim_450.pickle b/code/data/sim_450.pickle
index 1054c5c..7936db0 100644
Binary files a/code/data/sim_450.pickle and b/code/data/sim_450.pickle differ
diff --git a/code/data/sim_451.pickle b/code/data/sim_451.pickle
index aa92340..6551790 100644
Binary files a/code/data/sim_451.pickle and b/code/data/sim_451.pickle differ
diff --git a/code/data/sim_452.pickle b/code/data/sim_452.pickle
index efa67c8..d2b0737 100644
Binary files a/code/data/sim_452.pickle and b/code/data/sim_452.pickle differ
diff --git a/code/data/sim_453.pickle b/code/data/sim_453.pickle
index a1f8082..7d74fb7 100644
Binary files a/code/data/sim_453.pickle and b/code/data/sim_453.pickle differ
diff --git a/code/data/sim_454.pickle b/code/data/sim_454.pickle
index b70a1fd..782d662 100644
Binary files a/code/data/sim_454.pickle and b/code/data/sim_454.pickle differ
diff --git a/code/data/sim_455.pickle b/code/data/sim_455.pickle
index 3d0130d..96059db 100644
Binary files a/code/data/sim_455.pickle and b/code/data/sim_455.pickle differ
diff --git a/code/data/sim_456.pickle b/code/data/sim_456.pickle
index 89d4d27..f8613ff 100644
Binary files a/code/data/sim_456.pickle and b/code/data/sim_456.pickle differ
diff --git a/code/data/sim_457.pickle b/code/data/sim_457.pickle
index 69daa79..97862af 100644
Binary files a/code/data/sim_457.pickle and b/code/data/sim_457.pickle differ
diff --git a/code/data/sim_458.pickle b/code/data/sim_458.pickle
index 09d3686..4677cd7 100644
Binary files a/code/data/sim_458.pickle and b/code/data/sim_458.pickle differ
diff --git a/code/data/sim_459.pickle b/code/data/sim_459.pickle
index 8fe73f1..daff29d 100644
Binary files a/code/data/sim_459.pickle and b/code/data/sim_459.pickle differ
diff --git a/code/data/sim_46.pickle b/code/data/sim_46.pickle
index 1101305..790dc48 100644
Binary files a/code/data/sim_46.pickle and b/code/data/sim_46.pickle differ
diff --git a/code/data/sim_460.pickle b/code/data/sim_460.pickle
index 222d6f6..ad03075 100644
Binary files a/code/data/sim_460.pickle and b/code/data/sim_460.pickle differ
diff --git a/code/data/sim_461.pickle b/code/data/sim_461.pickle
index 0cd1e17..f71256b 100644
Binary files a/code/data/sim_461.pickle and b/code/data/sim_461.pickle differ
diff --git a/code/data/sim_462.pickle b/code/data/sim_462.pickle
index fd2dec4..0fcc047 100644
Binary files a/code/data/sim_462.pickle and b/code/data/sim_462.pickle differ
diff --git a/code/data/sim_463.pickle b/code/data/sim_463.pickle
index e674912..4d82aad 100644
Binary files a/code/data/sim_463.pickle and b/code/data/sim_463.pickle differ
diff --git a/code/data/sim_464.pickle b/code/data/sim_464.pickle
index aee53ef..fe2bd54 100644
Binary files a/code/data/sim_464.pickle and b/code/data/sim_464.pickle differ
diff --git a/code/data/sim_465.pickle b/code/data/sim_465.pickle
index 19c316c..7489f21 100644
Binary files a/code/data/sim_465.pickle and b/code/data/sim_465.pickle differ
diff --git a/code/data/sim_466.pickle b/code/data/sim_466.pickle
index 20b45b4..c57b6e2 100644
Binary files a/code/data/sim_466.pickle and b/code/data/sim_466.pickle differ
diff --git a/code/data/sim_467.pickle b/code/data/sim_467.pickle
index 2795566..46ecf4b 100644
Binary files a/code/data/sim_467.pickle and b/code/data/sim_467.pickle differ
diff --git a/code/data/sim_468.pickle b/code/data/sim_468.pickle
index f8cc798..894ed41 100644
Binary files a/code/data/sim_468.pickle and b/code/data/sim_468.pickle differ
diff --git a/code/data/sim_469.pickle b/code/data/sim_469.pickle
index f5f5b73..f4c1dd6 100644
Binary files a/code/data/sim_469.pickle and b/code/data/sim_469.pickle differ
diff --git a/code/data/sim_47.pickle b/code/data/sim_47.pickle
index a86de26..e478596 100644
Binary files a/code/data/sim_47.pickle and b/code/data/sim_47.pickle differ
diff --git a/code/data/sim_470.pickle b/code/data/sim_470.pickle
index f37cd54..82dde2f 100644
Binary files a/code/data/sim_470.pickle and b/code/data/sim_470.pickle differ
diff --git a/code/data/sim_471.pickle b/code/data/sim_471.pickle
index 23a965f..889b67e 100644
Binary files a/code/data/sim_471.pickle and b/code/data/sim_471.pickle differ
diff --git a/code/data/sim_472.pickle b/code/data/sim_472.pickle
index 0ec5928..43822e3 100644
Binary files a/code/data/sim_472.pickle and b/code/data/sim_472.pickle differ
diff --git a/code/data/sim_473.pickle b/code/data/sim_473.pickle
index 9bbde90..4a001b3 100644
Binary files a/code/data/sim_473.pickle and b/code/data/sim_473.pickle differ
diff --git a/code/data/sim_474.pickle b/code/data/sim_474.pickle
index 683a900..e0ead41 100644
Binary files a/code/data/sim_474.pickle and b/code/data/sim_474.pickle differ
diff --git a/code/data/sim_475.pickle b/code/data/sim_475.pickle
index cbf2fb4..22a9b28 100644
Binary files a/code/data/sim_475.pickle and b/code/data/sim_475.pickle differ
diff --git a/code/data/sim_476.pickle b/code/data/sim_476.pickle
index e95bbd7..abecb2c 100644
Binary files a/code/data/sim_476.pickle and b/code/data/sim_476.pickle differ
diff --git a/code/data/sim_477.pickle b/code/data/sim_477.pickle
index 57586cb..1b99c35 100644
Binary files a/code/data/sim_477.pickle and b/code/data/sim_477.pickle differ
diff --git a/code/data/sim_478.pickle b/code/data/sim_478.pickle
index 7a35fdf..82821c8 100644
Binary files a/code/data/sim_478.pickle and b/code/data/sim_478.pickle differ
diff --git a/code/data/sim_479.pickle b/code/data/sim_479.pickle
index f8f1781..aa6602c 100644
Binary files a/code/data/sim_479.pickle and b/code/data/sim_479.pickle differ
diff --git a/code/data/sim_48.pickle b/code/data/sim_48.pickle
index 5b56d4c..555fcc2 100644
Binary files a/code/data/sim_48.pickle and b/code/data/sim_48.pickle differ
diff --git a/code/data/sim_480.pickle b/code/data/sim_480.pickle
index d7c3a59..3b24710 100644
Binary files a/code/data/sim_480.pickle and b/code/data/sim_480.pickle differ
diff --git a/code/data/sim_481.pickle b/code/data/sim_481.pickle
index 0a7c7b3..f78d697 100644
Binary files a/code/data/sim_481.pickle and b/code/data/sim_481.pickle differ
diff --git a/code/data/sim_482.pickle b/code/data/sim_482.pickle
index 2a7d234..066d90c 100644
Binary files a/code/data/sim_482.pickle and b/code/data/sim_482.pickle differ
diff --git a/code/data/sim_483.pickle b/code/data/sim_483.pickle
index d1cc707..360644a 100644
Binary files a/code/data/sim_483.pickle and b/code/data/sim_483.pickle differ
diff --git a/code/data/sim_484.pickle b/code/data/sim_484.pickle
index d397153..a72704d 100644
Binary files a/code/data/sim_484.pickle and b/code/data/sim_484.pickle differ
diff --git a/code/data/sim_485.pickle b/code/data/sim_485.pickle
index 2ecb7fc..deef4c4 100644
Binary files a/code/data/sim_485.pickle and b/code/data/sim_485.pickle differ
diff --git a/code/data/sim_486.pickle b/code/data/sim_486.pickle
index bcc71e3..0b7a1e0 100644
Binary files a/code/data/sim_486.pickle and b/code/data/sim_486.pickle differ
diff --git a/code/data/sim_487.pickle b/code/data/sim_487.pickle
index 26d8d55..3e77f30 100644
Binary files a/code/data/sim_487.pickle and b/code/data/sim_487.pickle differ
diff --git a/code/data/sim_488.pickle b/code/data/sim_488.pickle
index 7475489..af82469 100644
Binary files a/code/data/sim_488.pickle and b/code/data/sim_488.pickle differ
diff --git a/code/data/sim_489.pickle b/code/data/sim_489.pickle
index 81113c7..3311db8 100644
Binary files a/code/data/sim_489.pickle and b/code/data/sim_489.pickle differ
diff --git a/code/data/sim_49.pickle b/code/data/sim_49.pickle
index ba9ed9e..9165fbb 100644
Binary files a/code/data/sim_49.pickle and b/code/data/sim_49.pickle differ
diff --git a/code/data/sim_490.pickle b/code/data/sim_490.pickle
index 3fcb8ec..577e6b5 100644
Binary files a/code/data/sim_490.pickle and b/code/data/sim_490.pickle differ
diff --git a/code/data/sim_491.pickle b/code/data/sim_491.pickle
index cc243b5..09f0b04 100644
Binary files a/code/data/sim_491.pickle and b/code/data/sim_491.pickle differ
diff --git a/code/data/sim_492.pickle b/code/data/sim_492.pickle
index 6796a4a..598b3b6 100644
Binary files a/code/data/sim_492.pickle and b/code/data/sim_492.pickle differ
diff --git a/code/data/sim_493.pickle b/code/data/sim_493.pickle
index d7044ac..70a4330 100644
Binary files a/code/data/sim_493.pickle and b/code/data/sim_493.pickle differ
diff --git a/code/data/sim_494.pickle b/code/data/sim_494.pickle
index 29fd002..742eab0 100644
Binary files a/code/data/sim_494.pickle and b/code/data/sim_494.pickle differ
diff --git a/code/data/sim_495.pickle b/code/data/sim_495.pickle
index b877e65..c868af5 100644
Binary files a/code/data/sim_495.pickle and b/code/data/sim_495.pickle differ
diff --git a/code/data/sim_496.pickle b/code/data/sim_496.pickle
index 8d148f2..b0419c8 100644
Binary files a/code/data/sim_496.pickle and b/code/data/sim_496.pickle differ
diff --git a/code/data/sim_497.pickle b/code/data/sim_497.pickle
index bba763e..ca5f515 100644
Binary files a/code/data/sim_497.pickle and b/code/data/sim_497.pickle differ
diff --git a/code/data/sim_498.pickle b/code/data/sim_498.pickle
index c022676..55a8077 100644
Binary files a/code/data/sim_498.pickle and b/code/data/sim_498.pickle differ
diff --git a/code/data/sim_499.pickle b/code/data/sim_499.pickle
index 1b65d6a..d26c923 100644
Binary files a/code/data/sim_499.pickle and b/code/data/sim_499.pickle differ
diff --git a/code/data/sim_5.pickle b/code/data/sim_5.pickle
index f78dca5..29e88c4 100644
Binary files a/code/data/sim_5.pickle and b/code/data/sim_5.pickle differ
diff --git a/code/data/sim_50.pickle b/code/data/sim_50.pickle
index 35153a6..35a9217 100644
Binary files a/code/data/sim_50.pickle and b/code/data/sim_50.pickle differ
diff --git a/code/data/sim_500.pickle b/code/data/sim_500.pickle
index 4b02968..74cc428 100644
Binary files a/code/data/sim_500.pickle and b/code/data/sim_500.pickle differ
diff --git a/code/data/sim_501.pickle b/code/data/sim_501.pickle
index 7400bde..3c641a5 100644
Binary files a/code/data/sim_501.pickle and b/code/data/sim_501.pickle differ
diff --git a/code/data/sim_502.pickle b/code/data/sim_502.pickle
index 1780b5e..743aa9d 100644
Binary files a/code/data/sim_502.pickle and b/code/data/sim_502.pickle differ
diff --git a/code/data/sim_503.pickle b/code/data/sim_503.pickle
index 70a806d..6eb8013 100644
Binary files a/code/data/sim_503.pickle and b/code/data/sim_503.pickle differ
diff --git a/code/data/sim_504.pickle b/code/data/sim_504.pickle
index ddf1b24..647bab3 100644
Binary files a/code/data/sim_504.pickle and b/code/data/sim_504.pickle differ
diff --git a/code/data/sim_505.pickle b/code/data/sim_505.pickle
index a7a834f..68d78f5 100644
Binary files a/code/data/sim_505.pickle and b/code/data/sim_505.pickle differ
diff --git a/code/data/sim_506.pickle b/code/data/sim_506.pickle
index 5c630d6..1621c74 100644
Binary files a/code/data/sim_506.pickle and b/code/data/sim_506.pickle differ
diff --git a/code/data/sim_507.pickle b/code/data/sim_507.pickle
index 1f93599..6ff07c1 100644
Binary files a/code/data/sim_507.pickle and b/code/data/sim_507.pickle differ
diff --git a/code/data/sim_508.pickle b/code/data/sim_508.pickle
index f7977ae..f9c7c2d 100644
Binary files a/code/data/sim_508.pickle and b/code/data/sim_508.pickle differ
diff --git a/code/data/sim_509.pickle b/code/data/sim_509.pickle
index 5be8440..6098f70 100644
Binary files a/code/data/sim_509.pickle and b/code/data/sim_509.pickle differ
diff --git a/code/data/sim_51.pickle b/code/data/sim_51.pickle
index 43c499c..748a87d 100644
Binary files a/code/data/sim_51.pickle and b/code/data/sim_51.pickle differ
diff --git a/code/data/sim_510.pickle b/code/data/sim_510.pickle
index 31162f3..c34a2e9 100644
Binary files a/code/data/sim_510.pickle and b/code/data/sim_510.pickle differ
diff --git a/code/data/sim_511.pickle b/code/data/sim_511.pickle
index 6da9d4e..ae966a7 100644
Binary files a/code/data/sim_511.pickle and b/code/data/sim_511.pickle differ
diff --git a/code/data/sim_512.pickle b/code/data/sim_512.pickle
index dac1e39..843042f 100644
Binary files a/code/data/sim_512.pickle and b/code/data/sim_512.pickle differ
diff --git a/code/data/sim_513.pickle b/code/data/sim_513.pickle
index 3e23349..9fb6076 100644
Binary files a/code/data/sim_513.pickle and b/code/data/sim_513.pickle differ
diff --git a/code/data/sim_514.pickle b/code/data/sim_514.pickle
index 718790c..98b2417 100644
Binary files a/code/data/sim_514.pickle and b/code/data/sim_514.pickle differ
diff --git a/code/data/sim_515.pickle b/code/data/sim_515.pickle
index b4bfd91..4686604 100644
Binary files a/code/data/sim_515.pickle and b/code/data/sim_515.pickle differ
diff --git a/code/data/sim_516.pickle b/code/data/sim_516.pickle
index 005fb49..501b52a 100644
Binary files a/code/data/sim_516.pickle and b/code/data/sim_516.pickle differ
diff --git a/code/data/sim_517.pickle b/code/data/sim_517.pickle
index 29a7d75..aafec66 100644
Binary files a/code/data/sim_517.pickle and b/code/data/sim_517.pickle differ
diff --git a/code/data/sim_518.pickle b/code/data/sim_518.pickle
index 6378f84..db2d4fb 100644
Binary files a/code/data/sim_518.pickle and b/code/data/sim_518.pickle differ
diff --git a/code/data/sim_519.pickle b/code/data/sim_519.pickle
index 14c4442..85ffa42 100644
Binary files a/code/data/sim_519.pickle and b/code/data/sim_519.pickle differ
diff --git a/code/data/sim_52.pickle b/code/data/sim_52.pickle
index a6a8e89..945bed9 100644
Binary files a/code/data/sim_52.pickle and b/code/data/sim_52.pickle differ
diff --git a/code/data/sim_520.pickle b/code/data/sim_520.pickle
index a686574..63ac27f 100644
Binary files a/code/data/sim_520.pickle and b/code/data/sim_520.pickle differ
diff --git a/code/data/sim_521.pickle b/code/data/sim_521.pickle
index 8dc7b50..1929f40 100644
Binary files a/code/data/sim_521.pickle and b/code/data/sim_521.pickle differ
diff --git a/code/data/sim_522.pickle b/code/data/sim_522.pickle
index 048c240..15bd162 100644
Binary files a/code/data/sim_522.pickle and b/code/data/sim_522.pickle differ
diff --git a/code/data/sim_523.pickle b/code/data/sim_523.pickle
index f801a2f..379a023 100644
Binary files a/code/data/sim_523.pickle and b/code/data/sim_523.pickle differ
diff --git a/code/data/sim_524.pickle b/code/data/sim_524.pickle
index 2684620..c5a841f 100644
Binary files a/code/data/sim_524.pickle and b/code/data/sim_524.pickle differ
diff --git a/code/data/sim_525.pickle b/code/data/sim_525.pickle
index 13e4892..537dcde 100644
Binary files a/code/data/sim_525.pickle and b/code/data/sim_525.pickle differ
diff --git a/code/data/sim_526.pickle b/code/data/sim_526.pickle
index 3be0e5a..99d0e88 100644
Binary files a/code/data/sim_526.pickle and b/code/data/sim_526.pickle differ
diff --git a/code/data/sim_527.pickle b/code/data/sim_527.pickle
index 3559a2e..55a0f2d 100644
Binary files a/code/data/sim_527.pickle and b/code/data/sim_527.pickle differ
diff --git a/code/data/sim_528.pickle b/code/data/sim_528.pickle
index 0bdff17..42ffd5e 100644
Binary files a/code/data/sim_528.pickle and b/code/data/sim_528.pickle differ
diff --git a/code/data/sim_529.pickle b/code/data/sim_529.pickle
index 9c5eb8b..78dcd82 100644
Binary files a/code/data/sim_529.pickle and b/code/data/sim_529.pickle differ
diff --git a/code/data/sim_53.pickle b/code/data/sim_53.pickle
index baf04c9..5921c35 100644
Binary files a/code/data/sim_53.pickle and b/code/data/sim_53.pickle differ
diff --git a/code/data/sim_530.pickle b/code/data/sim_530.pickle
index a77fa69..8983944 100644
Binary files a/code/data/sim_530.pickle and b/code/data/sim_530.pickle differ
diff --git a/code/data/sim_531.pickle b/code/data/sim_531.pickle
index c363cd8..7117003 100644
Binary files a/code/data/sim_531.pickle and b/code/data/sim_531.pickle differ
diff --git a/code/data/sim_532.pickle b/code/data/sim_532.pickle
index 13dca02..c354294 100644
Binary files a/code/data/sim_532.pickle and b/code/data/sim_532.pickle differ
diff --git a/code/data/sim_533.pickle b/code/data/sim_533.pickle
index 5eda784..80741ca 100644
Binary files a/code/data/sim_533.pickle and b/code/data/sim_533.pickle differ
diff --git a/code/data/sim_534.pickle b/code/data/sim_534.pickle
index 94950fc..f86c399 100644
Binary files a/code/data/sim_534.pickle and b/code/data/sim_534.pickle differ
diff --git a/code/data/sim_535.pickle b/code/data/sim_535.pickle
index 8bc65df..a06644d 100644
Binary files a/code/data/sim_535.pickle and b/code/data/sim_535.pickle differ
diff --git a/code/data/sim_536.pickle b/code/data/sim_536.pickle
index 3474148..b1b4b7b 100644
Binary files a/code/data/sim_536.pickle and b/code/data/sim_536.pickle differ
diff --git a/code/data/sim_537.pickle b/code/data/sim_537.pickle
index a50a44c..fa931c7 100644
Binary files a/code/data/sim_537.pickle and b/code/data/sim_537.pickle differ
diff --git a/code/data/sim_538.pickle b/code/data/sim_538.pickle
index f91b7ec..75979bb 100644
Binary files a/code/data/sim_538.pickle and b/code/data/sim_538.pickle differ
diff --git a/code/data/sim_539.pickle b/code/data/sim_539.pickle
index 18c4c94..f1888fa 100644
Binary files a/code/data/sim_539.pickle and b/code/data/sim_539.pickle differ
diff --git a/code/data/sim_54.pickle b/code/data/sim_54.pickle
index bdcb6a9..2cdf9fe 100644
Binary files a/code/data/sim_54.pickle and b/code/data/sim_54.pickle differ
diff --git a/code/data/sim_540.pickle b/code/data/sim_540.pickle
index 3721ed7..2e5cf2a 100644
Binary files a/code/data/sim_540.pickle and b/code/data/sim_540.pickle differ
diff --git a/code/data/sim_541.pickle b/code/data/sim_541.pickle
index 0da71f6..6800cd4 100644
Binary files a/code/data/sim_541.pickle and b/code/data/sim_541.pickle differ
diff --git a/code/data/sim_542.pickle b/code/data/sim_542.pickle
index 6cbf510..94f0ec2 100644
Binary files a/code/data/sim_542.pickle and b/code/data/sim_542.pickle differ
diff --git a/code/data/sim_543.pickle b/code/data/sim_543.pickle
index 8b884ed..d8a2b42 100644
Binary files a/code/data/sim_543.pickle and b/code/data/sim_543.pickle differ
diff --git a/code/data/sim_544.pickle b/code/data/sim_544.pickle
index 811f224..967d7ef 100644
Binary files a/code/data/sim_544.pickle and b/code/data/sim_544.pickle differ
diff --git a/code/data/sim_545.pickle b/code/data/sim_545.pickle
index e91041c..05c1bef 100644
Binary files a/code/data/sim_545.pickle and b/code/data/sim_545.pickle differ
diff --git a/code/data/sim_546.pickle b/code/data/sim_546.pickle
index 623399f..c8531cc 100644
Binary files a/code/data/sim_546.pickle and b/code/data/sim_546.pickle differ
diff --git a/code/data/sim_547.pickle b/code/data/sim_547.pickle
index c94d755..b2cd8fc 100644
Binary files a/code/data/sim_547.pickle and b/code/data/sim_547.pickle differ
diff --git a/code/data/sim_548.pickle b/code/data/sim_548.pickle
index 4857295..0634c87 100644
Binary files a/code/data/sim_548.pickle and b/code/data/sim_548.pickle differ
diff --git a/code/data/sim_549.pickle b/code/data/sim_549.pickle
index dec7b3f..36c99fb 100644
Binary files a/code/data/sim_549.pickle and b/code/data/sim_549.pickle differ
diff --git a/code/data/sim_55.pickle b/code/data/sim_55.pickle
index 8729167..2d47658 100644
Binary files a/code/data/sim_55.pickle and b/code/data/sim_55.pickle differ
diff --git a/code/data/sim_550.pickle b/code/data/sim_550.pickle
index 13e34b2..de878b8 100644
Binary files a/code/data/sim_550.pickle and b/code/data/sim_550.pickle differ
diff --git a/code/data/sim_551.pickle b/code/data/sim_551.pickle
index a18527c..3206c84 100644
Binary files a/code/data/sim_551.pickle and b/code/data/sim_551.pickle differ
diff --git a/code/data/sim_552.pickle b/code/data/sim_552.pickle
index 51fc270..5f5eb8a 100644
Binary files a/code/data/sim_552.pickle and b/code/data/sim_552.pickle differ
diff --git a/code/data/sim_553.pickle b/code/data/sim_553.pickle
index f1502c7..9eda4fa 100644
Binary files a/code/data/sim_553.pickle and b/code/data/sim_553.pickle differ
diff --git a/code/data/sim_554.pickle b/code/data/sim_554.pickle
index c862c62..1ab8f78 100644
Binary files a/code/data/sim_554.pickle and b/code/data/sim_554.pickle differ
diff --git a/code/data/sim_555.pickle b/code/data/sim_555.pickle
index 8fae754..c2e21f7 100644
Binary files a/code/data/sim_555.pickle and b/code/data/sim_555.pickle differ
diff --git a/code/data/sim_556.pickle b/code/data/sim_556.pickle
index f094826..2271248 100644
Binary files a/code/data/sim_556.pickle and b/code/data/sim_556.pickle differ
diff --git a/code/data/sim_557.pickle b/code/data/sim_557.pickle
index abe5a44..30c77e0 100644
Binary files a/code/data/sim_557.pickle and b/code/data/sim_557.pickle differ
diff --git a/code/data/sim_558.pickle b/code/data/sim_558.pickle
index b2afad6..88dd892 100644
Binary files a/code/data/sim_558.pickle and b/code/data/sim_558.pickle differ
diff --git a/code/data/sim_559.pickle b/code/data/sim_559.pickle
index c0c0712..bbc5a5a 100644
Binary files a/code/data/sim_559.pickle and b/code/data/sim_559.pickle differ
diff --git a/code/data/sim_56.pickle b/code/data/sim_56.pickle
index ae92bd7..b0a2c5e 100644
Binary files a/code/data/sim_56.pickle and b/code/data/sim_56.pickle differ
diff --git a/code/data/sim_560.pickle b/code/data/sim_560.pickle
index f469698..4487b6a 100644
Binary files a/code/data/sim_560.pickle and b/code/data/sim_560.pickle differ
diff --git a/code/data/sim_561.pickle b/code/data/sim_561.pickle
index 0e12dd9..1432d3b 100644
Binary files a/code/data/sim_561.pickle and b/code/data/sim_561.pickle differ
diff --git a/code/data/sim_562.pickle b/code/data/sim_562.pickle
index 4b605bb..d1c6a7b 100644
Binary files a/code/data/sim_562.pickle and b/code/data/sim_562.pickle differ
diff --git a/code/data/sim_563.pickle b/code/data/sim_563.pickle
index 157b5dd..4e28eb8 100644
Binary files a/code/data/sim_563.pickle and b/code/data/sim_563.pickle differ
diff --git a/code/data/sim_564.pickle b/code/data/sim_564.pickle
index ba5404f..a6aabdd 100644
Binary files a/code/data/sim_564.pickle and b/code/data/sim_564.pickle differ
diff --git a/code/data/sim_565.pickle b/code/data/sim_565.pickle
index 305ed5a..ace2f34 100644
Binary files a/code/data/sim_565.pickle and b/code/data/sim_565.pickle differ
diff --git a/code/data/sim_566.pickle b/code/data/sim_566.pickle
index bb2741e..5a3914a 100644
Binary files a/code/data/sim_566.pickle and b/code/data/sim_566.pickle differ
diff --git a/code/data/sim_567.pickle b/code/data/sim_567.pickle
index 9daef49..54f12f2 100644
Binary files a/code/data/sim_567.pickle and b/code/data/sim_567.pickle differ
diff --git a/code/data/sim_568.pickle b/code/data/sim_568.pickle
index 9db0b68..65b484a 100644
Binary files a/code/data/sim_568.pickle and b/code/data/sim_568.pickle differ
diff --git a/code/data/sim_569.pickle b/code/data/sim_569.pickle
index 1ff8dfb..206aa8c 100644
Binary files a/code/data/sim_569.pickle and b/code/data/sim_569.pickle differ
diff --git a/code/data/sim_57.pickle b/code/data/sim_57.pickle
index 9352fe6..985984d 100644
Binary files a/code/data/sim_57.pickle and b/code/data/sim_57.pickle differ
diff --git a/code/data/sim_570.pickle b/code/data/sim_570.pickle
index 1e2de1a..4b18a6e 100644
Binary files a/code/data/sim_570.pickle and b/code/data/sim_570.pickle differ
diff --git a/code/data/sim_571.pickle b/code/data/sim_571.pickle
index c7e804a..a2bc518 100644
Binary files a/code/data/sim_571.pickle and b/code/data/sim_571.pickle differ
diff --git a/code/data/sim_572.pickle b/code/data/sim_572.pickle
index 0794b0f..df3e30e 100644
Binary files a/code/data/sim_572.pickle and b/code/data/sim_572.pickle differ
diff --git a/code/data/sim_573.pickle b/code/data/sim_573.pickle
index cdbe6d2..91a69ea 100644
Binary files a/code/data/sim_573.pickle and b/code/data/sim_573.pickle differ
diff --git a/code/data/sim_574.pickle b/code/data/sim_574.pickle
index 416607c..9d8c0ea 100644
Binary files a/code/data/sim_574.pickle and b/code/data/sim_574.pickle differ
diff --git a/code/data/sim_575.pickle b/code/data/sim_575.pickle
index 5038ac4..ba24575 100644
Binary files a/code/data/sim_575.pickle and b/code/data/sim_575.pickle differ
diff --git a/code/data/sim_576.pickle b/code/data/sim_576.pickle
index 413c93b..359cc14 100644
Binary files a/code/data/sim_576.pickle and b/code/data/sim_576.pickle differ
diff --git a/code/data/sim_577.pickle b/code/data/sim_577.pickle
index 7052de6..1e60315 100644
Binary files a/code/data/sim_577.pickle and b/code/data/sim_577.pickle differ
diff --git a/code/data/sim_578.pickle b/code/data/sim_578.pickle
index 65de852..75574cc 100644
Binary files a/code/data/sim_578.pickle and b/code/data/sim_578.pickle differ
diff --git a/code/data/sim_579.pickle b/code/data/sim_579.pickle
index da40d99..956106b 100644
Binary files a/code/data/sim_579.pickle and b/code/data/sim_579.pickle differ
diff --git a/code/data/sim_58.pickle b/code/data/sim_58.pickle
index 67eb09d..20703e8 100644
Binary files a/code/data/sim_58.pickle and b/code/data/sim_58.pickle differ
diff --git a/code/data/sim_580.pickle b/code/data/sim_580.pickle
index e7111dc..f198654 100644
Binary files a/code/data/sim_580.pickle and b/code/data/sim_580.pickle differ
diff --git a/code/data/sim_581.pickle b/code/data/sim_581.pickle
index 22f1059..0f57466 100644
Binary files a/code/data/sim_581.pickle and b/code/data/sim_581.pickle differ
diff --git a/code/data/sim_582.pickle b/code/data/sim_582.pickle
index dd11c55..d048e80 100644
Binary files a/code/data/sim_582.pickle and b/code/data/sim_582.pickle differ
diff --git a/code/data/sim_583.pickle b/code/data/sim_583.pickle
index affb6c0..e08a62d 100644
Binary files a/code/data/sim_583.pickle and b/code/data/sim_583.pickle differ
diff --git a/code/data/sim_584.pickle b/code/data/sim_584.pickle
index 1fed683..07b6f8a 100644
Binary files a/code/data/sim_584.pickle and b/code/data/sim_584.pickle differ
diff --git a/code/data/sim_585.pickle b/code/data/sim_585.pickle
index 01079f7..582e6a1 100644
Binary files a/code/data/sim_585.pickle and b/code/data/sim_585.pickle differ
diff --git a/code/data/sim_586.pickle b/code/data/sim_586.pickle
index 7c835ae..9a4806a 100644
Binary files a/code/data/sim_586.pickle and b/code/data/sim_586.pickle differ
diff --git a/code/data/sim_587.pickle b/code/data/sim_587.pickle
index 86a686e..0bdc099 100644
Binary files a/code/data/sim_587.pickle and b/code/data/sim_587.pickle differ
diff --git a/code/data/sim_588.pickle b/code/data/sim_588.pickle
index e91fe61..50284c0 100644
Binary files a/code/data/sim_588.pickle and b/code/data/sim_588.pickle differ
diff --git a/code/data/sim_589.pickle b/code/data/sim_589.pickle
index e23c1e7..f3c1c10 100644
Binary files a/code/data/sim_589.pickle and b/code/data/sim_589.pickle differ
diff --git a/code/data/sim_59.pickle b/code/data/sim_59.pickle
index b3d0da0..81f123c 100644
Binary files a/code/data/sim_59.pickle and b/code/data/sim_59.pickle differ
diff --git a/code/data/sim_590.pickle b/code/data/sim_590.pickle
index 13f285f..caec4ba 100644
Binary files a/code/data/sim_590.pickle and b/code/data/sim_590.pickle differ
diff --git a/code/data/sim_591.pickle b/code/data/sim_591.pickle
index 89d48fd..18df861 100644
Binary files a/code/data/sim_591.pickle and b/code/data/sim_591.pickle differ
diff --git a/code/data/sim_592.pickle b/code/data/sim_592.pickle
index 4f142b2..1f00ea8 100644
Binary files a/code/data/sim_592.pickle and b/code/data/sim_592.pickle differ
diff --git a/code/data/sim_593.pickle b/code/data/sim_593.pickle
index 732a54f..cd361e4 100644
Binary files a/code/data/sim_593.pickle and b/code/data/sim_593.pickle differ
diff --git a/code/data/sim_594.pickle b/code/data/sim_594.pickle
index 6a70bd9..b9db489 100644
Binary files a/code/data/sim_594.pickle and b/code/data/sim_594.pickle differ
diff --git a/code/data/sim_595.pickle b/code/data/sim_595.pickle
index d1179e7..a739474 100644
Binary files a/code/data/sim_595.pickle and b/code/data/sim_595.pickle differ
diff --git a/code/data/sim_596.pickle b/code/data/sim_596.pickle
index 0032494..1fde0dc 100644
Binary files a/code/data/sim_596.pickle and b/code/data/sim_596.pickle differ
diff --git a/code/data/sim_597.pickle b/code/data/sim_597.pickle
index 673eac3..23f4836 100644
Binary files a/code/data/sim_597.pickle and b/code/data/sim_597.pickle differ
diff --git a/code/data/sim_598.pickle b/code/data/sim_598.pickle
index 1fb09da..e9164c4 100644
Binary files a/code/data/sim_598.pickle and b/code/data/sim_598.pickle differ
diff --git a/code/data/sim_599.pickle b/code/data/sim_599.pickle
index 11dff0f..538da83 100644
Binary files a/code/data/sim_599.pickle and b/code/data/sim_599.pickle differ
diff --git a/code/data/sim_6.pickle b/code/data/sim_6.pickle
index 144899d..2d6bc89 100644
Binary files a/code/data/sim_6.pickle and b/code/data/sim_6.pickle differ
diff --git a/code/data/sim_60.pickle b/code/data/sim_60.pickle
index 70a4ccf..bc6e5b2 100644
Binary files a/code/data/sim_60.pickle and b/code/data/sim_60.pickle differ
diff --git a/code/data/sim_600.pickle b/code/data/sim_600.pickle
index 5d4a4c5..4e04355 100644
Binary files a/code/data/sim_600.pickle and b/code/data/sim_600.pickle differ
diff --git a/code/data/sim_601.pickle b/code/data/sim_601.pickle
index f3dd415..86f29fe 100644
Binary files a/code/data/sim_601.pickle and b/code/data/sim_601.pickle differ
diff --git a/code/data/sim_602.pickle b/code/data/sim_602.pickle
index ab8d076..f45e3a0 100644
Binary files a/code/data/sim_602.pickle and b/code/data/sim_602.pickle differ
diff --git a/code/data/sim_603.pickle b/code/data/sim_603.pickle
index 0d24fe1..739ca7b 100644
Binary files a/code/data/sim_603.pickle and b/code/data/sim_603.pickle differ
diff --git a/code/data/sim_604.pickle b/code/data/sim_604.pickle
index 71698f4..fc2dd99 100644
Binary files a/code/data/sim_604.pickle and b/code/data/sim_604.pickle differ
diff --git a/code/data/sim_605.pickle b/code/data/sim_605.pickle
index e31c3ad..d0a7c55 100644
Binary files a/code/data/sim_605.pickle and b/code/data/sim_605.pickle differ
diff --git a/code/data/sim_606.pickle b/code/data/sim_606.pickle
index a8fb4b3..6a79e20 100644
Binary files a/code/data/sim_606.pickle and b/code/data/sim_606.pickle differ
diff --git a/code/data/sim_607.pickle b/code/data/sim_607.pickle
index 8e24a46..dc3e2d3 100644
Binary files a/code/data/sim_607.pickle and b/code/data/sim_607.pickle differ
diff --git a/code/data/sim_608.pickle b/code/data/sim_608.pickle
index 30d5813..f14d968 100644
Binary files a/code/data/sim_608.pickle and b/code/data/sim_608.pickle differ
diff --git a/code/data/sim_609.pickle b/code/data/sim_609.pickle
index 980e065..d19ea6c 100644
Binary files a/code/data/sim_609.pickle and b/code/data/sim_609.pickle differ
diff --git a/code/data/sim_61.pickle b/code/data/sim_61.pickle
index 9f26dff..75b1c8e 100644
Binary files a/code/data/sim_61.pickle and b/code/data/sim_61.pickle differ
diff --git a/code/data/sim_610.pickle b/code/data/sim_610.pickle
index 83573fd..4a7d351 100644
Binary files a/code/data/sim_610.pickle and b/code/data/sim_610.pickle differ
diff --git a/code/data/sim_611.pickle b/code/data/sim_611.pickle
index dbd23bb..f50053b 100644
Binary files a/code/data/sim_611.pickle and b/code/data/sim_611.pickle differ
diff --git a/code/data/sim_612.pickle b/code/data/sim_612.pickle
index 811f42b..e4c2ccf 100644
Binary files a/code/data/sim_612.pickle and b/code/data/sim_612.pickle differ
diff --git a/code/data/sim_613.pickle b/code/data/sim_613.pickle
index f2fcda4..13ab4ae 100644
Binary files a/code/data/sim_613.pickle and b/code/data/sim_613.pickle differ
diff --git a/code/data/sim_614.pickle b/code/data/sim_614.pickle
index f3070f0..ba772bc 100644
Binary files a/code/data/sim_614.pickle and b/code/data/sim_614.pickle differ
diff --git a/code/data/sim_615.pickle b/code/data/sim_615.pickle
index f964aaf..e9272be 100644
Binary files a/code/data/sim_615.pickle and b/code/data/sim_615.pickle differ
diff --git a/code/data/sim_616.pickle b/code/data/sim_616.pickle
index e5e8c75..04dbbe3 100644
Binary files a/code/data/sim_616.pickle and b/code/data/sim_616.pickle differ
diff --git a/code/data/sim_617.pickle b/code/data/sim_617.pickle
index d802633..ed07221 100644
Binary files a/code/data/sim_617.pickle and b/code/data/sim_617.pickle differ
diff --git a/code/data/sim_618.pickle b/code/data/sim_618.pickle
index df5c0d9..2b7357c 100644
Binary files a/code/data/sim_618.pickle and b/code/data/sim_618.pickle differ
diff --git a/code/data/sim_619.pickle b/code/data/sim_619.pickle
index 7092509..c68e721 100644
Binary files a/code/data/sim_619.pickle and b/code/data/sim_619.pickle differ
diff --git a/code/data/sim_62.pickle b/code/data/sim_62.pickle
index 5bccb5a..3449b4b 100644
Binary files a/code/data/sim_62.pickle and b/code/data/sim_62.pickle differ
diff --git a/code/data/sim_620.pickle b/code/data/sim_620.pickle
index eec3f56..26d6436 100644
Binary files a/code/data/sim_620.pickle and b/code/data/sim_620.pickle differ
diff --git a/code/data/sim_621.pickle b/code/data/sim_621.pickle
index 4b0e8d0..0f424e3 100644
Binary files a/code/data/sim_621.pickle and b/code/data/sim_621.pickle differ
diff --git a/code/data/sim_622.pickle b/code/data/sim_622.pickle
index b4e0c5b..48a48aa 100644
Binary files a/code/data/sim_622.pickle and b/code/data/sim_622.pickle differ
diff --git a/code/data/sim_623.pickle b/code/data/sim_623.pickle
index e095e3f..b3b420a 100644
Binary files a/code/data/sim_623.pickle and b/code/data/sim_623.pickle differ
diff --git a/code/data/sim_624.pickle b/code/data/sim_624.pickle
index 3f72327..2f5f538 100644
Binary files a/code/data/sim_624.pickle and b/code/data/sim_624.pickle differ
diff --git a/code/data/sim_625.pickle b/code/data/sim_625.pickle
index 972760a..0ec3ecc 100644
Binary files a/code/data/sim_625.pickle and b/code/data/sim_625.pickle differ
diff --git a/code/data/sim_626.pickle b/code/data/sim_626.pickle
index 0b56412..16a143d 100644
Binary files a/code/data/sim_626.pickle and b/code/data/sim_626.pickle differ
diff --git a/code/data/sim_627.pickle b/code/data/sim_627.pickle
index 042621e..f1a819f 100644
Binary files a/code/data/sim_627.pickle and b/code/data/sim_627.pickle differ
diff --git a/code/data/sim_628.pickle b/code/data/sim_628.pickle
index b3e39ec..076064a 100644
Binary files a/code/data/sim_628.pickle and b/code/data/sim_628.pickle differ
diff --git a/code/data/sim_629.pickle b/code/data/sim_629.pickle
index 13b1a21..7fa74b5 100644
Binary files a/code/data/sim_629.pickle and b/code/data/sim_629.pickle differ
diff --git a/code/data/sim_63.pickle b/code/data/sim_63.pickle
index e7efd10..6ef0c61 100644
Binary files a/code/data/sim_63.pickle and b/code/data/sim_63.pickle differ
diff --git a/code/data/sim_630.pickle b/code/data/sim_630.pickle
index 85a9b0c..dd3a968 100644
Binary files a/code/data/sim_630.pickle and b/code/data/sim_630.pickle differ
diff --git a/code/data/sim_631.pickle b/code/data/sim_631.pickle
index d19ee7a..64c4602 100644
Binary files a/code/data/sim_631.pickle and b/code/data/sim_631.pickle differ
diff --git a/code/data/sim_632.pickle b/code/data/sim_632.pickle
index e30d60d..ae06d63 100644
Binary files a/code/data/sim_632.pickle and b/code/data/sim_632.pickle differ
diff --git a/code/data/sim_633.pickle b/code/data/sim_633.pickle
index eb49636..ab8499d 100644
Binary files a/code/data/sim_633.pickle and b/code/data/sim_633.pickle differ
diff --git a/code/data/sim_634.pickle b/code/data/sim_634.pickle
index 71dbb50..60ca05b 100644
Binary files a/code/data/sim_634.pickle and b/code/data/sim_634.pickle differ
diff --git a/code/data/sim_635.pickle b/code/data/sim_635.pickle
index 7cc09f1..ba4cba8 100644
Binary files a/code/data/sim_635.pickle and b/code/data/sim_635.pickle differ
diff --git a/code/data/sim_636.pickle b/code/data/sim_636.pickle
index 32280ae..3cafaac 100644
Binary files a/code/data/sim_636.pickle and b/code/data/sim_636.pickle differ
diff --git a/code/data/sim_637.pickle b/code/data/sim_637.pickle
index bc400b2..c70a2ca 100644
Binary files a/code/data/sim_637.pickle and b/code/data/sim_637.pickle differ
diff --git a/code/data/sim_638.pickle b/code/data/sim_638.pickle
index 36a523e..ae38c03 100644
Binary files a/code/data/sim_638.pickle and b/code/data/sim_638.pickle differ
diff --git a/code/data/sim_639.pickle b/code/data/sim_639.pickle
index 9c8f9a3..ed7a04c 100644
Binary files a/code/data/sim_639.pickle and b/code/data/sim_639.pickle differ
diff --git a/code/data/sim_64.pickle b/code/data/sim_64.pickle
index 1be5b6e..36f2d1a 100644
Binary files a/code/data/sim_64.pickle and b/code/data/sim_64.pickle differ
diff --git a/code/data/sim_640.pickle b/code/data/sim_640.pickle
index cb3cd45..8b498b7 100644
Binary files a/code/data/sim_640.pickle and b/code/data/sim_640.pickle differ
diff --git a/code/data/sim_641.pickle b/code/data/sim_641.pickle
index b83110f..7225445 100644
Binary files a/code/data/sim_641.pickle and b/code/data/sim_641.pickle differ
diff --git a/code/data/sim_642.pickle b/code/data/sim_642.pickle
index 6ce318d..2b70b8c 100644
Binary files a/code/data/sim_642.pickle and b/code/data/sim_642.pickle differ
diff --git a/code/data/sim_643.pickle b/code/data/sim_643.pickle
index ef4baee..622c1e4 100644
Binary files a/code/data/sim_643.pickle and b/code/data/sim_643.pickle differ
diff --git a/code/data/sim_644.pickle b/code/data/sim_644.pickle
index cf0774b..4bcd0f1 100644
Binary files a/code/data/sim_644.pickle and b/code/data/sim_644.pickle differ
diff --git a/code/data/sim_645.pickle b/code/data/sim_645.pickle
index be66380..a5a05a2 100644
Binary files a/code/data/sim_645.pickle and b/code/data/sim_645.pickle differ
diff --git a/code/data/sim_646.pickle b/code/data/sim_646.pickle
index 4a6ab8d..93e6c57 100644
Binary files a/code/data/sim_646.pickle and b/code/data/sim_646.pickle differ
diff --git a/code/data/sim_647.pickle b/code/data/sim_647.pickle
index 05e8e85..e166439 100644
Binary files a/code/data/sim_647.pickle and b/code/data/sim_647.pickle differ
diff --git a/code/data/sim_648.pickle b/code/data/sim_648.pickle
index 40b30b1..97b98ba 100644
Binary files a/code/data/sim_648.pickle and b/code/data/sim_648.pickle differ
diff --git a/code/data/sim_649.pickle b/code/data/sim_649.pickle
index 615d9c7..6e53b48 100644
Binary files a/code/data/sim_649.pickle and b/code/data/sim_649.pickle differ
diff --git a/code/data/sim_65.pickle b/code/data/sim_65.pickle
index 56b5813..f45cdcc 100644
Binary files a/code/data/sim_65.pickle and b/code/data/sim_65.pickle differ
diff --git a/code/data/sim_650.pickle b/code/data/sim_650.pickle
index 47cfab3..c3800bf 100644
Binary files a/code/data/sim_650.pickle and b/code/data/sim_650.pickle differ
diff --git a/code/data/sim_651.pickle b/code/data/sim_651.pickle
index 47e9775..d9e8e7f 100644
Binary files a/code/data/sim_651.pickle and b/code/data/sim_651.pickle differ
diff --git a/code/data/sim_652.pickle b/code/data/sim_652.pickle
index 8c98535..c7fd9a1 100644
Binary files a/code/data/sim_652.pickle and b/code/data/sim_652.pickle differ
diff --git a/code/data/sim_653.pickle b/code/data/sim_653.pickle
index dd1eb86..29d35b8 100644
Binary files a/code/data/sim_653.pickle and b/code/data/sim_653.pickle differ
diff --git a/code/data/sim_654.pickle b/code/data/sim_654.pickle
index 20359f9..8618ee4 100644
Binary files a/code/data/sim_654.pickle and b/code/data/sim_654.pickle differ
diff --git a/code/data/sim_655.pickle b/code/data/sim_655.pickle
index db9de89..d825603 100644
Binary files a/code/data/sim_655.pickle and b/code/data/sim_655.pickle differ
diff --git a/code/data/sim_656.pickle b/code/data/sim_656.pickle
index 9776b09..7883ea1 100644
Binary files a/code/data/sim_656.pickle and b/code/data/sim_656.pickle differ
diff --git a/code/data/sim_657.pickle b/code/data/sim_657.pickle
index cb371bf..52601b2 100644
Binary files a/code/data/sim_657.pickle and b/code/data/sim_657.pickle differ
diff --git a/code/data/sim_658.pickle b/code/data/sim_658.pickle
index 0c02c8c..13fd8db 100644
Binary files a/code/data/sim_658.pickle and b/code/data/sim_658.pickle differ
diff --git a/code/data/sim_659.pickle b/code/data/sim_659.pickle
index 3d38d19..84773ab 100644
Binary files a/code/data/sim_659.pickle and b/code/data/sim_659.pickle differ
diff --git a/code/data/sim_66.pickle b/code/data/sim_66.pickle
index 88cf640..6d4af57 100644
Binary files a/code/data/sim_66.pickle and b/code/data/sim_66.pickle differ
diff --git a/code/data/sim_660.pickle b/code/data/sim_660.pickle
index e5adbe3..d1b1726 100644
Binary files a/code/data/sim_660.pickle and b/code/data/sim_660.pickle differ
diff --git a/code/data/sim_661.pickle b/code/data/sim_661.pickle
index b8d6020..c4f2160 100644
Binary files a/code/data/sim_661.pickle and b/code/data/sim_661.pickle differ
diff --git a/code/data/sim_662.pickle b/code/data/sim_662.pickle
index af8e019..fdea9cb 100644
Binary files a/code/data/sim_662.pickle and b/code/data/sim_662.pickle differ
diff --git a/code/data/sim_663.pickle b/code/data/sim_663.pickle
index 99253df..6cf07ad 100644
Binary files a/code/data/sim_663.pickle and b/code/data/sim_663.pickle differ
diff --git a/code/data/sim_664.pickle b/code/data/sim_664.pickle
index d04e2f9..c9505f3 100644
Binary files a/code/data/sim_664.pickle and b/code/data/sim_664.pickle differ
diff --git a/code/data/sim_665.pickle b/code/data/sim_665.pickle
index ed33f56..0868289 100644
Binary files a/code/data/sim_665.pickle and b/code/data/sim_665.pickle differ
diff --git a/code/data/sim_666.pickle b/code/data/sim_666.pickle
index a5de1a5..59cc060 100644
Binary files a/code/data/sim_666.pickle and b/code/data/sim_666.pickle differ
diff --git a/code/data/sim_667.pickle b/code/data/sim_667.pickle
index b063893..ae833e1 100644
Binary files a/code/data/sim_667.pickle and b/code/data/sim_667.pickle differ
diff --git a/code/data/sim_668.pickle b/code/data/sim_668.pickle
index 9a3f2b0..afd29fd 100644
Binary files a/code/data/sim_668.pickle and b/code/data/sim_668.pickle differ
diff --git a/code/data/sim_669.pickle b/code/data/sim_669.pickle
index 1d7f291..a914009 100644
Binary files a/code/data/sim_669.pickle and b/code/data/sim_669.pickle differ
diff --git a/code/data/sim_67.pickle b/code/data/sim_67.pickle
index dcd4ac8..0027006 100644
Binary files a/code/data/sim_67.pickle and b/code/data/sim_67.pickle differ
diff --git a/code/data/sim_670.pickle b/code/data/sim_670.pickle
index b1a7c6f..1d0d6b9 100644
Binary files a/code/data/sim_670.pickle and b/code/data/sim_670.pickle differ
diff --git a/code/data/sim_671.pickle b/code/data/sim_671.pickle
index 9145cbb..7a5f764 100644
Binary files a/code/data/sim_671.pickle and b/code/data/sim_671.pickle differ
diff --git a/code/data/sim_672.pickle b/code/data/sim_672.pickle
index 36704bc..f28df32 100644
Binary files a/code/data/sim_672.pickle and b/code/data/sim_672.pickle differ
diff --git a/code/data/sim_673.pickle b/code/data/sim_673.pickle
index 2be3b08..a57ac44 100644
Binary files a/code/data/sim_673.pickle and b/code/data/sim_673.pickle differ
diff --git a/code/data/sim_674.pickle b/code/data/sim_674.pickle
index 079ee66..1a6d913 100644
Binary files a/code/data/sim_674.pickle and b/code/data/sim_674.pickle differ
diff --git a/code/data/sim_675.pickle b/code/data/sim_675.pickle
index 81a592b..ed88e17 100644
Binary files a/code/data/sim_675.pickle and b/code/data/sim_675.pickle differ
diff --git a/code/data/sim_676.pickle b/code/data/sim_676.pickle
index 00a2136..a8c0de8 100644
Binary files a/code/data/sim_676.pickle and b/code/data/sim_676.pickle differ
diff --git a/code/data/sim_677.pickle b/code/data/sim_677.pickle
index fd9d98c..e5b90ce 100644
Binary files a/code/data/sim_677.pickle and b/code/data/sim_677.pickle differ
diff --git a/code/data/sim_678.pickle b/code/data/sim_678.pickle
index 1134057..72e36d5 100644
Binary files a/code/data/sim_678.pickle and b/code/data/sim_678.pickle differ
diff --git a/code/data/sim_679.pickle b/code/data/sim_679.pickle
index ec12327..7c114f4 100644
Binary files a/code/data/sim_679.pickle and b/code/data/sim_679.pickle differ
diff --git a/code/data/sim_68.pickle b/code/data/sim_68.pickle
index 25a5805..debe8e6 100644
Binary files a/code/data/sim_68.pickle and b/code/data/sim_68.pickle differ
diff --git a/code/data/sim_680.pickle b/code/data/sim_680.pickle
index ca839bf..9ba6567 100644
Binary files a/code/data/sim_680.pickle and b/code/data/sim_680.pickle differ
diff --git a/code/data/sim_681.pickle b/code/data/sim_681.pickle
index b44aa74..a14073f 100644
Binary files a/code/data/sim_681.pickle and b/code/data/sim_681.pickle differ
diff --git a/code/data/sim_682.pickle b/code/data/sim_682.pickle
index 6be33cf..e963344 100644
Binary files a/code/data/sim_682.pickle and b/code/data/sim_682.pickle differ
diff --git a/code/data/sim_683.pickle b/code/data/sim_683.pickle
index 7052856..bc61c22 100644
Binary files a/code/data/sim_683.pickle and b/code/data/sim_683.pickle differ
diff --git a/code/data/sim_684.pickle b/code/data/sim_684.pickle
index 19c0381..3de2009 100644
Binary files a/code/data/sim_684.pickle and b/code/data/sim_684.pickle differ
diff --git a/code/data/sim_685.pickle b/code/data/sim_685.pickle
index 41fdb91..86d6ebd 100644
Binary files a/code/data/sim_685.pickle and b/code/data/sim_685.pickle differ
diff --git a/code/data/sim_686.pickle b/code/data/sim_686.pickle
index b5698d1..5aae7b6 100644
Binary files a/code/data/sim_686.pickle and b/code/data/sim_686.pickle differ
diff --git a/code/data/sim_687.pickle b/code/data/sim_687.pickle
index 669dc81..143dd72 100644
Binary files a/code/data/sim_687.pickle and b/code/data/sim_687.pickle differ
diff --git a/code/data/sim_688.pickle b/code/data/sim_688.pickle
index f94596a..9a4be2f 100644
Binary files a/code/data/sim_688.pickle and b/code/data/sim_688.pickle differ
diff --git a/code/data/sim_689.pickle b/code/data/sim_689.pickle
index f3db648..685f91b 100644
Binary files a/code/data/sim_689.pickle and b/code/data/sim_689.pickle differ
diff --git a/code/data/sim_69.pickle b/code/data/sim_69.pickle
index 0711ffe..1d7304a 100644
Binary files a/code/data/sim_69.pickle and b/code/data/sim_69.pickle differ
diff --git a/code/data/sim_690.pickle b/code/data/sim_690.pickle
index b16019d..559c305 100644
Binary files a/code/data/sim_690.pickle and b/code/data/sim_690.pickle differ
diff --git a/code/data/sim_691.pickle b/code/data/sim_691.pickle
index ed9a5d9..ac0c5b9 100644
Binary files a/code/data/sim_691.pickle and b/code/data/sim_691.pickle differ
diff --git a/code/data/sim_692.pickle b/code/data/sim_692.pickle
index 5c40208..38a8a8b 100644
Binary files a/code/data/sim_692.pickle and b/code/data/sim_692.pickle differ
diff --git a/code/data/sim_693.pickle b/code/data/sim_693.pickle
index 6f6d768..9b1d609 100644
Binary files a/code/data/sim_693.pickle and b/code/data/sim_693.pickle differ
diff --git a/code/data/sim_694.pickle b/code/data/sim_694.pickle
index 0e6f42c..5379f46 100644
Binary files a/code/data/sim_694.pickle and b/code/data/sim_694.pickle differ
diff --git a/code/data/sim_695.pickle b/code/data/sim_695.pickle
index 1c987e6..fcbd502 100644
Binary files a/code/data/sim_695.pickle and b/code/data/sim_695.pickle differ
diff --git a/code/data/sim_696.pickle b/code/data/sim_696.pickle
index 8d79c33..7417cc0 100644
Binary files a/code/data/sim_696.pickle and b/code/data/sim_696.pickle differ
diff --git a/code/data/sim_697.pickle b/code/data/sim_697.pickle
index 798c166..4903e99 100644
Binary files a/code/data/sim_697.pickle and b/code/data/sim_697.pickle differ
diff --git a/code/data/sim_698.pickle b/code/data/sim_698.pickle
index df9ed03..d3ae39f 100644
Binary files a/code/data/sim_698.pickle and b/code/data/sim_698.pickle differ
diff --git a/code/data/sim_699.pickle b/code/data/sim_699.pickle
index 10b5704..7fa2163 100644
Binary files a/code/data/sim_699.pickle and b/code/data/sim_699.pickle differ
diff --git a/code/data/sim_7.pickle b/code/data/sim_7.pickle
index 182fe90..9e18a7d 100644
Binary files a/code/data/sim_7.pickle and b/code/data/sim_7.pickle differ
diff --git a/code/data/sim_70.pickle b/code/data/sim_70.pickle
index e67dc89..fba255b 100644
Binary files a/code/data/sim_70.pickle and b/code/data/sim_70.pickle differ
diff --git a/code/data/sim_700.pickle b/code/data/sim_700.pickle
index f45cfeb..5ff9fc8 100644
Binary files a/code/data/sim_700.pickle and b/code/data/sim_700.pickle differ
diff --git a/code/data/sim_701.pickle b/code/data/sim_701.pickle
index 0994888..babe820 100644
Binary files a/code/data/sim_701.pickle and b/code/data/sim_701.pickle differ
diff --git a/code/data/sim_702.pickle b/code/data/sim_702.pickle
index f3cdbf6..e70aa29 100644
Binary files a/code/data/sim_702.pickle and b/code/data/sim_702.pickle differ
diff --git a/code/data/sim_703.pickle b/code/data/sim_703.pickle
index a13f645..d2979c4 100644
Binary files a/code/data/sim_703.pickle and b/code/data/sim_703.pickle differ
diff --git a/code/data/sim_704.pickle b/code/data/sim_704.pickle
index 673d85f..88fed89 100644
Binary files a/code/data/sim_704.pickle and b/code/data/sim_704.pickle differ
diff --git a/code/data/sim_705.pickle b/code/data/sim_705.pickle
index 6112d60..d1e613f 100644
Binary files a/code/data/sim_705.pickle and b/code/data/sim_705.pickle differ
diff --git a/code/data/sim_706.pickle b/code/data/sim_706.pickle
index 3d331da..7f7ead0 100644
Binary files a/code/data/sim_706.pickle and b/code/data/sim_706.pickle differ
diff --git a/code/data/sim_707.pickle b/code/data/sim_707.pickle
index 546f9da..4e41627 100644
Binary files a/code/data/sim_707.pickle and b/code/data/sim_707.pickle differ
diff --git a/code/data/sim_708.pickle b/code/data/sim_708.pickle
index da4ecbd..e982c0a 100644
Binary files a/code/data/sim_708.pickle and b/code/data/sim_708.pickle differ
diff --git a/code/data/sim_709.pickle b/code/data/sim_709.pickle
index 235d052..b7a1e3d 100644
Binary files a/code/data/sim_709.pickle and b/code/data/sim_709.pickle differ
diff --git a/code/data/sim_71.pickle b/code/data/sim_71.pickle
index 324f845..e47dcba 100644
Binary files a/code/data/sim_71.pickle and b/code/data/sim_71.pickle differ
diff --git a/code/data/sim_710.pickle b/code/data/sim_710.pickle
index 82b578d..4ed6a2d 100644
Binary files a/code/data/sim_710.pickle and b/code/data/sim_710.pickle differ
diff --git a/code/data/sim_711.pickle b/code/data/sim_711.pickle
index c1b601f..9a11f43 100644
Binary files a/code/data/sim_711.pickle and b/code/data/sim_711.pickle differ
diff --git a/code/data/sim_712.pickle b/code/data/sim_712.pickle
index 8cba8de..5f8e3c2 100644
Binary files a/code/data/sim_712.pickle and b/code/data/sim_712.pickle differ
diff --git a/code/data/sim_713.pickle b/code/data/sim_713.pickle
index 765f99f..8b986cb 100644
Binary files a/code/data/sim_713.pickle and b/code/data/sim_713.pickle differ
diff --git a/code/data/sim_714.pickle b/code/data/sim_714.pickle
index 2b0aff2..e53b0f4 100644
Binary files a/code/data/sim_714.pickle and b/code/data/sim_714.pickle differ
diff --git a/code/data/sim_715.pickle b/code/data/sim_715.pickle
index 40274bd..1f1cf79 100644
Binary files a/code/data/sim_715.pickle and b/code/data/sim_715.pickle differ
diff --git a/code/data/sim_716.pickle b/code/data/sim_716.pickle
index f0276e9..a1e8f78 100644
Binary files a/code/data/sim_716.pickle and b/code/data/sim_716.pickle differ
diff --git a/code/data/sim_717.pickle b/code/data/sim_717.pickle
index 31cccf3..aa39c67 100644
Binary files a/code/data/sim_717.pickle and b/code/data/sim_717.pickle differ
diff --git a/code/data/sim_718.pickle b/code/data/sim_718.pickle
index 7514ea6..add951a 100644
Binary files a/code/data/sim_718.pickle and b/code/data/sim_718.pickle differ
diff --git a/code/data/sim_719.pickle b/code/data/sim_719.pickle
index b3bf544..ef8a3b9 100644
Binary files a/code/data/sim_719.pickle and b/code/data/sim_719.pickle differ
diff --git a/code/data/sim_72.pickle b/code/data/sim_72.pickle
index d5003bf..0986e52 100644
Binary files a/code/data/sim_72.pickle and b/code/data/sim_72.pickle differ
diff --git a/code/data/sim_720.pickle b/code/data/sim_720.pickle
index ad3e324..24f1526 100644
Binary files a/code/data/sim_720.pickle and b/code/data/sim_720.pickle differ
diff --git a/code/data/sim_721.pickle b/code/data/sim_721.pickle
index 381c7f9..050898f 100644
Binary files a/code/data/sim_721.pickle and b/code/data/sim_721.pickle differ
diff --git a/code/data/sim_722.pickle b/code/data/sim_722.pickle
index f16bca2..56f7334 100644
Binary files a/code/data/sim_722.pickle and b/code/data/sim_722.pickle differ
diff --git a/code/data/sim_723.pickle b/code/data/sim_723.pickle
index a5e2c4c..41da381 100644
Binary files a/code/data/sim_723.pickle and b/code/data/sim_723.pickle differ
diff --git a/code/data/sim_724.pickle b/code/data/sim_724.pickle
index 34cdace..337207b 100644
Binary files a/code/data/sim_724.pickle and b/code/data/sim_724.pickle differ
diff --git a/code/data/sim_725.pickle b/code/data/sim_725.pickle
index c96e2d9..0d267cb 100644
Binary files a/code/data/sim_725.pickle and b/code/data/sim_725.pickle differ
diff --git a/code/data/sim_726.pickle b/code/data/sim_726.pickle
index a55cf31..b9776fb 100644
Binary files a/code/data/sim_726.pickle and b/code/data/sim_726.pickle differ
diff --git a/code/data/sim_727.pickle b/code/data/sim_727.pickle
index f09a0bb..5c988f2 100644
Binary files a/code/data/sim_727.pickle and b/code/data/sim_727.pickle differ
diff --git a/code/data/sim_728.pickle b/code/data/sim_728.pickle
index 8c875c4..2d7e363 100644
Binary files a/code/data/sim_728.pickle and b/code/data/sim_728.pickle differ
diff --git a/code/data/sim_729.pickle b/code/data/sim_729.pickle
index 431a6f0..7afbb1f 100644
Binary files a/code/data/sim_729.pickle and b/code/data/sim_729.pickle differ
diff --git a/code/data/sim_73.pickle b/code/data/sim_73.pickle
index 3d0852e..61947b6 100644
Binary files a/code/data/sim_73.pickle and b/code/data/sim_73.pickle differ
diff --git a/code/data/sim_730.pickle b/code/data/sim_730.pickle
index 90727fd..001e86c 100644
Binary files a/code/data/sim_730.pickle and b/code/data/sim_730.pickle differ
diff --git a/code/data/sim_731.pickle b/code/data/sim_731.pickle
index 64d940e..a4843df 100644
Binary files a/code/data/sim_731.pickle and b/code/data/sim_731.pickle differ
diff --git a/code/data/sim_732.pickle b/code/data/sim_732.pickle
index 8f0fa8a..0525f00 100644
Binary files a/code/data/sim_732.pickle and b/code/data/sim_732.pickle differ
diff --git a/code/data/sim_733.pickle b/code/data/sim_733.pickle
index 8f8d93b..e36e076 100644
Binary files a/code/data/sim_733.pickle and b/code/data/sim_733.pickle differ
diff --git a/code/data/sim_734.pickle b/code/data/sim_734.pickle
index b2f71fb..c15dc91 100644
Binary files a/code/data/sim_734.pickle and b/code/data/sim_734.pickle differ
diff --git a/code/data/sim_735.pickle b/code/data/sim_735.pickle
index 9ed29a4..8a04c79 100644
Binary files a/code/data/sim_735.pickle and b/code/data/sim_735.pickle differ
diff --git a/code/data/sim_736.pickle b/code/data/sim_736.pickle
index b20fcae..6362b6d 100644
Binary files a/code/data/sim_736.pickle and b/code/data/sim_736.pickle differ
diff --git a/code/data/sim_737.pickle b/code/data/sim_737.pickle
index 344fe9d..41dbb12 100644
Binary files a/code/data/sim_737.pickle and b/code/data/sim_737.pickle differ
diff --git a/code/data/sim_738.pickle b/code/data/sim_738.pickle
index 1935517..beeeae5 100644
Binary files a/code/data/sim_738.pickle and b/code/data/sim_738.pickle differ
diff --git a/code/data/sim_739.pickle b/code/data/sim_739.pickle
index 4ed3d12..cd2f954 100644
Binary files a/code/data/sim_739.pickle and b/code/data/sim_739.pickle differ
diff --git a/code/data/sim_74.pickle b/code/data/sim_74.pickle
index d7f8153..f55dde1 100644
Binary files a/code/data/sim_74.pickle and b/code/data/sim_74.pickle differ
diff --git a/code/data/sim_740.pickle b/code/data/sim_740.pickle
index 27de21c..f11eaca 100644
Binary files a/code/data/sim_740.pickle and b/code/data/sim_740.pickle differ
diff --git a/code/data/sim_741.pickle b/code/data/sim_741.pickle
index 5c6831a..87eef2a 100644
Binary files a/code/data/sim_741.pickle and b/code/data/sim_741.pickle differ
diff --git a/code/data/sim_742.pickle b/code/data/sim_742.pickle
index 9abc2aa..3da4941 100644
Binary files a/code/data/sim_742.pickle and b/code/data/sim_742.pickle differ
diff --git a/code/data/sim_743.pickle b/code/data/sim_743.pickle
index 42b5a6f..7f53207 100644
Binary files a/code/data/sim_743.pickle and b/code/data/sim_743.pickle differ
diff --git a/code/data/sim_744.pickle b/code/data/sim_744.pickle
index f4f5a6b..58018ca 100644
Binary files a/code/data/sim_744.pickle and b/code/data/sim_744.pickle differ
diff --git a/code/data/sim_745.pickle b/code/data/sim_745.pickle
index 43eb2c0..db21848 100644
Binary files a/code/data/sim_745.pickle and b/code/data/sim_745.pickle differ
diff --git a/code/data/sim_746.pickle b/code/data/sim_746.pickle
index 673b6f6..54a0fa0 100644
Binary files a/code/data/sim_746.pickle and b/code/data/sim_746.pickle differ
diff --git a/code/data/sim_747.pickle b/code/data/sim_747.pickle
index 01e0bae..36557ee 100644
Binary files a/code/data/sim_747.pickle and b/code/data/sim_747.pickle differ
diff --git a/code/data/sim_748.pickle b/code/data/sim_748.pickle
index d5c8c9f..9d35a6c 100644
Binary files a/code/data/sim_748.pickle and b/code/data/sim_748.pickle differ
diff --git a/code/data/sim_749.pickle b/code/data/sim_749.pickle
index 72b6578..92f473f 100644
Binary files a/code/data/sim_749.pickle and b/code/data/sim_749.pickle differ
diff --git a/code/data/sim_75.pickle b/code/data/sim_75.pickle
index 4a803a7..5363b96 100644
Binary files a/code/data/sim_75.pickle and b/code/data/sim_75.pickle differ
diff --git a/code/data/sim_76.pickle b/code/data/sim_76.pickle
index 78ad44a..95fd2e8 100644
Binary files a/code/data/sim_76.pickle and b/code/data/sim_76.pickle differ
diff --git a/code/data/sim_77.pickle b/code/data/sim_77.pickle
index b36b343..739a750 100644
Binary files a/code/data/sim_77.pickle and b/code/data/sim_77.pickle differ
diff --git a/code/data/sim_78.pickle b/code/data/sim_78.pickle
index 4745ad5..c27affd 100644
Binary files a/code/data/sim_78.pickle and b/code/data/sim_78.pickle differ
diff --git a/code/data/sim_79.pickle b/code/data/sim_79.pickle
index 102e24d..5be5cd9 100644
Binary files a/code/data/sim_79.pickle and b/code/data/sim_79.pickle differ
diff --git a/code/data/sim_8.pickle b/code/data/sim_8.pickle
index faceb7e..0f7d53e 100644
Binary files a/code/data/sim_8.pickle and b/code/data/sim_8.pickle differ
diff --git a/code/data/sim_80.pickle b/code/data/sim_80.pickle
index 88f5a2e..70b26df 100644
Binary files a/code/data/sim_80.pickle and b/code/data/sim_80.pickle differ
diff --git a/code/data/sim_81.pickle b/code/data/sim_81.pickle
index 22e5202..0ddf37c 100644
Binary files a/code/data/sim_81.pickle and b/code/data/sim_81.pickle differ
diff --git a/code/data/sim_82.pickle b/code/data/sim_82.pickle
index 94cca3b..718d67e 100644
Binary files a/code/data/sim_82.pickle and b/code/data/sim_82.pickle differ
diff --git a/code/data/sim_83.pickle b/code/data/sim_83.pickle
index ad3d87f..94e9fa8 100644
Binary files a/code/data/sim_83.pickle and b/code/data/sim_83.pickle differ
diff --git a/code/data/sim_84.pickle b/code/data/sim_84.pickle
index b0784af..3c39346 100644
Binary files a/code/data/sim_84.pickle and b/code/data/sim_84.pickle differ
diff --git a/code/data/sim_85.pickle b/code/data/sim_85.pickle
index cbf2cbe..43dad15 100644
Binary files a/code/data/sim_85.pickle and b/code/data/sim_85.pickle differ
diff --git a/code/data/sim_86.pickle b/code/data/sim_86.pickle
index 49b0720..3733348 100644
Binary files a/code/data/sim_86.pickle and b/code/data/sim_86.pickle differ
diff --git a/code/data/sim_87.pickle b/code/data/sim_87.pickle
index b91230e..3b5537a 100644
Binary files a/code/data/sim_87.pickle and b/code/data/sim_87.pickle differ
diff --git a/code/data/sim_88.pickle b/code/data/sim_88.pickle
index 65d3231..c9e4798 100644
Binary files a/code/data/sim_88.pickle and b/code/data/sim_88.pickle differ
diff --git a/code/data/sim_89.pickle b/code/data/sim_89.pickle
index 75b4f8e..eb0c3dd 100644
Binary files a/code/data/sim_89.pickle and b/code/data/sim_89.pickle differ
diff --git a/code/data/sim_9.pickle b/code/data/sim_9.pickle
index 79cbcbb..607dd61 100644
Binary files a/code/data/sim_9.pickle and b/code/data/sim_9.pickle differ
diff --git a/code/data/sim_90.pickle b/code/data/sim_90.pickle
index 22be0e0..87a888d 100644
Binary files a/code/data/sim_90.pickle and b/code/data/sim_90.pickle differ
diff --git a/code/data/sim_91.pickle b/code/data/sim_91.pickle
index 53344ea..4ae637f 100644
Binary files a/code/data/sim_91.pickle and b/code/data/sim_91.pickle differ
diff --git a/code/data/sim_92.pickle b/code/data/sim_92.pickle
index 4abb0bc..e5c70bf 100644
Binary files a/code/data/sim_92.pickle and b/code/data/sim_92.pickle differ
diff --git a/code/data/sim_93.pickle b/code/data/sim_93.pickle
index 2c04461..f06466a 100644
Binary files a/code/data/sim_93.pickle and b/code/data/sim_93.pickle differ
diff --git a/code/data/sim_94.pickle b/code/data/sim_94.pickle
index 1414a3b..1759f6e 100644
Binary files a/code/data/sim_94.pickle and b/code/data/sim_94.pickle differ
diff --git a/code/data/sim_95.pickle b/code/data/sim_95.pickle
index 973b51e..8890388 100644
Binary files a/code/data/sim_95.pickle and b/code/data/sim_95.pickle differ
diff --git a/code/data/sim_96.pickle b/code/data/sim_96.pickle
index 14e8708..a6be0ea 100644
Binary files a/code/data/sim_96.pickle and b/code/data/sim_96.pickle differ
diff --git a/code/data/sim_97.pickle b/code/data/sim_97.pickle
index de0609f..9605e60 100644
Binary files a/code/data/sim_97.pickle and b/code/data/sim_97.pickle differ
diff --git a/code/data/sim_98.pickle b/code/data/sim_98.pickle
index 0148bae..2935da5 100644
Binary files a/code/data/sim_98.pickle and b/code/data/sim_98.pickle differ
diff --git a/code/data/sim_99.pickle b/code/data/sim_99.pickle
index ac0e0b6..580db55 100644
Binary files a/code/data/sim_99.pickle and b/code/data/sim_99.pickle differ
diff --git a/code/lstm.py b/code/lstm.py
index 85f0ee3..cde0358 100644
--- a/code/lstm.py
+++ b/code/lstm.py
@@ -106,14 +106,6 @@ def train_model(model, optimizer, data_loader, test_loader, loss_module, num_epo
             data_inputs = data_inputs.to(device)
             data_labels = data_labels.to(device)
             start_pos = start_pos.to(device)
-            # print(data_inputs.shape)
-            # print("labels", data_labels.shape)
-            # print(data_inputs[0].shape)
-            # print(data_labels[0].reshape(-1, 20, 24))
-            # print(epoch)
-            # print(data_inputs.shape)
-            # data_inputs = data_inputs.reshape(-1,20, 24) #????
-            # data_labels = data_labels.reshape(-1, 20, 24)
 
             output, _ = model(data_inputs)
 
diff --git a/code/new_mujoco.py b/code/new_mujoco.py
index 32a903e..a590050 100644
--- a/code/new_mujoco.py
+++ b/code/new_mujoco.py
@@ -4,7 +4,7 @@ import itertools
 from create_strings import create_string
 import pickle
 import torch
-from pyquaternion import Quaternion
+# from pyquaternion import Quaternion
 import roma
 
 
@@ -153,11 +153,13 @@ def generate_data(string, n_steps):
                 "quat": np.empty((n_steps//10, 1, 7)),
                 "log_quat": np.empty((n_steps//10, 1, 7)),
                 "pos_diff": np.empty((n_steps//10, 8, 3)),
-                "pos_diff_start": np.empty((n_steps//10, 8, 3))
+                "pos_diff_start": np.empty((n_steps//10, 8, 3)),
+                "pos_norm": np.empty((n_steps//10, 8, 3))
               }
 
     for i in range(n_steps):
         sim.step()
+        # viewer.render()
         if i == 0:
             prev = get_vert_coords(sim, object_id-1, xyz_local).T
             start = prev
@@ -172,13 +174,15 @@ def generate_data(string, n_steps):
                 dataset["pos_diff"][i//10] = get_vert_coords(sim, object_id-1, xyz_local).T - prev
                 prev = get_vert_coords(sim, object_id-1, xyz_local).T
                 dataset["pos_diff_start"][i//10] = get_vert_coords(sim, object_id-1, xyz_local).T - start
+
+    dataset["pos_norm"] = (dataset["pos"] - np.mean(dataset["pos"], axis=(0,1))) / np.std(dataset["pos"], axis=(0,1))
     return dataset
 
 
 def write_data_nsim(num_sims, n_steps, obj_type):
     for sim_id in range(num_sims):
         euler = f"{np.random.uniform(-80, 80)} {np.random.uniform(-80, 80)} {np.random.uniform(-80, 80)}"
-        pos = f"{np.random.uniform(-100, 100)} {np.random.uniform(-100, 100)} {np.random.uniform(40, 300)}"
+        pos = f"{np.random.uniform(-10, 10)} {np.random.uniform(-10, 10)} {np.random.uniform(4, 30)}"
         size = f"{np.random.uniform(0.1, 1)} {np.random.uniform(0.1, 1)} {np.random.uniform(0.1, 1)}"
 
         string = create_string(euler, pos, obj_type, size)
@@ -189,5 +193,9 @@ def write_data_nsim(num_sims, n_steps, obj_type):
             pickle.dump(sim_data, f)
         f.close()
 
-# obj_type = "box"
-# write_data_nsim(750, 300, obj_type)
\ No newline at end of file
+## Uncomment to create random data
+n_sims = 750
+n_steps = 300
+obj_type = "box"
+
+write_data_nsim(n_sims, n_steps, obj_type)
\ No newline at end of file
diff --git a/code/results.txt b/code/results.txt
deleted file mode 100644
index a36b5df..0000000
--- a/code/results.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-Data type: quat, num_epochs: 500, 	 lr: 0.001 
-oss: 43.4288763231 
-
diff --git a/code/results/.DS_Store b/code/results/.DS_Store
index c0b4f5f..b0b6f12 100644
Binary files a/code/results/.DS_Store and b/code/results/.DS_Store differ
diff --git a/code/results_quat_500_0.001.txt b/code/results_quat_500_0.001.txt
deleted file mode 100644
index dcbb455..0000000
--- a/code/results_quat_500_0.001.txt
+++ /dev/null
@@ -1 +0,0 @@
-Data type: quat, num_epochs: 500, 	 lr: 0.001 
diff --git a/code/test_quaternion.py b/code/test_quaternion.py
deleted file mode 100644
index 7ecd41e..0000000
--- a/code/test_quaternion.py
+++ /dev/null
@@ -1,3 +0,0 @@
-from pyquaternion import Quaternion
-
-
diff --git a/code/torch_nn.py b/code/torch_nn.py
index 8c1cba1..8b1229f 100644
--- a/code/torch_nn.py
+++ b/code/torch_nn.py
@@ -122,7 +122,10 @@ def train_model(model, optimizer, data_loader, test_loader, loss_module, num_epo
 
             ## Step 1: Move input data to device (only strictly necessary if we use GPU)
             data_inputs = data_inputs.to(device)
+            # print(data_inputs)
+
             data_labels = data_labels.to(device)
+            # print(data_labels)
             start_pos = start_pos.to(device)
 
             ## Step 2: Run the model on the input data
@@ -244,7 +247,7 @@ config = dict(
     loss_type = "L1",
     loss_reduction_type = "mean",
     optimizer = "Adam",
-    data_type = "pos_diff_start",
+    data_type = "pos_norm",
     architecture = "fcnn",
     train_sims = list(train_sims),
     test_sims = list(test_sims),
@@ -267,6 +270,7 @@ ndata_dict = {"pos": 24,
                 "log_quat": 7,
                 "pos_diff": 24,
                 "pos_diff_start": 24,
+                "pos_norm": 24
             }
 
 model = model_pipeline(config, ndata_dict, loss_dict, optimizer_dict)
\ No newline at end of file
diff --git a/code/wandb/latest-run b/code/wandb/latest-run
index 4e439e2..32308aa 120000
--- a/code/wandb/latest-run
+++ b/code/wandb/latest-run
@@ -1 +1 @@
-run-20220916_153856-1rl5zmmg
\ No newline at end of file
+run-20220919_153807-rfc2yr04
\ No newline at end of file
